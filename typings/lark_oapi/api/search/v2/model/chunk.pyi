from lark_oapi.core.construct import init as init

class Chunk:
    chunk_id: str | None
    doc_id: str | None
    dataset_id: str | None
    update_time: str | None
    content: str | None
    filter_data: str | None
    score: float | None
    token_num: int | None
    overlength: bool | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ChunkBuilder: ...

class ChunkBuilder:
    def __init__(self) -> None: ...
    def chunk_id(self, chunk_id: str) -> ChunkBuilder: ...
    def doc_id(self, doc_id: str) -> ChunkBuilder: ...
    def dataset_id(self, dataset_id: str) -> ChunkBuilder: ...
    def update_time(self, update_time: str) -> ChunkBuilder: ...
    def content(self, content: str) -> ChunkBuilder: ...
    def filter_data(self, filter_data: str) -> ChunkBuilder: ...
    def score(self, score: float) -> ChunkBuilder: ...
    def token_num(self, token_num: int) -> ChunkBuilder: ...
    def overlength(self, overlength: bool) -> ChunkBuilder: ...
    def build(self) -> Chunk: ...
