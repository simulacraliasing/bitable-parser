from lark_oapi.core.construct import init as init

class BasicInfo:
    log_type: str | None
    audit_scope: str | None
    env_type: str | None
    app_id: str | None
    module: str | None
    op_type: str | None
    app_name: dict[str, str] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> BasicInfoBuilder: ...

class BasicInfoBuilder:
    def __init__(self) -> None: ...
    def log_type(self, log_type: str) -> BasicInfoBuilder: ...
    def audit_scope(self, audit_scope: str) -> BasicInfoBuilder: ...
    def env_type(self, env_type: str) -> BasicInfoBuilder: ...
    def app_id(self, app_id: str) -> BasicInfoBuilder: ...
    def module(self, module: str) -> BasicInfoBuilder: ...
    def op_type(self, op_type: str) -> BasicInfoBuilder: ...
    def app_name(self, app_name: dict[str, str]) -> BasicInfoBuilder: ...
    def build(self) -> BasicInfo: ...
