from lark_oapi.core.construct import init as init

class ExecuteApplicationFlowRequestBody:
    is_async: bool | None
    idempotent_key: str | None
    loop_masks: list[str] | None
    params: str | None
    operator: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ExecuteApplicationFlowRequestBodyBuilder: ...

class ExecuteApplicationFlowRequestBodyBuilder:
    def __init__(self) -> None: ...
    def is_async(self, is_async: bool) -> ExecuteApplicationFlowRequestBodyBuilder: ...
    def idempotent_key(self, idempotent_key: str) -> ExecuteApplicationFlowRequestBodyBuilder: ...
    def loop_masks(self, loop_masks: list[str]) -> ExecuteApplicationFlowRequestBodyBuilder: ...
    def params(self, params: str) -> ExecuteApplicationFlowRequestBodyBuilder: ...
    def operator(self, operator: str) -> ExecuteApplicationFlowRequestBodyBuilder: ...
    def build(self) -> ExecuteApplicationFlowRequestBody: ...
