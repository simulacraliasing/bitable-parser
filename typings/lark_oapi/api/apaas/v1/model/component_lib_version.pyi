from .i18n import I18n as I18n
from .lookup_with_avatar import LookupWithAvatar as LookupWithAvatar
from lark_oapi.core.construct import init as init

class ComponentLibVersion:
    version_number: str | None
    directions: list[I18n] | None
    status: int | None
    is_latest: bool | None
    settings: str | None
    isv_link: str | None
    is_isv_market_version: bool | None
    link: str | None
    is_market_version: bool | None
    created_at: str | None
    created_by: LookupWithAvatar | None
    applied_at: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ComponentLibVersionBuilder: ...

class ComponentLibVersionBuilder:
    def __init__(self) -> None: ...
    def version_number(self, version_number: str) -> ComponentLibVersionBuilder: ...
    def directions(self, directions: list[I18n]) -> ComponentLibVersionBuilder: ...
    def status(self, status: int) -> ComponentLibVersionBuilder: ...
    def is_latest(self, is_latest: bool) -> ComponentLibVersionBuilder: ...
    def settings(self, settings: str) -> ComponentLibVersionBuilder: ...
    def isv_link(self, isv_link: str) -> ComponentLibVersionBuilder: ...
    def is_isv_market_version(self, is_isv_market_version: bool) -> ComponentLibVersionBuilder: ...
    def link(self, link: str) -> ComponentLibVersionBuilder: ...
    def is_market_version(self, is_market_version: bool) -> ComponentLibVersionBuilder: ...
    def created_at(self, created_at: str) -> ComponentLibVersionBuilder: ...
    def created_by(self, created_by: LookupWithAvatar) -> ComponentLibVersionBuilder: ...
    def applied_at(self, applied_at: str) -> ComponentLibVersionBuilder: ...
    def build(self) -> ComponentLibVersion: ...
