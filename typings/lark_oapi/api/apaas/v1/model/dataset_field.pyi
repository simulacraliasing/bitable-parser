from .dataset_field_type import DatasetFieldType as DatasetFieldType
from .dataset_lookup_user import DatasetLookupUser as DatasetLookupUser
from lark_oapi.core.construct import init as init

class DatasetField:
    api_id: str | None
    api_name: str | None
    label: dict[str, str] | None
    dataset_api_id: str | None
    dataset_api_name: str | None
    type: DatasetFieldType | None
    encrypt_type: str | None
    create_time: int | None
    created_by: DatasetLookupUser | None
    update_time: int | None
    updated_by: DatasetLookupUser | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> DatasetFieldBuilder: ...

class DatasetFieldBuilder:
    def __init__(self) -> None: ...
    def api_id(self, api_id: str) -> DatasetFieldBuilder: ...
    def api_name(self, api_name: str) -> DatasetFieldBuilder: ...
    def label(self, label: dict[str, str]) -> DatasetFieldBuilder: ...
    def dataset_api_id(self, dataset_api_id: str) -> DatasetFieldBuilder: ...
    def dataset_api_name(self, dataset_api_name: str) -> DatasetFieldBuilder: ...
    def type(self, type: DatasetFieldType) -> DatasetFieldBuilder: ...
    def encrypt_type(self, encrypt_type: str) -> DatasetFieldBuilder: ...
    def create_time(self, create_time: int) -> DatasetFieldBuilder: ...
    def created_by(self, created_by: DatasetLookupUser) -> DatasetFieldBuilder: ...
    def update_time(self, update_time: int) -> DatasetFieldBuilder: ...
    def updated_by(self, updated_by: DatasetLookupUser) -> DatasetFieldBuilder: ...
    def build(self) -> DatasetField: ...
