from .lookup_with_avatar import LookupWithAvatar as LookupWithAvatar
from lark_oapi.core.construct import init as init

class AuditLogOpInfo:
    operator: LookupWithAvatar | None
    outsider: bool | None
    op_detail: dict[str, str] | None
    status: str | None
    failed_reason: str | None
    failed_reason_i18n: dict[str, str] | None
    op_time: str | None
    data_object: str | None
    op_source: str | None
    data_changes: list[str] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> AuditLogOpInfoBuilder: ...

class AuditLogOpInfoBuilder:
    def __init__(self) -> None: ...
    def operator(self, operator: LookupWithAvatar) -> AuditLogOpInfoBuilder: ...
    def outsider(self, outsider: bool) -> AuditLogOpInfoBuilder: ...
    def op_detail(self, op_detail: dict[str, str]) -> AuditLogOpInfoBuilder: ...
    def status(self, status: str) -> AuditLogOpInfoBuilder: ...
    def failed_reason(self, failed_reason: str) -> AuditLogOpInfoBuilder: ...
    def failed_reason_i18n(self, failed_reason_i18n: dict[str, str]) -> AuditLogOpInfoBuilder: ...
    def op_time(self, op_time: str) -> AuditLogOpInfoBuilder: ...
    def data_object(self, data_object: str) -> AuditLogOpInfoBuilder: ...
    def op_source(self, op_source: str) -> AuditLogOpInfoBuilder: ...
    def data_changes(self, data_changes: list[str]) -> AuditLogOpInfoBuilder: ...
    def build(self) -> AuditLogOpInfo: ...
