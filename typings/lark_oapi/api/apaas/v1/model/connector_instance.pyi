from .connector_instance_definition import ConnectorInstanceDefinition as ConnectorInstanceDefinition
from lark_oapi.core.construct import init as init

class ConnectorInstance:
    api_id: str | None
    api_name: str | None
    label: dict[str, str] | None
    desc: dict[str, str] | None
    out_biz_type: str | None
    out_biz_id: str | None
    definition: ConnectorInstanceDefinition | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ConnectorInstanceBuilder: ...

class ConnectorInstanceBuilder:
    def __init__(self) -> None: ...
    def api_id(self, api_id: str) -> ConnectorInstanceBuilder: ...
    def api_name(self, api_name: str) -> ConnectorInstanceBuilder: ...
    def label(self, label: dict[str, str]) -> ConnectorInstanceBuilder: ...
    def desc(self, desc: dict[str, str]) -> ConnectorInstanceBuilder: ...
    def out_biz_type(self, out_biz_type: str) -> ConnectorInstanceBuilder: ...
    def out_biz_id(self, out_biz_id: str) -> ConnectorInstanceBuilder: ...
    def definition(self, definition: ConnectorInstanceDefinition) -> ConnectorInstanceBuilder: ...
    def build(self) -> ConnectorInstance: ...
