from .i18n import I18n as I18n
from .icon import Icon as Icon
from .lookup_with_avatar import LookupWithAvatar as LookupWithAvatar
from .task_info import TaskInfo as TaskInfo
from lark_oapi.core.construct import init as init

class ComponentLibBasic:
    lib_id: str | None
    namespace: str | None
    names: list[I18n] | None
    descriptions: list[I18n] | None
    logo: Icon | None
    lib_type: str | None
    owner: LookupWithAvatar | None
    install_task_info: TaskInfo | None
    sandbox_tenant_name: str | None
    status: str | None
    i_s_v_market_version: str | None
    i_s_v_customer_count: str | None
    created_at: str | None
    created_by: LookupWithAvatar | None
    updated_at: str | None
    updated_by: LookupWithAvatar | None
    lib_status: str | None
    on_top: bool | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ComponentLibBasicBuilder: ...

class ComponentLibBasicBuilder:
    def __init__(self) -> None: ...
    def lib_id(self, lib_id: str) -> ComponentLibBasicBuilder: ...
    def namespace(self, namespace: str) -> ComponentLibBasicBuilder: ...
    def names(self, names: list[I18n]) -> ComponentLibBasicBuilder: ...
    def descriptions(self, descriptions: list[I18n]) -> ComponentLibBasicBuilder: ...
    def logo(self, logo: Icon) -> ComponentLibBasicBuilder: ...
    def lib_type(self, lib_type: str) -> ComponentLibBasicBuilder: ...
    def owner(self, owner: LookupWithAvatar) -> ComponentLibBasicBuilder: ...
    def install_task_info(self, install_task_info: TaskInfo) -> ComponentLibBasicBuilder: ...
    def sandbox_tenant_name(self, sandbox_tenant_name: str) -> ComponentLibBasicBuilder: ...
    def status(self, status: str) -> ComponentLibBasicBuilder: ...
    def i_s_v_market_version(self, i_s_v_market_version: str) -> ComponentLibBasicBuilder: ...
    def i_s_v_customer_count(self, i_s_v_customer_count: str) -> ComponentLibBasicBuilder: ...
    def created_at(self, created_at: str) -> ComponentLibBasicBuilder: ...
    def created_by(self, created_by: LookupWithAvatar) -> ComponentLibBasicBuilder: ...
    def updated_at(self, updated_at: str) -> ComponentLibBasicBuilder: ...
    def updated_by(self, updated_by: LookupWithAvatar) -> ComponentLibBasicBuilder: ...
    def lib_status(self, lib_status: str) -> ComponentLibBasicBuilder: ...
    def on_top(self, on_top: bool) -> ComponentLibBasicBuilder: ...
    def build(self) -> ComponentLibBasic: ...
