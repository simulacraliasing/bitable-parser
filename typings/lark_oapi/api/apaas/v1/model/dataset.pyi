from .dataset_field import DatasetField as DatasetField
from .dataset_lookup_user import DatasetLookupUser as DatasetLookupUser
from .dataset_source import DatasetSource as DatasetSource
from lark_oapi.core.construct import init as init

class Dataset:
    namespace: str | None
    api_id: str | None
    api_name: str | None
    label: dict[str, str] | None
    source: DatasetSource | None
    fields: list[DatasetField] | None
    data_refresh_time: int | None
    create_time: int | None
    created_by: DatasetLookupUser | None
    update_time: int | None
    updated_by: DatasetLookupUser | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> DatasetBuilder: ...

class DatasetBuilder:
    def __init__(self) -> None: ...
    def namespace(self, namespace: str) -> DatasetBuilder: ...
    def api_id(self, api_id: str) -> DatasetBuilder: ...
    def api_name(self, api_name: str) -> DatasetBuilder: ...
    def label(self, label: dict[str, str]) -> DatasetBuilder: ...
    def source(self, source: DatasetSource) -> DatasetBuilder: ...
    def fields(self, fields: list[DatasetField]) -> DatasetBuilder: ...
    def data_refresh_time(self, data_refresh_time: int) -> DatasetBuilder: ...
    def create_time(self, create_time: int) -> DatasetBuilder: ...
    def created_by(self, created_by: DatasetLookupUser) -> DatasetBuilder: ...
    def update_time(self, update_time: int) -> DatasetBuilder: ...
    def updated_by(self, updated_by: DatasetLookupUser) -> DatasetBuilder: ...
    def build(self) -> Dataset: ...
