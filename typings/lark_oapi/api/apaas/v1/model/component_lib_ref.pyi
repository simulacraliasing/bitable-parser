from .component_lib_basic import ComponentLibBasic as ComponentLibBasic
from .i18n import I18n as I18n
from .lookup_with_avatar import LookupWithAvatar as LookupWithAvatar
from .task_info import TaskInfo as TaskInfo
from lark_oapi.core.construct import init as init

class ComponentLibRef:
    basic_info: ComponentLibBasic | None
    version_number: str | None
    can_upgrade: bool | None
    version_id: str | None
    comps_count: str | None
    operating_task_info: TaskInfo | None
    operating_type: str | None
    latest_version_number: str | None
    installed_at: str | None
    installed_by: LookupWithAvatar | None
    updated_at: str | None
    updated_by: LookupWithAvatar | None
    developer_names: list[I18n] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ComponentLibRefBuilder: ...

class ComponentLibRefBuilder:
    def __init__(self) -> None: ...
    def basic_info(self, basic_info: ComponentLibBasic) -> ComponentLibRefBuilder: ...
    def version_number(self, version_number: str) -> ComponentLibRefBuilder: ...
    def can_upgrade(self, can_upgrade: bool) -> ComponentLibRefBuilder: ...
    def version_id(self, version_id: str) -> ComponentLibRefBuilder: ...
    def comps_count(self, comps_count: str) -> ComponentLibRefBuilder: ...
    def operating_task_info(self, operating_task_info: TaskInfo) -> ComponentLibRefBuilder: ...
    def operating_type(self, operating_type: str) -> ComponentLibRefBuilder: ...
    def latest_version_number(self, latest_version_number: str) -> ComponentLibRefBuilder: ...
    def installed_at(self, installed_at: str) -> ComponentLibRefBuilder: ...
    def installed_by(self, installed_by: LookupWithAvatar) -> ComponentLibRefBuilder: ...
    def updated_at(self, updated_at: str) -> ComponentLibRefBuilder: ...
    def updated_by(self, updated_by: LookupWithAvatar) -> ComponentLibRefBuilder: ...
    def developer_names(self, developer_names: list[I18n]) -> ComponentLibRefBuilder: ...
    def build(self) -> ComponentLibRef: ...
