from lark_oapi.core.construct import init as init

class RuntimeLogTag:
    key: str | None
    value: str | None
    value_type: str | None
    uri: str | None
    attachs: dict[str, str] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> RuntimeLogTagBuilder: ...

class RuntimeLogTagBuilder:
    def __init__(self) -> None: ...
    def key(self, key: str) -> RuntimeLogTagBuilder: ...
    def value(self, value: str) -> RuntimeLogTagBuilder: ...
    def value_type(self, value_type: str) -> RuntimeLogTagBuilder: ...
    def uri(self, uri: str) -> RuntimeLogTagBuilder: ...
    def attachs(self, attachs: dict[str, str]) -> RuntimeLogTagBuilder: ...
    def build(self) -> RuntimeLogTag: ...
