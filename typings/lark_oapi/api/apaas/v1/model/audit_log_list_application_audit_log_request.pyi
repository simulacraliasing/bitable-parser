from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class AuditLogListApplicationAuditLogRequest(BaseRequest):
    page_size: str | None
    offset: str | None
    quick_query: str | None
    from_: str | None
    to: str | None
    log_type: str | None
    filter: str | None
    columns: list[str] | None
    sort_by: str | None
    sort_order: str | None
    app_type: str | None
    namespace: str | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> AuditLogListApplicationAuditLogRequestBuilder: ...

class AuditLogListApplicationAuditLogRequestBuilder:
    def __init__(self) -> None: ...
    def page_size(self, page_size: str) -> AuditLogListApplicationAuditLogRequestBuilder: ...
    def offset(self, offset: str) -> AuditLogListApplicationAuditLogRequestBuilder: ...
    def quick_query(self, quick_query: str) -> AuditLogListApplicationAuditLogRequestBuilder: ...
    def from_(self, from_: str) -> AuditLogListApplicationAuditLogRequestBuilder: ...
    def to(self, to: str) -> AuditLogListApplicationAuditLogRequestBuilder: ...
    def log_type(self, log_type: str) -> AuditLogListApplicationAuditLogRequestBuilder: ...
    def filter(self, filter: str) -> AuditLogListApplicationAuditLogRequestBuilder: ...
    def columns(self, columns: list[str]) -> AuditLogListApplicationAuditLogRequestBuilder: ...
    def sort_by(self, sort_by: str) -> AuditLogListApplicationAuditLogRequestBuilder: ...
    def sort_order(self, sort_order: str) -> AuditLogListApplicationAuditLogRequestBuilder: ...
    def app_type(self, app_type: str) -> AuditLogListApplicationAuditLogRequestBuilder: ...
    def namespace(self, namespace: str) -> AuditLogListApplicationAuditLogRequestBuilder: ...
    def build(self) -> AuditLogListApplicationAuditLogRequest: ...
