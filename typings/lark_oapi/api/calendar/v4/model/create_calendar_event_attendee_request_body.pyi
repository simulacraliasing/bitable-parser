from .calendar_event_attendee import CalendarEventAttendee as CalendarEventAttendee
from lark_oapi.core.construct import init as init

class CreateCalendarEventAttendeeRequestBody:
    attendees: list[CalendarEventAttendee] | None
    need_notification: bool | None
    instance_start_time_admin: str | None
    is_enable_admin: bool | None
    add_operator_to_attendee: bool | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> CreateCalendarEventAttendeeRequestBodyBuilder: ...

class CreateCalendarEventAttendeeRequestBodyBuilder:
    def __init__(self) -> None: ...
    def attendees(self, attendees: list[CalendarEventAttendee]) -> CreateCalendarEventAttendeeRequestBodyBuilder: ...
    def need_notification(self, need_notification: bool) -> CreateCalendarEventAttendeeRequestBodyBuilder: ...
    def instance_start_time_admin(self, instance_start_time_admin: str) -> CreateCalendarEventAttendeeRequestBodyBuilder: ...
    def is_enable_admin(self, is_enable_admin: bool) -> CreateCalendarEventAttendeeRequestBodyBuilder: ...
    def add_operator_to_attendee(self, add_operator_to_attendee: bool) -> CreateCalendarEventAttendeeRequestBodyBuilder: ...
    def build(self) -> CreateCalendarEventAttendeeRequestBody: ...
