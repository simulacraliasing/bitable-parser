from .calendar_event_attendee import CalendarEventAttendee as CalendarEventAttendee
from .event_location import EventLocation as EventLocation
from .event_organizer import EventOrganizer as EventOrganizer
from .time_info import TimeInfo as TimeInfo
from .vchat import Vchat as Vchat
from lark_oapi.core.construct import init as init

class Instance:
    event_id: str | None
    summary: str | None
    description: str | None
    start_time: TimeInfo | None
    end_time: TimeInfo | None
    status: str | None
    is_exception: bool | None
    app_link: str | None
    organizer_calendar_id: str | None
    vchat: Vchat | None
    visibility: str | None
    attendee_ability: str | None
    free_busy_status: str | None
    location: EventLocation | None
    color: int | None
    recurring_event_id: str | None
    event_organizer: EventOrganizer | None
    attendees: list[CalendarEventAttendee] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> InstanceBuilder: ...

class InstanceBuilder:
    def __init__(self) -> None: ...
    def event_id(self, event_id: str) -> InstanceBuilder: ...
    def summary(self, summary: str) -> InstanceBuilder: ...
    def description(self, description: str) -> InstanceBuilder: ...
    def start_time(self, start_time: TimeInfo) -> InstanceBuilder: ...
    def end_time(self, end_time: TimeInfo) -> InstanceBuilder: ...
    def status(self, status: str) -> InstanceBuilder: ...
    def is_exception(self, is_exception: bool) -> InstanceBuilder: ...
    def app_link(self, app_link: str) -> InstanceBuilder: ...
    def organizer_calendar_id(self, organizer_calendar_id: str) -> InstanceBuilder: ...
    def vchat(self, vchat: Vchat) -> InstanceBuilder: ...
    def visibility(self, visibility: str) -> InstanceBuilder: ...
    def attendee_ability(self, attendee_ability: str) -> InstanceBuilder: ...
    def free_busy_status(self, free_busy_status: str) -> InstanceBuilder: ...
    def location(self, location: EventLocation) -> InstanceBuilder: ...
    def color(self, color: int) -> InstanceBuilder: ...
    def recurring_event_id(self, recurring_event_id: str) -> InstanceBuilder: ...
    def event_organizer(self, event_organizer: EventOrganizer) -> InstanceBuilder: ...
    def attendees(self, attendees: list[CalendarEventAttendee]) -> InstanceBuilder: ...
    def build(self) -> Instance: ...
