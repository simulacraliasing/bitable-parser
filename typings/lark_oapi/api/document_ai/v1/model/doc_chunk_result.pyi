from .doc_chunk_position import DocChunkPosition as DocChunkPosition
from .doc_chunk_table_detail import DocChunkTableDetail as DocChunkTableDetail
from .image_detail import ImageDetail as ImageDetail
from .llm_detail import LlmDetail as LlmDetail
from lark_oapi.core.construct import init as init

class DocChunkResult:
    id: int | None
    type: str | None
    positions: DocChunkPosition | None
    text: str | None
    level: int | None
    parent: int | None
    children: list[int] | None
    label: str | None
    block_id: str | None
    table_detail: DocChunkTableDetail | None
    llm_detail: LlmDetail | None
    image_detail: ImageDetail | None
    slide_index: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> DocChunkResultBuilder: ...

class DocChunkResultBuilder:
    def __init__(self) -> None: ...
    def id(self, id: int) -> DocChunkResultBuilder: ...
    def type(self, type: str) -> DocChunkResultBuilder: ...
    def positions(self, positions: DocChunkPosition) -> DocChunkResultBuilder: ...
    def text(self, text: str) -> DocChunkResultBuilder: ...
    def level(self, level: int) -> DocChunkResultBuilder: ...
    def parent(self, parent: int) -> DocChunkResultBuilder: ...
    def children(self, children: list[int]) -> DocChunkResultBuilder: ...
    def label(self, label: str) -> DocChunkResultBuilder: ...
    def block_id(self, block_id: str) -> DocChunkResultBuilder: ...
    def table_detail(self, table_detail: DocChunkTableDetail) -> DocChunkResultBuilder: ...
    def llm_detail(self, llm_detail: LlmDetail) -> DocChunkResultBuilder: ...
    def image_detail(self, image_detail: ImageDetail) -> DocChunkResultBuilder: ...
    def slide_index(self, slide_index: str) -> DocChunkResultBuilder: ...
    def build(self) -> DocChunkResult: ...
