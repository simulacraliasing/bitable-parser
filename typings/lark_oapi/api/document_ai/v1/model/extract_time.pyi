from .extract_term import ExtractTerm as ExtractTerm
from lark_oapi.core.construct import init as init

class ExtractTime:
    time_start: str | None
    time_end: str | None
    original_time_start: str | None
    original_time_end: str | None
    text_start: str | None
    text_end: str | None
    initial_term: ExtractTerm | None
    text_initial_term: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ExtractTimeBuilder: ...

class ExtractTimeBuilder:
    def __init__(self) -> None: ...
    def time_start(self, time_start: str) -> ExtractTimeBuilder: ...
    def time_end(self, time_end: str) -> ExtractTimeBuilder: ...
    def original_time_start(self, original_time_start: str) -> ExtractTimeBuilder: ...
    def original_time_end(self, original_time_end: str) -> ExtractTimeBuilder: ...
    def text_start(self, text_start: str) -> ExtractTimeBuilder: ...
    def text_end(self, text_end: str) -> ExtractTimeBuilder: ...
    def initial_term(self, initial_term: ExtractTerm) -> ExtractTimeBuilder: ...
    def text_initial_term(self, text_initial_term: str) -> ExtractTimeBuilder: ...
    def build(self) -> ExtractTime: ...
