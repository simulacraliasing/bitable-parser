from .resume_award import ResumeAward as ResumeAward
from .resume_career import ResumeCareer as ResumeCareer
from .resume_certificate import ResumeCertificate as ResumeCertificate
from .resume_competition import ResumeCompetition as ResumeCompetition
from .resume_education import ResumeEducation as ResumeEducation
from .resume_language import ResumeLanguage as ResumeLanguage
from .resume_project import ResumeProject as ResumeProject
from lark_oapi.core.construct import init as init

class Resume:
    file_md5: str | None
    content: str | None
    new_content: str | None
    name: str | None
    email: str | None
    mobile: str | None
    mobile_is_virtual: bool | None
    country_code: str | None
    educations: list[ResumeEducation] | None
    careers: list[ResumeCareer] | None
    projects: list[ResumeProject] | None
    work_year: int | None
    date_of_birth: str | None
    gender: int | None
    willing_positions: list[str] | None
    current_location: str | None
    willing_locations: list[str] | None
    home_location: str | None
    languages: list[ResumeLanguage] | None
    awards: list[ResumeAward] | None
    certificates: list[ResumeCertificate] | None
    competitions: list[ResumeCompetition] | None
    self_evaluation: str | None
    urls: list[str] | None
    social_links: list[str] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ResumeBuilder: ...

class ResumeBuilder:
    def __init__(self) -> None: ...
    def file_md5(self, file_md5: str) -> ResumeBuilder: ...
    def content(self, content: str) -> ResumeBuilder: ...
    def new_content(self, new_content: str) -> ResumeBuilder: ...
    def name(self, name: str) -> ResumeBuilder: ...
    def email(self, email: str) -> ResumeBuilder: ...
    def mobile(self, mobile: str) -> ResumeBuilder: ...
    def mobile_is_virtual(self, mobile_is_virtual: bool) -> ResumeBuilder: ...
    def country_code(self, country_code: str) -> ResumeBuilder: ...
    def educations(self, educations: list[ResumeEducation]) -> ResumeBuilder: ...
    def careers(self, careers: list[ResumeCareer]) -> ResumeBuilder: ...
    def projects(self, projects: list[ResumeProject]) -> ResumeBuilder: ...
    def work_year(self, work_year: int) -> ResumeBuilder: ...
    def date_of_birth(self, date_of_birth: str) -> ResumeBuilder: ...
    def gender(self, gender: int) -> ResumeBuilder: ...
    def willing_positions(self, willing_positions: list[str]) -> ResumeBuilder: ...
    def current_location(self, current_location: str) -> ResumeBuilder: ...
    def willing_locations(self, willing_locations: list[str]) -> ResumeBuilder: ...
    def home_location(self, home_location: str) -> ResumeBuilder: ...
    def languages(self, languages: list[ResumeLanguage]) -> ResumeBuilder: ...
    def awards(self, awards: list[ResumeAward]) -> ResumeBuilder: ...
    def certificates(self, certificates: list[ResumeCertificate]) -> ResumeBuilder: ...
    def competitions(self, competitions: list[ResumeCompetition]) -> ResumeBuilder: ...
    def self_evaluation(self, self_evaluation: str) -> ResumeBuilder: ...
    def urls(self, urls: list[str]) -> ResumeBuilder: ...
    def social_links(self, social_links: list[str]) -> ResumeBuilder: ...
    def build(self) -> Resume: ...
