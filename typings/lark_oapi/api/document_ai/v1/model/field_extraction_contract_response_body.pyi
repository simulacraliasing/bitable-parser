from .bank_info import BankInfo as BankInfo
from .body_info import BodyInfo as BodyInfo
from .extract_copy import ExtractCopy as ExtractCopy
from .extract_currency import ExtractCurrency as ExtractCurrency
from .extract_price import ExtractPrice as ExtractPrice
from .extract_time import ExtractTime as ExtractTime
from lark_oapi.core.construct import init as init

class FieldExtractionContractResponseBody:
    file_id: str | None
    price: ExtractPrice | None
    time: ExtractTime | None
    copy: ExtractCopy | None
    currency: ExtractCurrency | None
    header: str | None
    body_info: list[BodyInfo] | None
    bank_info: list[BankInfo] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> FieldExtractionContractResponseBodyBuilder: ...

class FieldExtractionContractResponseBodyBuilder:
    def __init__(self) -> None: ...
    def file_id(self, file_id: str) -> FieldExtractionContractResponseBodyBuilder: ...
    def price(self, price: ExtractPrice) -> FieldExtractionContractResponseBodyBuilder: ...
    def time(self, time: ExtractTime) -> FieldExtractionContractResponseBodyBuilder: ...
    def copy(self, copy: ExtractCopy) -> FieldExtractionContractResponseBodyBuilder: ...
    def currency(self, currency: ExtractCurrency) -> FieldExtractionContractResponseBodyBuilder: ...
    def header(self, header: str) -> FieldExtractionContractResponseBodyBuilder: ...
    def body_info(self, body_info: list[BodyInfo]) -> FieldExtractionContractResponseBodyBuilder: ...
    def bank_info(self, bank_info: list[BankInfo]) -> FieldExtractionContractResponseBodyBuilder: ...
    def build(self) -> FieldExtractionContractResponseBody: ...
