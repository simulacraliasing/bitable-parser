from ..model.convert_document_request import ConvertDocumentRequest as ConvertDocumentRequest
from ..model.convert_document_response import ConvertDocumentResponse as ConvertDocumentResponse
from ..model.create_document_request import CreateDocumentRequest as CreateDocumentRequest
from ..model.create_document_response import CreateDocumentResponse as CreateDocumentResponse
from ..model.get_document_request import GetDocumentRequest as GetDocumentRequest
from ..model.get_document_response import GetDocumentResponse as GetDocumentResponse
from ..model.raw_content_document_request import RawContentDocumentRequest as RawContentDocumentRequest
from ..model.raw_content_document_response import RawContentDocumentResponse as RawContentDocumentResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Document:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def convert(self, request: ConvertDocumentRequest, option: RequestOption | None = None) -> ConvertDocumentResponse: ...
    async def aconvert(self, request: ConvertDocumentRequest, option: RequestOption | None = None) -> ConvertDocumentResponse: ...
    def create(self, request: CreateDocumentRequest, option: RequestOption | None = None) -> CreateDocumentResponse: ...
    async def acreate(self, request: CreateDocumentRequest, option: RequestOption | None = None) -> CreateDocumentResponse: ...
    def get(self, request: GetDocumentRequest, option: RequestOption | None = None) -> GetDocumentResponse: ...
    async def aget(self, request: GetDocumentRequest, option: RequestOption | None = None) -> GetDocumentResponse: ...
    def raw_content(self, request: RawContentDocumentRequest, option: RequestOption | None = None) -> RawContentDocumentResponse: ...
    async def araw_content(self, request: RawContentDocumentRequest, option: RequestOption | None = None) -> RawContentDocumentResponse: ...
