from ..model.batch_update_document_block_request import BatchUpdateDocumentBlockRequest as BatchUpdateDocumentBlockRequest
from ..model.batch_update_document_block_response import BatchUpdateDocumentBlockResponse as BatchUpdateDocumentBlockResponse
from ..model.get_document_block_request import GetDocumentBlockRequest as GetDocumentBlockRequest
from ..model.get_document_block_response import GetDocumentBlockResponse as GetDocumentBlockResponse
from ..model.list_document_block_request import ListDocumentBlockRequest as ListDocumentBlockRequest
from ..model.list_document_block_response import ListDocumentBlockResponse as ListDocumentBlockResponse
from ..model.patch_document_block_request import PatchDocumentBlockRequest as PatchDocumentBlockRequest
from ..model.patch_document_block_response import PatchDocumentBlockResponse as PatchDocumentBlockResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class DocumentBlock:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def batch_update(self, request: BatchUpdateDocumentBlockRequest, option: RequestOption | None = None) -> BatchUpdateDocumentBlockResponse: ...
    async def abatch_update(self, request: BatchUpdateDocumentBlockRequest, option: RequestOption | None = None) -> BatchUpdateDocumentBlockResponse: ...
    def get(self, request: GetDocumentBlockRequest, option: RequestOption | None = None) -> GetDocumentBlockResponse: ...
    async def aget(self, request: GetDocumentBlockRequest, option: RequestOption | None = None) -> GetDocumentBlockResponse: ...
    def list(self, request: ListDocumentBlockRequest, option: RequestOption | None = None) -> ListDocumentBlockResponse: ...
    async def alist(self, request: ListDocumentBlockRequest, option: RequestOption | None = None) -> ListDocumentBlockResponse: ...
    def patch(self, request: PatchDocumentBlockRequest, option: RequestOption | None = None) -> PatchDocumentBlockResponse: ...
    async def apatch(self, request: PatchDocumentBlockRequest, option: RequestOption | None = None) -> PatchDocumentBlockResponse: ...
