from ..model.create_chat_members_request import CreateChatMembersRequest as CreateChatMembersRequest
from ..model.create_chat_members_response import CreateChatMembersResponse as CreateChatMembersResponse
from ..model.delete_chat_members_request import DeleteChatMembersRequest as DeleteChatMembersRequest
from ..model.delete_chat_members_response import DeleteChatMembersResponse as DeleteChatMembersResponse
from ..model.get_chat_members_request import GetChatMembersRequest as GetChatMembersRequest
from ..model.get_chat_members_response import GetChatMembersResponse as GetChatMembersResponse
from ..model.is_in_chat_chat_members_request import IsInChatChatMembersRequest as IsInChatChatMembersRequest
from ..model.is_in_chat_chat_members_response import IsInChatChatMembersResponse as IsInChatChatMembersResponse
from ..model.me_join_chat_members_request import MeJoinChatMembersRequest as MeJoinChatMembersRequest
from ..model.me_join_chat_members_response import MeJoinChatMembersResponse as MeJoinChatMembersResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class ChatMembers:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateChatMembersRequest, option: RequestOption | None = None) -> CreateChatMembersResponse: ...
    async def acreate(self, request: CreateChatMembersRequest, option: RequestOption | None = None) -> CreateChatMembersResponse: ...
    def delete(self, request: DeleteChatMembersRequest, option: RequestOption | None = None) -> DeleteChatMembersResponse: ...
    async def adelete(self, request: DeleteChatMembersRequest, option: RequestOption | None = None) -> DeleteChatMembersResponse: ...
    def get(self, request: GetChatMembersRequest, option: RequestOption | None = None) -> GetChatMembersResponse: ...
    async def aget(self, request: GetChatMembersRequest, option: RequestOption | None = None) -> GetChatMembersResponse: ...
    def is_in_chat(self, request: IsInChatChatMembersRequest, option: RequestOption | None = None) -> IsInChatChatMembersResponse: ...
    async def ais_in_chat(self, request: IsInChatChatMembersRequest, option: RequestOption | None = None) -> IsInChatChatMembersResponse: ...
    def me_join(self, request: MeJoinChatMembersRequest, option: RequestOption | None = None) -> MeJoinChatMembersResponse: ...
    async def ame_join(self, request: MeJoinChatMembersRequest, option: RequestOption | None = None) -> MeJoinChatMembersResponse: ...
