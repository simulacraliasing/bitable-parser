from .mention import Mention as Mention
from .message_body import MessageBody as MessageBody
from .sender import Sender as Sender
from lark_oapi.core.construct import init as init

class ReplyMessageResponseBody:
    message_id: str | None
    root_id: str | None
    parent_id: str | None
    thread_id: str | None
    msg_type: str | None
    create_time: int | None
    update_time: int | None
    deleted: bool | None
    updated: bool | None
    chat_id: str | None
    sender: Sender | None
    body: MessageBody | None
    mentions: list[Mention] | None
    upper_message_id: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ReplyMessageResponseBodyBuilder: ...

class ReplyMessageResponseBodyBuilder:
    def __init__(self) -> None: ...
    def message_id(self, message_id: str) -> ReplyMessageResponseBodyBuilder: ...
    def root_id(self, root_id: str) -> ReplyMessageResponseBodyBuilder: ...
    def parent_id(self, parent_id: str) -> ReplyMessageResponseBodyBuilder: ...
    def thread_id(self, thread_id: str) -> ReplyMessageResponseBodyBuilder: ...
    def msg_type(self, msg_type: str) -> ReplyMessageResponseBodyBuilder: ...
    def create_time(self, create_time: int) -> ReplyMessageResponseBodyBuilder: ...
    def update_time(self, update_time: int) -> ReplyMessageResponseBodyBuilder: ...
    def deleted(self, deleted: bool) -> ReplyMessageResponseBodyBuilder: ...
    def updated(self, updated: bool) -> ReplyMessageResponseBodyBuilder: ...
    def chat_id(self, chat_id: str) -> ReplyMessageResponseBodyBuilder: ...
    def sender(self, sender: Sender) -> ReplyMessageResponseBodyBuilder: ...
    def body(self, body: MessageBody) -> ReplyMessageResponseBodyBuilder: ...
    def mentions(self, mentions: list[Mention]) -> ReplyMessageResponseBodyBuilder: ...
    def upper_message_id(self, upper_message_id: str) -> ReplyMessageResponseBodyBuilder: ...
    def build(self) -> ReplyMessageResponseBody: ...
