from .user_okr_objective_aligned_objective import UserOkrObjectiveAlignedObjective as UserOkrObjectiveAlignedObjective
from .user_okr_objective_kr import UserOkrObjectiveKr as UserOkrObjectiveKr
from .user_okr_objective_progress_rate import UserOkrObjectiveProgressRate as UserOkrObjectiveProgressRate
from lark_oapi.core.construct import init as init

class UserOkrObjective:
    id: str | None
    permission: int | None
    content: str | None
    progress_report: str | None
    score: str | None
    progress_rate: UserOkrObjectiveProgressRate | None
    kr_list: list[UserOkrObjectiveKr] | None
    aligned_objective_list: list[UserOkrObjectiveAlignedObjective] | None
    aligning_objective_list: list[UserOkrObjectiveAlignedObjective] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> UserOkrObjectiveBuilder: ...

class UserOkrObjectiveBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> UserOkrObjectiveBuilder: ...
    def permission(self, permission: int) -> UserOkrObjectiveBuilder: ...
    def content(self, content: str) -> UserOkrObjectiveBuilder: ...
    def progress_report(self, progress_report: str) -> UserOkrObjectiveBuilder: ...
    def score(self, score: str) -> UserOkrObjectiveBuilder: ...
    def progress_rate(self, progress_rate: UserOkrObjectiveProgressRate) -> UserOkrObjectiveBuilder: ...
    def kr_list(self, kr_list: list[UserOkrObjectiveKr]) -> UserOkrObjectiveBuilder: ...
    def aligned_objective_list(self, aligned_objective_list: list[UserOkrObjectiveAlignedObjective]) -> UserOkrObjectiveBuilder: ...
    def aligning_objective_list(self, aligning_objective_list: list[UserOkrObjectiveAlignedObjective]) -> UserOkrObjectiveBuilder: ...
    def build(self) -> UserOkrObjective: ...
