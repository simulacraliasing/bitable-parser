from .metric_unit import MetricUnit as MetricUnit
from lark_oapi.core.construct import init as init

class PatchMetricSourceTableItemResponseBody:
    metric_item_id: str | None
    user_id: str | None
    period_id: str | None
    metric_unit: MetricUnit | None
    metric_initial_value: float | None
    metric_target_value: float | None
    metric_current_value: float | None
    supported_user_id: str | None
    kr_id: str | None
    updated_at: int | None
    updated_by: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> PatchMetricSourceTableItemResponseBodyBuilder: ...

class PatchMetricSourceTableItemResponseBodyBuilder:
    def __init__(self) -> None: ...
    def metric_item_id(self, metric_item_id: str) -> PatchMetricSourceTableItemResponseBodyBuilder: ...
    def user_id(self, user_id: str) -> PatchMetricSourceTableItemResponseBodyBuilder: ...
    def period_id(self, period_id: str) -> PatchMetricSourceTableItemResponseBodyBuilder: ...
    def metric_unit(self, metric_unit: MetricUnit) -> PatchMetricSourceTableItemResponseBodyBuilder: ...
    def metric_initial_value(self, metric_initial_value: float) -> PatchMetricSourceTableItemResponseBodyBuilder: ...
    def metric_target_value(self, metric_target_value: float) -> PatchMetricSourceTableItemResponseBodyBuilder: ...
    def metric_current_value(self, metric_current_value: float) -> PatchMetricSourceTableItemResponseBodyBuilder: ...
    def supported_user_id(self, supported_user_id: str) -> PatchMetricSourceTableItemResponseBodyBuilder: ...
    def kr_id(self, kr_id: str) -> PatchMetricSourceTableItemResponseBodyBuilder: ...
    def updated_at(self, updated_at: int) -> PatchMetricSourceTableItemResponseBodyBuilder: ...
    def updated_by(self, updated_by: str) -> PatchMetricSourceTableItemResponseBodyBuilder: ...
    def build(self) -> PatchMetricSourceTableItemResponseBody: ...
