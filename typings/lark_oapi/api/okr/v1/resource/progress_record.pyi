from ..model.create_progress_record_request import CreateProgressRecordRequest as CreateProgressRecordRequest
from ..model.create_progress_record_response import CreateProgressRecordResponse as CreateProgressRecordResponse
from ..model.delete_progress_record_request import DeleteProgressRecordRequest as DeleteProgressRecordRequest
from ..model.delete_progress_record_response import DeleteProgressRecordResponse as DeleteProgressRecordResponse
from ..model.get_progress_record_request import GetProgressRecordRequest as GetProgressRecordRequest
from ..model.get_progress_record_response import GetProgressRecordResponse as GetProgressRecordResponse
from ..model.update_progress_record_request import UpdateProgressRecordRequest as UpdateProgressRecordRequest
from ..model.update_progress_record_response import UpdateProgressRecordResponse as UpdateProgressRecordResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class ProgressRecord:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateProgressRecordRequest, option: RequestOption | None = None) -> CreateProgressRecordResponse: ...
    async def acreate(self, request: CreateProgressRecordRequest, option: RequestOption | None = None) -> CreateProgressRecordResponse: ...
    def delete(self, request: DeleteProgressRecordRequest, option: RequestOption | None = None) -> DeleteProgressRecordResponse: ...
    async def adelete(self, request: DeleteProgressRecordRequest, option: RequestOption | None = None) -> DeleteProgressRecordResponse: ...
    def get(self, request: GetProgressRecordRequest, option: RequestOption | None = None) -> GetProgressRecordResponse: ...
    async def aget(self, request: GetProgressRecordRequest, option: RequestOption | None = None) -> GetProgressRecordResponse: ...
    def update(self, request: UpdateProgressRecordRequest, option: RequestOption | None = None) -> UpdateProgressRecordResponse: ...
    async def aupdate(self, request: UpdateProgressRecordRequest, option: RequestOption | None = None) -> UpdateProgressRecordResponse: ...
