from lark_oapi.core.construct import init as init

class Node:
    space_id: int | None
    node_token: str | None
    obj_token: str | None
    obj_type: str | None
    parent_node_token: str | None
    node_type: str | None
    origin_node_token: str | None
    origin_space_id: int | None
    has_child: bool | None
    title: str | None
    obj_create_time: int | None
    obj_edit_time: int | None
    node_create_time: int | None
    creator: str | None
    owner: str | None
    node_creator: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> NodeBuilder: ...

class NodeBuilder:
    def __init__(self) -> None: ...
    def space_id(self, space_id: int) -> NodeBuilder: ...
    def node_token(self, node_token: str) -> NodeBuilder: ...
    def obj_token(self, obj_token: str) -> NodeBuilder: ...
    def obj_type(self, obj_type: str) -> NodeBuilder: ...
    def parent_node_token(self, parent_node_token: str) -> NodeBuilder: ...
    def node_type(self, node_type: str) -> NodeBuilder: ...
    def origin_node_token(self, origin_node_token: str) -> NodeBuilder: ...
    def origin_space_id(self, origin_space_id: int) -> NodeBuilder: ...
    def has_child(self, has_child: bool) -> NodeBuilder: ...
    def title(self, title: str) -> NodeBuilder: ...
    def obj_create_time(self, obj_create_time: int) -> NodeBuilder: ...
    def obj_edit_time(self, obj_edit_time: int) -> NodeBuilder: ...
    def node_create_time(self, node_create_time: int) -> NodeBuilder: ...
    def creator(self, creator: str) -> NodeBuilder: ...
    def owner(self, owner: str) -> NodeBuilder: ...
    def node_creator(self, node_creator: str) -> NodeBuilder: ...
    def build(self) -> Node: ...
