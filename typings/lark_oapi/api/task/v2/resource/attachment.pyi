from ..model.delete_attachment_request import DeleteAttachmentRequest as DeleteAttachmentRequest
from ..model.delete_attachment_response import DeleteAttachmentResponse as DeleteAttachmentResponse
from ..model.get_attachment_request import GetAttachmentRequest as GetAttachmentRequest
from ..model.get_attachment_response import GetAttachmentResponse as GetAttachmentResponse
from ..model.list_attachment_request import ListAttachmentRequest as ListAttachmentRequest
from ..model.list_attachment_response import ListAttachmentResponse as ListAttachmentResponse
from ..model.upload_attachment_request import UploadAttachmentRequest as UploadAttachmentRequest
from ..model.upload_attachment_response import UploadAttachmentResponse as UploadAttachmentResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files

class Attachment:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def delete(self, request: DeleteAttachmentRequest, option: RequestOption | None = None) -> DeleteAttachmentResponse: ...
    async def adelete(self, request: DeleteAttachmentRequest, option: RequestOption | None = None) -> DeleteAttachmentResponse: ...
    def get(self, request: GetAttachmentRequest, option: RequestOption | None = None) -> GetAttachmentResponse: ...
    async def aget(self, request: GetAttachmentRequest, option: RequestOption | None = None) -> GetAttachmentResponse: ...
    def list(self, request: ListAttachmentRequest, option: RequestOption | None = None) -> ListAttachmentResponse: ...
    async def alist(self, request: ListAttachmentRequest, option: RequestOption | None = None) -> ListAttachmentResponse: ...
    def upload(self, request: UploadAttachmentRequest, option: RequestOption | None = None) -> UploadAttachmentResponse: ...
    async def aupload(self, request: UploadAttachmentRequest, option: RequestOption | None = None) -> UploadAttachmentResponse: ...
