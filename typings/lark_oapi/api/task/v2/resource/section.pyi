from ..model.create_section_request import CreateSectionRequest as CreateSectionRequest
from ..model.create_section_response import CreateSectionResponse as CreateSectionResponse
from ..model.delete_section_request import DeleteSectionRequest as DeleteSectionRequest
from ..model.delete_section_response import DeleteSectionResponse as DeleteSectionResponse
from ..model.get_section_request import GetSectionRequest as GetSectionRequest
from ..model.get_section_response import GetSectionResponse as GetSectionResponse
from ..model.list_section_request import ListSectionRequest as ListSectionRequest
from ..model.list_section_response import ListSectionResponse as ListSectionResponse
from ..model.patch_section_request import PatchSectionRequest as PatchSectionRequest
from ..model.patch_section_response import PatchSectionResponse as PatchSectionResponse
from ..model.tasks_section_request import TasksSectionRequest as TasksSectionRequest
from ..model.tasks_section_response import TasksSectionResponse as TasksSectionResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Section:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateSectionRequest, option: RequestOption | None = None) -> CreateSectionResponse: ...
    async def acreate(self, request: CreateSectionRequest, option: RequestOption | None = None) -> CreateSectionResponse: ...
    def delete(self, request: DeleteSectionRequest, option: RequestOption | None = None) -> DeleteSectionResponse: ...
    async def adelete(self, request: DeleteSectionRequest, option: RequestOption | None = None) -> DeleteSectionResponse: ...
    def get(self, request: GetSectionRequest, option: RequestOption | None = None) -> GetSectionResponse: ...
    async def aget(self, request: GetSectionRequest, option: RequestOption | None = None) -> GetSectionResponse: ...
    def list(self, request: ListSectionRequest, option: RequestOption | None = None) -> ListSectionResponse: ...
    async def alist(self, request: ListSectionRequest, option: RequestOption | None = None) -> ListSectionResponse: ...
    def patch(self, request: PatchSectionRequest, option: RequestOption | None = None) -> PatchSectionResponse: ...
    async def apatch(self, request: PatchSectionRequest, option: RequestOption | None = None) -> PatchSectionResponse: ...
    def tasks(self, request: TasksSectionRequest, option: RequestOption | None = None) -> TasksSectionResponse: ...
    async def atasks(self, request: TasksSectionRequest, option: RequestOption | None = None) -> TasksSectionResponse: ...
