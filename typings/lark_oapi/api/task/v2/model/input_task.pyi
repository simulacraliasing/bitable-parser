from .custom_complete import CustomComplete as CustomComplete
from .docx_source import DocxSource as DocxSource
from .due import Due as Due
from .input_custom_field_value import InputCustomFieldValue as InputCustomFieldValue
from .member import Member as Member
from .origin import Origin as Origin
from .reminder import Reminder as Reminder
from .start import Start as Start
from .task_in_tasklist_info import TaskInTasklistInfo as TaskInTasklistInfo
from lark_oapi.core.construct import init as init

class InputTask:
    summary: str | None
    description: str | None
    due: Due | None
    origin: Origin | None
    extra: str | None
    completed_at: int | None
    members: list[Member] | None
    repeat_rule: str | None
    custom_complete: CustomComplete | None
    tasklists: list[TaskInTasklistInfo] | None
    client_token: str | None
    start: Start | None
    reminders: list[Reminder] | None
    mode: int | None
    is_milestone: bool | None
    custom_fields: list[InputCustomFieldValue] | None
    docx_source: DocxSource | None
    positive_reminders: list[Reminder] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> InputTaskBuilder: ...

class InputTaskBuilder:
    def __init__(self) -> None: ...
    def summary(self, summary: str) -> InputTaskBuilder: ...
    def description(self, description: str) -> InputTaskBuilder: ...
    def due(self, due: Due) -> InputTaskBuilder: ...
    def origin(self, origin: Origin) -> InputTaskBuilder: ...
    def extra(self, extra: str) -> InputTaskBuilder: ...
    def completed_at(self, completed_at: int) -> InputTaskBuilder: ...
    def members(self, members: list[Member]) -> InputTaskBuilder: ...
    def repeat_rule(self, repeat_rule: str) -> InputTaskBuilder: ...
    def custom_complete(self, custom_complete: CustomComplete) -> InputTaskBuilder: ...
    def tasklists(self, tasklists: list[TaskInTasklistInfo]) -> InputTaskBuilder: ...
    def client_token(self, client_token: str) -> InputTaskBuilder: ...
    def start(self, start: Start) -> InputTaskBuilder: ...
    def reminders(self, reminders: list[Reminder]) -> InputTaskBuilder: ...
    def mode(self, mode: int) -> InputTaskBuilder: ...
    def is_milestone(self, is_milestone: bool) -> InputTaskBuilder: ...
    def custom_fields(self, custom_fields: list[InputCustomFieldValue]) -> InputTaskBuilder: ...
    def docx_source(self, docx_source: DocxSource) -> InputTaskBuilder: ...
    def positive_reminders(self, positive_reminders: list[Reminder]) -> InputTaskBuilder: ...
    def build(self) -> InputTask: ...
