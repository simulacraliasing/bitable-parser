from .member import Member as Member
from .resource import Resource as Resource
from lark_oapi.core.construct import init as init

class Attachment:
    guid: str | None
    file_token: str | None
    name: str | None
    size: int | None
    resource: Resource | None
    uploader: Member | None
    is_cover: bool | None
    uploaded_at: int | None
    url: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> AttachmentBuilder: ...

class AttachmentBuilder:
    def __init__(self) -> None: ...
    def guid(self, guid: str) -> AttachmentBuilder: ...
    def file_token(self, file_token: str) -> AttachmentBuilder: ...
    def name(self, name: str) -> AttachmentBuilder: ...
    def size(self, size: int) -> AttachmentBuilder: ...
    def resource(self, resource: Resource) -> AttachmentBuilder: ...
    def uploader(self, uploader: Member) -> AttachmentBuilder: ...
    def is_cover(self, is_cover: bool) -> AttachmentBuilder: ...
    def uploaded_at(self, uploaded_at: int) -> AttachmentBuilder: ...
    def url(self, url: str) -> AttachmentBuilder: ...
    def build(self) -> Attachment: ...
