from ..model.create_task_comment_request import CreateTaskCommentRequest as CreateTaskCommentRequest
from ..model.create_task_comment_response import CreateTaskCommentResponse as CreateTaskCommentResponse
from ..model.delete_task_comment_request import DeleteTaskCommentRequest as DeleteTaskCommentRequest
from ..model.delete_task_comment_response import DeleteTaskCommentResponse as DeleteTaskCommentResponse
from ..model.get_task_comment_request import GetTaskCommentRequest as GetTaskCommentRequest
from ..model.get_task_comment_response import GetTaskCommentResponse as GetTaskCommentResponse
from ..model.list_task_comment_request import ListTaskCommentRequest as ListTaskCommentRequest
from ..model.list_task_comment_response import ListTaskCommentResponse as ListTaskCommentResponse
from ..model.update_task_comment_request import UpdateTaskCommentRequest as UpdateTaskCommentRequest
from ..model.update_task_comment_response import UpdateTaskCommentResponse as UpdateTaskCommentResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class TaskComment:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateTaskCommentRequest, option: RequestOption | None = None) -> CreateTaskCommentResponse: ...
    async def acreate(self, request: CreateTaskCommentRequest, option: RequestOption | None = None) -> CreateTaskCommentResponse: ...
    def delete(self, request: DeleteTaskCommentRequest, option: RequestOption | None = None) -> DeleteTaskCommentResponse: ...
    async def adelete(self, request: DeleteTaskCommentRequest, option: RequestOption | None = None) -> DeleteTaskCommentResponse: ...
    def get(self, request: GetTaskCommentRequest, option: RequestOption | None = None) -> GetTaskCommentResponse: ...
    async def aget(self, request: GetTaskCommentRequest, option: RequestOption | None = None) -> GetTaskCommentResponse: ...
    def list(self, request: ListTaskCommentRequest, option: RequestOption | None = None) -> ListTaskCommentResponse: ...
    async def alist(self, request: ListTaskCommentRequest, option: RequestOption | None = None) -> ListTaskCommentResponse: ...
    def update(self, request: UpdateTaskCommentRequest, option: RequestOption | None = None) -> UpdateTaskCommentResponse: ...
    async def aupdate(self, request: UpdateTaskCommentRequest, option: RequestOption | None = None) -> UpdateTaskCommentResponse: ...
