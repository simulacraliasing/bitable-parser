from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class ListTaskRequest(BaseRequest):
    page_size: int | None
    page_token: str | None
    start_create_time: int | None
    end_create_time: int | None
    task_completed: bool | None
    user_id_type: str | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> ListTaskRequestBuilder: ...

class ListTaskRequestBuilder:
    def __init__(self) -> None: ...
    def page_size(self, page_size: int) -> ListTaskRequestBuilder: ...
    def page_token(self, page_token: str) -> ListTaskRequestBuilder: ...
    def start_create_time(self, start_create_time: int) -> ListTaskRequestBuilder: ...
    def end_create_time(self, end_create_time: int) -> ListTaskRequestBuilder: ...
    def task_completed(self, task_completed: bool) -> ListTaskRequestBuilder: ...
    def user_id_type(self, user_id_type: str) -> ListTaskRequestBuilder: ...
    def build(self) -> ListTaskRequest: ...
