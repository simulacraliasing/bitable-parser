from .children_filter import ChildrenFilter as ChildrenFilter
from .condition import Condition as Condition
from lark_oapi.core.construct import init as init

class FilterInfo:
    conjunction: str | None
    conditions: list[Condition] | None
    children: list[ChildrenFilter] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> FilterInfoBuilder: ...

class FilterInfoBuilder:
    def __init__(self) -> None: ...
    def conjunction(self, conjunction: str) -> FilterInfoBuilder: ...
    def conditions(self, conditions: list[Condition]) -> FilterInfoBuilder: ...
    def children(self, children: list[ChildrenFilter]) -> FilterInfoBuilder: ...
    def build(self) -> FilterInfo: ...
