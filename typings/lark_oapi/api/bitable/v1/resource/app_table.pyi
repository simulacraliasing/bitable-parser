from ..model.batch_create_app_table_request import BatchCreateAppTableRequest as BatchCreateAppTableRequest
from ..model.batch_create_app_table_response import BatchCreateAppTableResponse as BatchCreateAppTableResponse
from ..model.batch_delete_app_table_request import BatchDeleteAppTableRequest as BatchDeleteAppTableRequest
from ..model.batch_delete_app_table_response import BatchDeleteAppTableResponse as BatchDeleteAppTableResponse
from ..model.create_app_table_request import CreateAppTableRequest as CreateAppTableRequest
from ..model.create_app_table_response import CreateAppTableResponse as CreateAppTableResponse
from ..model.delete_app_table_request import DeleteAppTableRequest as DeleteAppTableRequest
from ..model.delete_app_table_response import DeleteAppTableResponse as DeleteAppTableResponse
from ..model.list_app_table_request import ListAppTableRequest as ListAppTableRequest
from ..model.list_app_table_response import ListAppTableResponse as ListAppTableResponse
from ..model.patch_app_table_request import PatchAppTableRequest as PatchAppTableRequest
from ..model.patch_app_table_response import PatchAppTableResponse as PatchAppTableResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class AppTable:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def batch_create(self, request: BatchCreateAppTableRequest, option: RequestOption | None = None) -> BatchCreateAppTableResponse: ...
    async def abatch_create(self, request: BatchCreateAppTableRequest, option: RequestOption | None = None) -> BatchCreateAppTableResponse: ...
    def batch_delete(self, request: BatchDeleteAppTableRequest, option: RequestOption | None = None) -> BatchDeleteAppTableResponse: ...
    async def abatch_delete(self, request: BatchDeleteAppTableRequest, option: RequestOption | None = None) -> BatchDeleteAppTableResponse: ...
    def create(self, request: CreateAppTableRequest, option: RequestOption | None = None) -> CreateAppTableResponse: ...
    async def acreate(self, request: CreateAppTableRequest, option: RequestOption | None = None) -> CreateAppTableResponse: ...
    def delete(self, request: DeleteAppTableRequest, option: RequestOption | None = None) -> DeleteAppTableResponse: ...
    async def adelete(self, request: DeleteAppTableRequest, option: RequestOption | None = None) -> DeleteAppTableResponse: ...
    def list(self, request: ListAppTableRequest, option: RequestOption | None = None) -> ListAppTableResponse: ...
    async def alist(self, request: ListAppTableRequest, option: RequestOption | None = None) -> ListAppTableResponse: ...
    def patch(self, request: PatchAppTableRequest, option: RequestOption | None = None) -> PatchAppTableResponse: ...
    async def apatch(self, request: PatchAppTableRequest, option: RequestOption | None = None) -> PatchAppTableResponse: ...
