from ..model.create_app_table_field_request import CreateAppTableFieldRequest as CreateAppTableFieldRequest
from ..model.create_app_table_field_response import CreateAppTableFieldResponse as CreateAppTableFieldResponse
from ..model.delete_app_table_field_request import DeleteAppTableFieldRequest as DeleteAppTableFieldRequest
from ..model.delete_app_table_field_response import DeleteAppTableFieldResponse as DeleteAppTableFieldResponse
from ..model.list_app_table_field_request import ListAppTableFieldRequest as ListAppTableFieldRequest
from ..model.list_app_table_field_response import ListAppTableFieldResponse as ListAppTableFieldResponse
from ..model.update_app_table_field_request import UpdateAppTableFieldRequest as UpdateAppTableFieldRequest
from ..model.update_app_table_field_response import UpdateAppTableFieldResponse as UpdateAppTableFieldResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class AppTableField:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateAppTableFieldRequest, option: RequestOption | None = None) -> CreateAppTableFieldResponse: ...
    async def acreate(self, request: CreateAppTableFieldRequest, option: RequestOption | None = None) -> CreateAppTableFieldResponse: ...
    def delete(self, request: DeleteAppTableFieldRequest, option: RequestOption | None = None) -> DeleteAppTableFieldResponse: ...
    async def adelete(self, request: DeleteAppTableFieldRequest, option: RequestOption | None = None) -> DeleteAppTableFieldResponse: ...
    def list(self, request: ListAppTableFieldRequest, option: RequestOption | None = None) -> ListAppTableFieldResponse: ...
    async def alist(self, request: ListAppTableFieldRequest, option: RequestOption | None = None) -> ListAppTableFieldResponse: ...
    def update(self, request: UpdateAppTableFieldRequest, option: RequestOption | None = None) -> UpdateAppTableFieldResponse: ...
    async def aupdate(self, request: UpdateAppTableFieldRequest, option: RequestOption | None = None) -> UpdateAppTableFieldResponse: ...
