from ..model.create_app_table_view_request import CreateAppTableViewRequest as CreateAppTableViewRequest
from ..model.create_app_table_view_response import CreateAppTableViewResponse as CreateAppTableViewResponse
from ..model.delete_app_table_view_request import DeleteAppTableViewRequest as DeleteAppTableViewRequest
from ..model.delete_app_table_view_response import DeleteAppTableViewResponse as DeleteAppTableViewResponse
from ..model.get_app_table_view_request import GetAppTableViewRequest as GetAppTableViewRequest
from ..model.get_app_table_view_response import GetAppTableViewResponse as GetAppTableViewResponse
from ..model.list_app_table_view_request import ListAppTableViewRequest as ListAppTableViewRequest
from ..model.list_app_table_view_response import ListAppTableViewResponse as ListAppTableViewResponse
from ..model.patch_app_table_view_request import PatchAppTableViewRequest as PatchAppTableViewRequest
from ..model.patch_app_table_view_response import PatchAppTableViewResponse as PatchAppTableViewResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class AppTableView:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateAppTableViewRequest, option: RequestOption | None = None) -> CreateAppTableViewResponse: ...
    async def acreate(self, request: CreateAppTableViewRequest, option: RequestOption | None = None) -> CreateAppTableViewResponse: ...
    def delete(self, request: DeleteAppTableViewRequest, option: RequestOption | None = None) -> DeleteAppTableViewResponse: ...
    async def adelete(self, request: DeleteAppTableViewRequest, option: RequestOption | None = None) -> DeleteAppTableViewResponse: ...
    def get(self, request: GetAppTableViewRequest, option: RequestOption | None = None) -> GetAppTableViewResponse: ...
    async def aget(self, request: GetAppTableViewRequest, option: RequestOption | None = None) -> GetAppTableViewResponse: ...
    def list(self, request: ListAppTableViewRequest, option: RequestOption | None = None) -> ListAppTableViewResponse: ...
    async def alist(self, request: ListAppTableViewRequest, option: RequestOption | None = None) -> ListAppTableViewResponse: ...
    def patch(self, request: PatchAppTableViewRequest, option: RequestOption | None = None) -> PatchAppTableViewResponse: ...
    async def apatch(self, request: PatchAppTableViewRequest, option: RequestOption | None = None) -> PatchAppTableViewResponse: ...
