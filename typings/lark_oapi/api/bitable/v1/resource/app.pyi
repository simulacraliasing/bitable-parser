from ..model.copy_app_request import CopyAppRequest as CopyAppRequest
from ..model.copy_app_response import CopyAppResponse as CopyAppResponse
from ..model.create_app_request import CreateAppRequest as CreateAppRequest
from ..model.create_app_response import CreateAppResponse as CreateAppResponse
from ..model.get_app_request import GetAppRequest as GetAppRequest
from ..model.get_app_response import GetAppResponse as GetAppResponse
from ..model.update_app_request import UpdateAppRequest as UpdateAppRequest
from ..model.update_app_response import UpdateAppResponse as UpdateAppResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class App:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def copy(self, request: CopyAppRequest, option: RequestOption | None = None) -> CopyAppResponse: ...
    async def acopy(self, request: CopyAppRequest, option: RequestOption | None = None) -> CopyAppResponse: ...
    def create(self, request: CreateAppRequest, option: RequestOption | None = None) -> CreateAppResponse: ...
    async def acreate(self, request: CreateAppRequest, option: RequestOption | None = None) -> CreateAppResponse: ...
    def get(self, request: GetAppRequest, option: RequestOption | None = None) -> GetAppResponse: ...
    async def aget(self, request: GetAppRequest, option: RequestOption | None = None) -> GetAppResponse: ...
    def update(self, request: UpdateAppRequest, option: RequestOption | None = None) -> UpdateAppResponse: ...
    async def aupdate(self, request: UpdateAppRequest, option: RequestOption | None = None) -> UpdateAppResponse: ...
