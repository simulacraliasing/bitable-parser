from .bitable_table_field_action_value import BitableTableFieldActionValue as BitableTableFieldActionValue
from lark_oapi.core.construct import init as init

class BitableTableFieldAction:
    action: str | None
    field_id: str | None
    before_value: BitableTableFieldActionValue | None
    after_value: BitableTableFieldActionValue | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> BitableTableFieldActionBuilder: ...

class BitableTableFieldActionBuilder:
    def __init__(self) -> None: ...
    def action(self, action: str) -> BitableTableFieldActionBuilder: ...
    def field_id(self, field_id: str) -> BitableTableFieldActionBuilder: ...
    def before_value(self, before_value: BitableTableFieldActionValue) -> BitableTableFieldActionBuilder: ...
    def after_value(self, after_value: BitableTableFieldActionValue) -> BitableTableFieldActionBuilder: ...
    def build(self) -> BitableTableFieldAction: ...
