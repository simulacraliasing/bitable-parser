from .bitable_table_record_action_field import BitableTableRecordActionField as BitableTableRecordActionField
from lark_oapi.core.construct import init as init

class BitableTableRecordAction:
    record_id: str | None
    action: str | None
    before_value: list[BitableTableRecordActionField] | None
    after_value: list[BitableTableRecordActionField] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> BitableTableRecordActionBuilder: ...

class BitableTableRecordActionBuilder:
    def __init__(self) -> None: ...
    def record_id(self, record_id: str) -> BitableTableRecordActionBuilder: ...
    def action(self, action: str) -> BitableTableRecordActionBuilder: ...
    def before_value(self, before_value: list[BitableTableRecordActionField]) -> BitableTableRecordActionBuilder: ...
    def after_value(self, after_value: list[BitableTableRecordActionField]) -> BitableTableRecordActionBuilder: ...
    def build(self) -> BitableTableRecordAction: ...
