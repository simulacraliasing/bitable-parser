from lark_oapi.core.construct import init as init
from typing import Any, IO

class UploadAllFileRequestBody:
    file_name: str | None
    parent_type: str | None
    parent_node: str | None
    size: int | None
    checksum: str | None
    file: IO[Any] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> UploadAllFileRequestBodyBuilder: ...

class UploadAllFileRequestBodyBuilder:
    def __init__(self) -> None: ...
    def file_name(self, file_name: str) -> UploadAllFileRequestBodyBuilder: ...
    def parent_type(self, parent_type: str) -> UploadAllFileRequestBodyBuilder: ...
    def parent_node(self, parent_node: str) -> UploadAllFileRequestBodyBuilder: ...
    def size(self, size: int) -> UploadAllFileRequestBodyBuilder: ...
    def checksum(self, checksum: str) -> UploadAllFileRequestBodyBuilder: ...
    def file(self, file: IO[Any]) -> UploadAllFileRequestBodyBuilder: ...
    def build(self) -> UploadAllFileRequestBody: ...
