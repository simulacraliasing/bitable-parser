from ..model.create_file_version_request import CreateFileVersionRequest as CreateFileVersionRequest
from ..model.create_file_version_response import CreateFileVersionResponse as CreateFileVersionResponse
from ..model.delete_file_version_request import DeleteFileVersionRequest as DeleteFileVersionRequest
from ..model.delete_file_version_response import DeleteFileVersionResponse as DeleteFileVersionResponse
from ..model.get_file_version_request import GetFileVersionRequest as GetFileVersionRequest
from ..model.get_file_version_response import GetFileVersionResponse as GetFileVersionResponse
from ..model.list_file_version_request import ListFileVersionRequest as ListFileVersionRequest
from ..model.list_file_version_response import ListFileVersionResponse as ListFileVersionResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class FileVersion:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateFileVersionRequest, option: RequestOption | None = None) -> CreateFileVersionResponse: ...
    async def acreate(self, request: CreateFileVersionRequest, option: RequestOption | None = None) -> CreateFileVersionResponse: ...
    def delete(self, request: DeleteFileVersionRequest, option: RequestOption | None = None) -> DeleteFileVersionResponse: ...
    async def adelete(self, request: DeleteFileVersionRequest, option: RequestOption | None = None) -> DeleteFileVersionResponse: ...
    def get(self, request: GetFileVersionRequest, option: RequestOption | None = None) -> GetFileVersionResponse: ...
    async def aget(self, request: GetFileVersionRequest, option: RequestOption | None = None) -> GetFileVersionResponse: ...
    def list(self, request: ListFileVersionRequest, option: RequestOption | None = None) -> ListFileVersionResponse: ...
    async def alist(self, request: ListFileVersionRequest, option: RequestOption | None = None) -> ListFileVersionResponse: ...
