from ..model.copy_file_request import CopyFileRequest as CopyFileRequest
from ..model.copy_file_response import CopyFileResponse as CopyFileResponse
from ..model.create_folder_file_request import CreateFolderFileRequest as CreateFolderFileRequest
from ..model.create_folder_file_response import CreateFolderFileResponse as CreateFolderFileResponse
from ..model.create_shortcut_file_request import CreateShortcutFileRequest as CreateShortcutFileRequest
from ..model.create_shortcut_file_response import CreateShortcutFileResponse as CreateShortcutFileResponse
from ..model.delete_file_request import DeleteFileRequest as DeleteFileRequest
from ..model.delete_file_response import DeleteFileResponse as DeleteFileResponse
from ..model.delete_subscribe_file_request import DeleteSubscribeFileRequest as DeleteSubscribeFileRequest
from ..model.delete_subscribe_file_response import DeleteSubscribeFileResponse as DeleteSubscribeFileResponse
from ..model.download_file_request import DownloadFileRequest as DownloadFileRequest
from ..model.download_file_response import DownloadFileResponse as DownloadFileResponse
from ..model.get_subscribe_file_request import GetSubscribeFileRequest as GetSubscribeFileRequest
from ..model.get_subscribe_file_response import GetSubscribeFileResponse as GetSubscribeFileResponse
from ..model.list_file_request import ListFileRequest as ListFileRequest
from ..model.list_file_response import ListFileResponse as ListFileResponse
from ..model.move_file_request import MoveFileRequest as MoveFileRequest
from ..model.move_file_response import MoveFileResponse as MoveFileResponse
from ..model.subscribe_file_request import SubscribeFileRequest as SubscribeFileRequest
from ..model.subscribe_file_response import SubscribeFileResponse as SubscribeFileResponse
from ..model.task_check_file_request import TaskCheckFileRequest as TaskCheckFileRequest
from ..model.task_check_file_response import TaskCheckFileResponse as TaskCheckFileResponse
from ..model.upload_all_file_request import UploadAllFileRequest as UploadAllFileRequest
from ..model.upload_all_file_response import UploadAllFileResponse as UploadAllFileResponse
from ..model.upload_finish_file_request import UploadFinishFileRequest as UploadFinishFileRequest
from ..model.upload_finish_file_response import UploadFinishFileResponse as UploadFinishFileResponse
from ..model.upload_part_file_request import UploadPartFileRequest as UploadPartFileRequest
from ..model.upload_part_file_response import UploadPartFileResponse as UploadPartFileResponse
from ..model.upload_prepare_file_request import UploadPrepareFileRequest as UploadPrepareFileRequest
from ..model.upload_prepare_file_response import UploadPrepareFileResponse as UploadPrepareFileResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files

class File:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def copy(self, request: CopyFileRequest, option: RequestOption | None = None) -> CopyFileResponse: ...
    async def acopy(self, request: CopyFileRequest, option: RequestOption | None = None) -> CopyFileResponse: ...
    def create_folder(self, request: CreateFolderFileRequest, option: RequestOption | None = None) -> CreateFolderFileResponse: ...
    async def acreate_folder(self, request: CreateFolderFileRequest, option: RequestOption | None = None) -> CreateFolderFileResponse: ...
    def create_shortcut(self, request: CreateShortcutFileRequest, option: RequestOption | None = None) -> CreateShortcutFileResponse: ...
    async def acreate_shortcut(self, request: CreateShortcutFileRequest, option: RequestOption | None = None) -> CreateShortcutFileResponse: ...
    def delete(self, request: DeleteFileRequest, option: RequestOption | None = None) -> DeleteFileResponse: ...
    async def adelete(self, request: DeleteFileRequest, option: RequestOption | None = None) -> DeleteFileResponse: ...
    def delete_subscribe(self, request: DeleteSubscribeFileRequest, option: RequestOption | None = None) -> DeleteSubscribeFileResponse: ...
    async def adelete_subscribe(self, request: DeleteSubscribeFileRequest, option: RequestOption | None = None) -> DeleteSubscribeFileResponse: ...
    def download(self, request: DownloadFileRequest, option: RequestOption | None = None) -> DownloadFileResponse: ...
    async def adownload(self, request: DownloadFileRequest, option: RequestOption | None = None) -> DownloadFileResponse: ...
    def get_subscribe(self, request: GetSubscribeFileRequest, option: RequestOption | None = None) -> GetSubscribeFileResponse: ...
    async def aget_subscribe(self, request: GetSubscribeFileRequest, option: RequestOption | None = None) -> GetSubscribeFileResponse: ...
    def list(self, request: ListFileRequest, option: RequestOption | None = None) -> ListFileResponse: ...
    async def alist(self, request: ListFileRequest, option: RequestOption | None = None) -> ListFileResponse: ...
    def move(self, request: MoveFileRequest, option: RequestOption | None = None) -> MoveFileResponse: ...
    async def amove(self, request: MoveFileRequest, option: RequestOption | None = None) -> MoveFileResponse: ...
    def subscribe(self, request: SubscribeFileRequest, option: RequestOption | None = None) -> SubscribeFileResponse: ...
    async def asubscribe(self, request: SubscribeFileRequest, option: RequestOption | None = None) -> SubscribeFileResponse: ...
    def task_check(self, request: TaskCheckFileRequest, option: RequestOption | None = None) -> TaskCheckFileResponse: ...
    async def atask_check(self, request: TaskCheckFileRequest, option: RequestOption | None = None) -> TaskCheckFileResponse: ...
    def upload_all(self, request: UploadAllFileRequest, option: RequestOption | None = None) -> UploadAllFileResponse: ...
    async def aupload_all(self, request: UploadAllFileRequest, option: RequestOption | None = None) -> UploadAllFileResponse: ...
    def upload_finish(self, request: UploadFinishFileRequest, option: RequestOption | None = None) -> UploadFinishFileResponse: ...
    async def aupload_finish(self, request: UploadFinishFileRequest, option: RequestOption | None = None) -> UploadFinishFileResponse: ...
    def upload_part(self, request: UploadPartFileRequest, option: RequestOption | None = None) -> UploadPartFileResponse: ...
    async def aupload_part(self, request: UploadPartFileRequest, option: RequestOption | None = None) -> UploadPartFileResponse: ...
    def upload_prepare(self, request: UploadPrepareFileRequest, option: RequestOption | None = None) -> UploadPrepareFileResponse: ...
    async def aupload_prepare(self, request: UploadPrepareFileRequest, option: RequestOption | None = None) -> UploadPrepareFileResponse: ...
