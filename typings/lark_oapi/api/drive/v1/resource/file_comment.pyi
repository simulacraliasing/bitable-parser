from ..model.batch_query_file_comment_request import BatchQueryFileCommentRequest as BatchQueryFileCommentRequest
from ..model.batch_query_file_comment_response import BatchQueryFileCommentResponse as BatchQueryFileCommentResponse
from ..model.create_file_comment_request import CreateFileCommentRequest as CreateFileCommentRequest
from ..model.create_file_comment_response import CreateFileCommentResponse as CreateFileCommentResponse
from ..model.get_file_comment_request import GetFileCommentRequest as GetFileCommentRequest
from ..model.get_file_comment_response import GetFileCommentResponse as GetFileCommentResponse
from ..model.list_file_comment_request import ListFileCommentRequest as ListFileCommentRequest
from ..model.list_file_comment_response import ListFileCommentResponse as ListFileCommentResponse
from ..model.patch_file_comment_request import PatchFileCommentRequest as PatchFileCommentRequest
from ..model.patch_file_comment_response import PatchFileCommentResponse as PatchFileCommentResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class FileComment:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def batch_query(self, request: BatchQueryFileCommentRequest, option: RequestOption | None = None) -> BatchQueryFileCommentResponse: ...
    async def abatch_query(self, request: BatchQueryFileCommentRequest, option: RequestOption | None = None) -> BatchQueryFileCommentResponse: ...
    def create(self, request: CreateFileCommentRequest, option: RequestOption | None = None) -> CreateFileCommentResponse: ...
    async def acreate(self, request: CreateFileCommentRequest, option: RequestOption | None = None) -> CreateFileCommentResponse: ...
    def get(self, request: GetFileCommentRequest, option: RequestOption | None = None) -> GetFileCommentResponse: ...
    async def aget(self, request: GetFileCommentRequest, option: RequestOption | None = None) -> GetFileCommentResponse: ...
    def list(self, request: ListFileCommentRequest, option: RequestOption | None = None) -> ListFileCommentResponse: ...
    async def alist(self, request: ListFileCommentRequest, option: RequestOption | None = None) -> ListFileCommentResponse: ...
    def patch(self, request: PatchFileCommentRequest, option: RequestOption | None = None) -> PatchFileCommentResponse: ...
    async def apatch(self, request: PatchFileCommentRequest, option: RequestOption | None = None) -> PatchFileCommentResponse: ...
