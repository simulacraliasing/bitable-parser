from ..model.create_export_task_request import CreateExportTaskRequest as CreateExportTaskRequest
from ..model.create_export_task_response import CreateExportTaskResponse as CreateExportTaskResponse
from ..model.download_export_task_request import DownloadExportTaskRequest as DownloadExportTaskRequest
from ..model.download_export_task_response import DownloadExportTaskResponse as DownloadExportTaskResponse
from ..model.get_export_task_request import GetExportTaskRequest as GetExportTaskRequest
from ..model.get_export_task_response import GetExportTaskResponse as GetExportTaskResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class ExportTask:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateExportTaskRequest, option: RequestOption | None = None) -> CreateExportTaskResponse: ...
    async def acreate(self, request: CreateExportTaskRequest, option: RequestOption | None = None) -> CreateExportTaskResponse: ...
    def download(self, request: DownloadExportTaskRequest, option: RequestOption | None = None) -> DownloadExportTaskResponse: ...
    async def adownload(self, request: DownloadExportTaskRequest, option: RequestOption | None = None) -> DownloadExportTaskResponse: ...
    def get(self, request: GetExportTaskRequest, option: RequestOption | None = None) -> GetExportTaskResponse: ...
    async def aget(self, request: GetExportTaskRequest, option: RequestOption | None = None) -> GetExportTaskResponse: ...
