from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class QueryRuleRequest(BaseRequest):
    rule_name: str | None
    include_deleted: int | None
    user_id_type: str | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> QueryRuleRequestBuilder: ...

class QueryRuleRequestBuilder:
    def __init__(self) -> None: ...
    def rule_name(self, rule_name: str) -> QueryRuleRequestBuilder: ...
    def include_deleted(self, include_deleted: int) -> QueryRuleRequestBuilder: ...
    def user_id_type(self, user_id_type: str) -> QueryRuleRequestBuilder: ...
    def build(self) -> QueryRuleRequest: ...
