from .archive_indicator import ArchiveIndicator as ArchiveIndicator
from .archive_item import ArchiveItem as ArchiveItem
from lark_oapi.core.construct import init as init

class ArchiveDetail:
    user_id: str | None
    id: str | None
    tid: str | None
    plan_id: str | None
    plan_tid: str | None
    currency_id: str | None
    change_reason_id: str | None
    change_description: str | None
    effective_date: str | None
    expiration_date: str | None
    salary_level_id: str | None
    created_time: str | None
    updated_time: str | None
    archive_items: list[ArchiveItem] | None
    archive_indicators: list[ArchiveIndicator] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ArchiveDetailBuilder: ...

class ArchiveDetailBuilder:
    def __init__(self) -> None: ...
    def user_id(self, user_id: str) -> ArchiveDetailBuilder: ...
    def id(self, id: str) -> ArchiveDetailBuilder: ...
    def tid(self, tid: str) -> ArchiveDetailBuilder: ...
    def plan_id(self, plan_id: str) -> ArchiveDetailBuilder: ...
    def plan_tid(self, plan_tid: str) -> ArchiveDetailBuilder: ...
    def currency_id(self, currency_id: str) -> ArchiveDetailBuilder: ...
    def change_reason_id(self, change_reason_id: str) -> ArchiveDetailBuilder: ...
    def change_description(self, change_description: str) -> ArchiveDetailBuilder: ...
    def effective_date(self, effective_date: str) -> ArchiveDetailBuilder: ...
    def expiration_date(self, expiration_date: str) -> ArchiveDetailBuilder: ...
    def salary_level_id(self, salary_level_id: str) -> ArchiveDetailBuilder: ...
    def created_time(self, created_time: str) -> ArchiveDetailBuilder: ...
    def updated_time(self, updated_time: str) -> ArchiveDetailBuilder: ...
    def archive_items(self, archive_items: list[ArchiveItem]) -> ArchiveDetailBuilder: ...
    def archive_indicators(self, archive_indicators: list[ArchiveIndicator]) -> ArchiveDetailBuilder: ...
    def build(self) -> ArchiveDetail: ...
