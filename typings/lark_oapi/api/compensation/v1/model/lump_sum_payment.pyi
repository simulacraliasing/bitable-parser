from .i18n import I18n as I18n
from .lump_sum_payment_detail import LumpSumPaymentDetail as LumpSumPaymentDetail
from lark_oapi.core.construct import init as init

class LumpSumPayment:
    id: str | None
    unique_id: str | None
    user_id: str | None
    total_amount: str | None
    binding_period: int | None
    currency_id: str | None
    issuance_frequency: int | None
    item_id: str | None
    remark: str | None
    issuance_detail_text: I18n | None
    apply_source: int | None
    return_amount_before_tax: str | None
    return_amount_after_tax: str | None
    binding_period_offboarding_type: str | None
    create_time: str | None
    modify_time: str | None
    reference_period_start_date: str | None
    reference_period_end_date: str | None
    details: list[LumpSumPaymentDetail] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> LumpSumPaymentBuilder: ...

class LumpSumPaymentBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> LumpSumPaymentBuilder: ...
    def unique_id(self, unique_id: str) -> LumpSumPaymentBuilder: ...
    def user_id(self, user_id: str) -> LumpSumPaymentBuilder: ...
    def total_amount(self, total_amount: str) -> LumpSumPaymentBuilder: ...
    def binding_period(self, binding_period: int) -> LumpSumPaymentBuilder: ...
    def currency_id(self, currency_id: str) -> LumpSumPaymentBuilder: ...
    def issuance_frequency(self, issuance_frequency: int) -> LumpSumPaymentBuilder: ...
    def item_id(self, item_id: str) -> LumpSumPaymentBuilder: ...
    def remark(self, remark: str) -> LumpSumPaymentBuilder: ...
    def issuance_detail_text(self, issuance_detail_text: I18n) -> LumpSumPaymentBuilder: ...
    def apply_source(self, apply_source: int) -> LumpSumPaymentBuilder: ...
    def return_amount_before_tax(self, return_amount_before_tax: str) -> LumpSumPaymentBuilder: ...
    def return_amount_after_tax(self, return_amount_after_tax: str) -> LumpSumPaymentBuilder: ...
    def binding_period_offboarding_type(self, binding_period_offboarding_type: str) -> LumpSumPaymentBuilder: ...
    def create_time(self, create_time: str) -> LumpSumPaymentBuilder: ...
    def modify_time(self, modify_time: str) -> LumpSumPaymentBuilder: ...
    def reference_period_start_date(self, reference_period_start_date: str) -> LumpSumPaymentBuilder: ...
    def reference_period_end_date(self, reference_period_end_date: str) -> LumpSumPaymentBuilder: ...
    def details(self, details: list[LumpSumPaymentDetail]) -> LumpSumPaymentBuilder: ...
    def build(self) -> LumpSumPayment: ...
