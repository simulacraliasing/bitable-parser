from .standard_scope_expression import StandardScopeExpression as StandardScopeExpression
from lark_oapi.core.construct import init as init

class StandardScope:
    all: bool | None
    define_expression: str | None
    expressions: list[StandardScopeExpression] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> StandardScopeBuilder: ...

class StandardScopeBuilder:
    def __init__(self) -> None: ...
    def all(self, all: bool) -> StandardScopeBuilder: ...
    def define_expression(self, define_expression: str) -> StandardScopeBuilder: ...
    def expressions(self, expressions: list[StandardScopeExpression]) -> StandardScopeBuilder: ...
    def build(self) -> StandardScope: ...
