from .currency import Currency as Currency
from .grade_standard_dimension import GradeStandardDimension as GradeStandardDimension
from .grade_standard_value import GradeStandardValue as GradeStandardValue
from .i18n import I18n as I18n
from lark_oapi.core.construct import init as init

class Grade:
    id: str | None
    tid: str | None
    serial_number: str | None
    grade_standard_values: list[GradeStandardValue] | None
    dimensions: list[GradeStandardDimension] | None
    currency: Currency | None
    description: I18n | None
    effective_time: str | None
    standard_grade_version: str | None
    created_at: str | None
    updated_at: str | None
    standard_id: str | None
    standard_kind: int | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> GradeBuilder: ...

class GradeBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> GradeBuilder: ...
    def tid(self, tid: str) -> GradeBuilder: ...
    def serial_number(self, serial_number: str) -> GradeBuilder: ...
    def grade_standard_values(self, grade_standard_values: list[GradeStandardValue]) -> GradeBuilder: ...
    def dimensions(self, dimensions: list[GradeStandardDimension]) -> GradeBuilder: ...
    def currency(self, currency: Currency) -> GradeBuilder: ...
    def description(self, description: I18n) -> GradeBuilder: ...
    def effective_time(self, effective_time: str) -> GradeBuilder: ...
    def standard_grade_version(self, standard_grade_version: str) -> GradeBuilder: ...
    def created_at(self, created_at: str) -> GradeBuilder: ...
    def updated_at(self, updated_at: str) -> GradeBuilder: ...
    def standard_id(self, standard_id: str) -> GradeBuilder: ...
    def standard_kind(self, standard_kind: int) -> GradeBuilder: ...
    def build(self) -> Grade: ...
