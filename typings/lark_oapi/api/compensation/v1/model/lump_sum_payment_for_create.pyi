from .lump_sum_payment_detail_for_create import LumpSumPaymentDetailForCreate as LumpSumPaymentDetailForCreate
from lark_oapi.core.construct import init as init

class LumpSumPaymentForCreate:
    unique_id: str | None
    user_id: str | None
    total_amount: str | None
    binding_period: int | None
    currency_id: str | None
    issuance_frequency: int | None
    item_id: str | None
    reference_period_start_date: str | None
    reference_period_end_date: str | None
    details: list[LumpSumPaymentDetailForCreate] | None
    remark: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> LumpSumPaymentForCreateBuilder: ...

class LumpSumPaymentForCreateBuilder:
    def __init__(self) -> None: ...
    def unique_id(self, unique_id: str) -> LumpSumPaymentForCreateBuilder: ...
    def user_id(self, user_id: str) -> LumpSumPaymentForCreateBuilder: ...
    def total_amount(self, total_amount: str) -> LumpSumPaymentForCreateBuilder: ...
    def binding_period(self, binding_period: int) -> LumpSumPaymentForCreateBuilder: ...
    def currency_id(self, currency_id: str) -> LumpSumPaymentForCreateBuilder: ...
    def issuance_frequency(self, issuance_frequency: int) -> LumpSumPaymentForCreateBuilder: ...
    def item_id(self, item_id: str) -> LumpSumPaymentForCreateBuilder: ...
    def reference_period_start_date(self, reference_period_start_date: str) -> LumpSumPaymentForCreateBuilder: ...
    def reference_period_end_date(self, reference_period_end_date: str) -> LumpSumPaymentForCreateBuilder: ...
    def details(self, details: list[LumpSumPaymentDetailForCreate]) -> LumpSumPaymentForCreateBuilder: ...
    def remark(self, remark: str) -> LumpSumPaymentForCreateBuilder: ...
    def build(self) -> LumpSumPaymentForCreate: ...
