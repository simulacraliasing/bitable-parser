from lark_oapi.core.construct import init as init

class Participant:
    participant_name: str | None
    department: str | None
    user_id: str | None
    meeting_room_id: str | None
    employee_id: str | None
    phone: str | None
    email: str | None
    device: str | None
    app_version: str | None
    public_ip: str | None
    internal_ip: str | None
    use_rtc_proxy: bool | None
    location: str | None
    network_type: str | None
    protocol: str | None
    microphone: str | None
    speaker: str | None
    camera: str | None
    audio: bool | None
    video: bool | None
    sharing: bool | None
    join_time: str | None
    leave_time: str | None
    time_in_meeting: str | None
    leave_reason: str | None
    accept_status: int | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ParticipantBuilder: ...

class ParticipantBuilder:
    def __init__(self) -> None: ...
    def participant_name(self, participant_name: str) -> ParticipantBuilder: ...
    def department(self, department: str) -> ParticipantBuilder: ...
    def user_id(self, user_id: str) -> ParticipantBuilder: ...
    def meeting_room_id(self, meeting_room_id: str) -> ParticipantBuilder: ...
    def employee_id(self, employee_id: str) -> ParticipantBuilder: ...
    def phone(self, phone: str) -> ParticipantBuilder: ...
    def email(self, email: str) -> ParticipantBuilder: ...
    def device(self, device: str) -> ParticipantBuilder: ...
    def app_version(self, app_version: str) -> ParticipantBuilder: ...
    def public_ip(self, public_ip: str) -> ParticipantBuilder: ...
    def internal_ip(self, internal_ip: str) -> ParticipantBuilder: ...
    def use_rtc_proxy(self, use_rtc_proxy: bool) -> ParticipantBuilder: ...
    def location(self, location: str) -> ParticipantBuilder: ...
    def network_type(self, network_type: str) -> ParticipantBuilder: ...
    def protocol(self, protocol: str) -> ParticipantBuilder: ...
    def microphone(self, microphone: str) -> ParticipantBuilder: ...
    def speaker(self, speaker: str) -> ParticipantBuilder: ...
    def camera(self, camera: str) -> ParticipantBuilder: ...
    def audio(self, audio: bool) -> ParticipantBuilder: ...
    def video(self, video: bool) -> ParticipantBuilder: ...
    def sharing(self, sharing: bool) -> ParticipantBuilder: ...
    def join_time(self, join_time: str) -> ParticipantBuilder: ...
    def leave_time(self, leave_time: str) -> ParticipantBuilder: ...
    def time_in_meeting(self, time_in_meeting: str) -> ParticipantBuilder: ...
    def leave_reason(self, leave_reason: str) -> ParticipantBuilder: ...
    def accept_status(self, accept_status: int) -> ParticipantBuilder: ...
    def build(self) -> Participant: ...
