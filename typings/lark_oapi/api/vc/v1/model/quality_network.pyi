from lark_oapi.core.construct import init as init

class QualityNetwork:
    time: str | None
    network_delay: str | None
    bitrate_received: str | None
    packet_loss_avg_received: str | None
    packet_loss_max_received: str | None
    bitrate_sent: str | None
    packet_loss_avg_sent: str | None
    packet_loss_max_sent: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> QualityNetworkBuilder: ...

class QualityNetworkBuilder:
    def __init__(self) -> None: ...
    def time(self, time: str) -> QualityNetworkBuilder: ...
    def network_delay(self, network_delay: str) -> QualityNetworkBuilder: ...
    def bitrate_received(self, bitrate_received: str) -> QualityNetworkBuilder: ...
    def packet_loss_avg_received(self, packet_loss_avg_received: str) -> QualityNetworkBuilder: ...
    def packet_loss_max_received(self, packet_loss_max_received: str) -> QualityNetworkBuilder: ...
    def bitrate_sent(self, bitrate_sent: str) -> QualityNetworkBuilder: ...
    def packet_loss_avg_sent(self, packet_loss_avg_sent: str) -> QualityNetworkBuilder: ...
    def packet_loss_max_sent(self, packet_loss_max_sent: str) -> QualityNetworkBuilder: ...
    def build(self) -> QualityNetwork: ...
