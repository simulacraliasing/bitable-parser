from .conditions import Conditions as Conditions
from .options import Options as Options
from lark_oapi.core.construct import init as init

class CustomList:
    custom_type: int | None
    key: str | None
    need_fill: bool | None
    title: str | None
    placeholder: str | None
    options: list[Options] | None
    conditions: list[Conditions] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> CustomListBuilder: ...

class CustomListBuilder:
    def __init__(self) -> None: ...
    def custom_type(self, custom_type: int) -> CustomListBuilder: ...
    def key(self, key: str) -> CustomListBuilder: ...
    def need_fill(self, need_fill: bool) -> CustomListBuilder: ...
    def title(self, title: str) -> CustomListBuilder: ...
    def placeholder(self, placeholder: str) -> CustomListBuilder: ...
    def options(self, options: list[Options]) -> CustomListBuilder: ...
    def conditions(self, conditions: list[Conditions]) -> CustomListBuilder: ...
    def build(self) -> CustomList: ...
