from lark_oapi.core.construct import init as init

class QualityVideoSharing:
    time: str | None
    bitrate_received: str | None
    latency_received: str | None
    jitter_received: str | None
    maximum_resolution_received: str | None
    framerate_received: str | None
    bitrate_sent: str | None
    latency_sent: str | None
    jitter_sent: str | None
    maximum_resolution_sent: str | None
    framerate_sent: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> QualityVideoSharingBuilder: ...

class QualityVideoSharingBuilder:
    def __init__(self) -> None: ...
    def time(self, time: str) -> QualityVideoSharingBuilder: ...
    def bitrate_received(self, bitrate_received: str) -> QualityVideoSharingBuilder: ...
    def latency_received(self, latency_received: str) -> QualityVideoSharingBuilder: ...
    def jitter_received(self, jitter_received: str) -> QualityVideoSharingBuilder: ...
    def maximum_resolution_received(self, maximum_resolution_received: str) -> QualityVideoSharingBuilder: ...
    def framerate_received(self, framerate_received: str) -> QualityVideoSharingBuilder: ...
    def bitrate_sent(self, bitrate_sent: str) -> QualityVideoSharingBuilder: ...
    def latency_sent(self, latency_sent: str) -> QualityVideoSharingBuilder: ...
    def jitter_sent(self, jitter_sent: str) -> QualityVideoSharingBuilder: ...
    def maximum_resolution_sent(self, maximum_resolution_sent: str) -> QualityVideoSharingBuilder: ...
    def framerate_sent(self, framerate_sent: str) -> QualityVideoSharingBuilder: ...
    def build(self) -> QualityVideoSharing: ...
