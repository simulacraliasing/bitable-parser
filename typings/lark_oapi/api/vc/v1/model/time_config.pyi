from lark_oapi.core.construct import init as init

class TimeConfig:
    if_cover_child_scope: bool | None
    time_switch: int | None
    days_in_advance: int | None
    opening_hour: int | None
    start_time: int | None
    end_time: int | None
    max_duration: int | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> TimeConfigBuilder: ...

class TimeConfigBuilder:
    def __init__(self) -> None: ...
    def if_cover_child_scope(self, if_cover_child_scope: bool) -> TimeConfigBuilder: ...
    def time_switch(self, time_switch: int) -> TimeConfigBuilder: ...
    def days_in_advance(self, days_in_advance: int) -> TimeConfigBuilder: ...
    def opening_hour(self, opening_hour: int) -> TimeConfigBuilder: ...
    def start_time(self, start_time: int) -> TimeConfigBuilder: ...
    def end_time(self, end_time: int) -> TimeConfigBuilder: ...
    def max_duration(self, max_duration: int) -> TimeConfigBuilder: ...
    def build(self) -> TimeConfig: ...
