from .meeting_event_user import MeetingEventUser as MeetingEventUser
from .meeting_security_setting import MeetingSecuritySetting as MeetingSecuritySetting
from .meeting_webinar_setting import MeetingWebinarSetting as MeetingWebinarSetting
from lark_oapi.core.construct import init as init

class MeetingEventMeeting:
    id: int | None
    topic: str | None
    meeting_no: str | None
    meeting_source: int | None
    start_time: int | None
    end_time: int | None
    host_user: MeetingEventUser | None
    owner: MeetingEventUser | None
    calendar_event_id: str | None
    meeting_sub_type: int | None
    security_setting: MeetingSecuritySetting | None
    webinar_setting: MeetingWebinarSetting | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> MeetingEventMeetingBuilder: ...

class MeetingEventMeetingBuilder:
    def __init__(self) -> None: ...
    def id(self, id: int) -> MeetingEventMeetingBuilder: ...
    def topic(self, topic: str) -> MeetingEventMeetingBuilder: ...
    def meeting_no(self, meeting_no: str) -> MeetingEventMeetingBuilder: ...
    def meeting_source(self, meeting_source: int) -> MeetingEventMeetingBuilder: ...
    def start_time(self, start_time: int) -> MeetingEventMeetingBuilder: ...
    def end_time(self, end_time: int) -> MeetingEventMeetingBuilder: ...
    def host_user(self, host_user: MeetingEventUser) -> MeetingEventMeetingBuilder: ...
    def owner(self, owner: MeetingEventUser) -> MeetingEventMeetingBuilder: ...
    def calendar_event_id(self, calendar_event_id: str) -> MeetingEventMeetingBuilder: ...
    def meeting_sub_type(self, meeting_sub_type: int) -> MeetingEventMeetingBuilder: ...
    def security_setting(self, security_setting: MeetingSecuritySetting) -> MeetingEventMeetingBuilder: ...
    def webinar_setting(self, webinar_setting: MeetingWebinarSetting) -> MeetingEventMeetingBuilder: ...
    def build(self) -> MeetingEventMeeting: ...
