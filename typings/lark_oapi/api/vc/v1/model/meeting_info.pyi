from .reserved_room import ReservedRoom as ReservedRoom
from lark_oapi.core.construct import init as init

class MeetingInfo:
    meeting_id: str | None
    meeting_topic: str | None
    meeting_type: int | None
    organizer: str | None
    department: str | None
    user_id: str | None
    employee_id: str | None
    email: str | None
    mobile: str | None
    meeting_start_time: str | None
    meeting_end_time: str | None
    meeting_duration: str | None
    number_of_participants: str | None
    number_of_devices: str | None
    audio: bool | None
    video: bool | None
    sharing: bool | None
    recording: bool | None
    telephone: bool | None
    reserved_rooms: list[ReservedRoom] | None
    has_related_document: bool | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> MeetingInfoBuilder: ...

class MeetingInfoBuilder:
    def __init__(self) -> None: ...
    def meeting_id(self, meeting_id: str) -> MeetingInfoBuilder: ...
    def meeting_topic(self, meeting_topic: str) -> MeetingInfoBuilder: ...
    def meeting_type(self, meeting_type: int) -> MeetingInfoBuilder: ...
    def organizer(self, organizer: str) -> MeetingInfoBuilder: ...
    def department(self, department: str) -> MeetingInfoBuilder: ...
    def user_id(self, user_id: str) -> MeetingInfoBuilder: ...
    def employee_id(self, employee_id: str) -> MeetingInfoBuilder: ...
    def email(self, email: str) -> MeetingInfoBuilder: ...
    def mobile(self, mobile: str) -> MeetingInfoBuilder: ...
    def meeting_start_time(self, meeting_start_time: str) -> MeetingInfoBuilder: ...
    def meeting_end_time(self, meeting_end_time: str) -> MeetingInfoBuilder: ...
    def meeting_duration(self, meeting_duration: str) -> MeetingInfoBuilder: ...
    def number_of_participants(self, number_of_participants: str) -> MeetingInfoBuilder: ...
    def number_of_devices(self, number_of_devices: str) -> MeetingInfoBuilder: ...
    def audio(self, audio: bool) -> MeetingInfoBuilder: ...
    def video(self, video: bool) -> MeetingInfoBuilder: ...
    def sharing(self, sharing: bool) -> MeetingInfoBuilder: ...
    def recording(self, recording: bool) -> MeetingInfoBuilder: ...
    def telephone(self, telephone: bool) -> MeetingInfoBuilder: ...
    def reserved_rooms(self, reserved_rooms: list[ReservedRoom]) -> MeetingInfoBuilder: ...
    def has_related_document(self, has_related_document: bool) -> MeetingInfoBuilder: ...
    def build(self) -> MeetingInfo: ...
