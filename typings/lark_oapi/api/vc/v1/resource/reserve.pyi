from ..model.apply_reserve_request import ApplyReserveRequest as ApplyReserveRequest
from ..model.apply_reserve_response import ApplyReserveResponse as ApplyReserveResponse
from ..model.delete_reserve_request import DeleteReserveRequest as DeleteReserveRequest
from ..model.delete_reserve_response import DeleteReserveResponse as DeleteReserveResponse
from ..model.get_active_meeting_reserve_request import GetActiveMeetingReserveRequest as GetActiveMeetingReserveRequest
from ..model.get_active_meeting_reserve_response import GetActiveMeetingReserveResponse as GetActiveMeetingReserveResponse
from ..model.get_reserve_request import GetReserveRequest as GetReserveRequest
from ..model.get_reserve_response import GetReserveResponse as GetReserveResponse
from ..model.update_reserve_request import UpdateReserveRequest as UpdateReserveRequest
from ..model.update_reserve_response import UpdateReserveResponse as UpdateReserveResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Reserve:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def apply(self, request: ApplyReserveRequest, option: RequestOption | None = None) -> ApplyReserveResponse: ...
    async def aapply(self, request: ApplyReserveRequest, option: RequestOption | None = None) -> ApplyReserveResponse: ...
    def delete(self, request: DeleteReserveRequest, option: RequestOption | None = None) -> DeleteReserveResponse: ...
    async def adelete(self, request: DeleteReserveRequest, option: RequestOption | None = None) -> DeleteReserveResponse: ...
    def get(self, request: GetReserveRequest, option: RequestOption | None = None) -> GetReserveResponse: ...
    async def aget(self, request: GetReserveRequest, option: RequestOption | None = None) -> GetReserveResponse: ...
    def get_active_meeting(self, request: GetActiveMeetingReserveRequest, option: RequestOption | None = None) -> GetActiveMeetingReserveResponse: ...
    async def aget_active_meeting(self, request: GetActiveMeetingReserveRequest, option: RequestOption | None = None) -> GetActiveMeetingReserveResponse: ...
    def update(self, request: UpdateReserveRequest, option: RequestOption | None = None) -> UpdateReserveResponse: ...
    async def aupdate(self, request: UpdateReserveRequest, option: RequestOption | None = None) -> UpdateReserveResponse: ...
