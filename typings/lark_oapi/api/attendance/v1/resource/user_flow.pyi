from ..model.batch_create_user_flow_request import BatchCreateUserFlowRequest as BatchCreateUserFlowRequest
from ..model.batch_create_user_flow_response import BatchCreateUserFlowResponse as BatchCreateUserFlowResponse
from ..model.batch_del_user_flow_request import BatchDelUserFlowRequest as BatchDelUserFlowRequest
from ..model.batch_del_user_flow_response import BatchDelUserFlowResponse as BatchDelUserFlowResponse
from ..model.get_user_flow_request import GetUserFlowRequest as GetUserFlowRequest
from ..model.get_user_flow_response import GetUserFlowResponse as GetUserFlowResponse
from ..model.query_user_flow_request import QueryUserFlowRequest as QueryUserFlowRequest
from ..model.query_user_flow_response import QueryUserFlowResponse as QueryUserFlowResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class UserFlow:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def batch_create(self, request: BatchCreateUserFlowRequest, option: RequestOption | None = None) -> BatchCreateUserFlowResponse: ...
    async def abatch_create(self, request: BatchCreateUserFlowRequest, option: RequestOption | None = None) -> BatchCreateUserFlowResponse: ...
    def batch_del(self, request: BatchDelUserFlowRequest, option: RequestOption | None = None) -> BatchDelUserFlowResponse: ...
    async def abatch_del(self, request: BatchDelUserFlowRequest, option: RequestOption | None = None) -> BatchDelUserFlowResponse: ...
    def get(self, request: GetUserFlowRequest, option: RequestOption | None = None) -> GetUserFlowResponse: ...
    async def aget(self, request: GetUserFlowRequest, option: RequestOption | None = None) -> GetUserFlowResponse: ...
    def query(self, request: QueryUserFlowRequest, option: RequestOption | None = None) -> QueryUserFlowResponse: ...
    async def aquery(self, request: QueryUserFlowRequest, option: RequestOption | None = None) -> QueryUserFlowResponse: ...
