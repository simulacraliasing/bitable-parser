from ..model.del_report_archive_rule_request import DelReportArchiveRuleRequest as DelReportArchiveRuleRequest
from ..model.del_report_archive_rule_response import DelReportArchiveRuleResponse as DelReportArchiveRuleResponse
from ..model.list_archive_rule_request import ListArchiveRuleRequest as ListArchiveRuleRequest
from ..model.list_archive_rule_response import ListArchiveRuleResponse as ListArchiveRuleResponse
from ..model.upload_report_archive_rule_request import UploadReportArchiveRuleRequest as UploadReportArchiveRuleRequest
from ..model.upload_report_archive_rule_response import UploadReportArchiveRuleResponse as UploadReportArchiveRuleResponse
from ..model.user_stats_fields_query_archive_rule_request import UserStatsFieldsQueryArchiveRuleRequest as UserStatsFieldsQueryArchiveRuleRequest
from ..model.user_stats_fields_query_archive_rule_response import UserStatsFieldsQueryArchiveRuleResponse as UserStatsFieldsQueryArchiveRuleResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class ArchiveRule:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def del_report(self, request: DelReportArchiveRuleRequest, option: RequestOption | None = None) -> DelReportArchiveRuleResponse: ...
    async def adel_report(self, request: DelReportArchiveRuleRequest, option: RequestOption | None = None) -> DelReportArchiveRuleResponse: ...
    def list(self, request: ListArchiveRuleRequest, option: RequestOption | None = None) -> ListArchiveRuleResponse: ...
    async def alist(self, request: ListArchiveRuleRequest, option: RequestOption | None = None) -> ListArchiveRuleResponse: ...
    def upload_report(self, request: UploadReportArchiveRuleRequest, option: RequestOption | None = None) -> UploadReportArchiveRuleResponse: ...
    async def aupload_report(self, request: UploadReportArchiveRuleRequest, option: RequestOption | None = None) -> UploadReportArchiveRuleResponse: ...
    def user_stats_fields_query(self, request: UserStatsFieldsQueryArchiveRuleRequest, option: RequestOption | None = None) -> UserStatsFieldsQueryArchiveRuleResponse: ...
    async def auser_stats_fields_query(self, request: UserStatsFieldsQueryArchiveRuleRequest, option: RequestOption | None = None) -> UserStatsFieldsQueryArchiveRuleResponse: ...
