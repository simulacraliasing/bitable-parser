from lark_oapi.core.construct import init as init

class UserFlow:
    user_id: str | None
    creator_id: str | None
    location_name: str | None
    check_time: str | None
    comment: str | None
    record_id: str | None
    longitude: float | None
    latitude: float | None
    ssid: str | None
    bssid: str | None
    is_field: bool | None
    is_wifi: bool | None
    type: int | None
    photo_urls: list[str] | None
    device_id: str | None
    check_result: str | None
    external_id: str | None
    idempotent_id: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> UserFlowBuilder: ...

class UserFlowBuilder:
    def __init__(self) -> None: ...
    def user_id(self, user_id: str) -> UserFlowBuilder: ...
    def creator_id(self, creator_id: str) -> UserFlowBuilder: ...
    def location_name(self, location_name: str) -> UserFlowBuilder: ...
    def check_time(self, check_time: str) -> UserFlowBuilder: ...
    def comment(self, comment: str) -> UserFlowBuilder: ...
    def record_id(self, record_id: str) -> UserFlowBuilder: ...
    def longitude(self, longitude: float) -> UserFlowBuilder: ...
    def latitude(self, latitude: float) -> UserFlowBuilder: ...
    def ssid(self, ssid: str) -> UserFlowBuilder: ...
    def bssid(self, bssid: str) -> UserFlowBuilder: ...
    def is_field(self, is_field: bool) -> UserFlowBuilder: ...
    def is_wifi(self, is_wifi: bool) -> UserFlowBuilder: ...
    def type(self, type: int) -> UserFlowBuilder: ...
    def photo_urls(self, photo_urls: list[str]) -> UserFlowBuilder: ...
    def device_id(self, device_id: str) -> UserFlowBuilder: ...
    def check_result(self, check_result: str) -> UserFlowBuilder: ...
    def external_id(self, external_id: str) -> UserFlowBuilder: ...
    def idempotent_id(self, idempotent_id: str) -> UserFlowBuilder: ...
    def build(self) -> UserFlow: ...
