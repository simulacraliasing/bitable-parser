from lark_oapi.core.construct import init as init

class UserTaskRemedy:
    user_id: str | None
    remedy_date: int | None
    punch_no: int | None
    work_type: int | None
    approval_id: str | None
    remedy_time: str | None
    status: int | None
    reason: str | None
    time: str | None
    time_zone: str | None
    create_time: str | None
    update_time: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> UserTaskRemedyBuilder: ...

class UserTaskRemedyBuilder:
    def __init__(self) -> None: ...
    def user_id(self, user_id: str) -> UserTaskRemedyBuilder: ...
    def remedy_date(self, remedy_date: int) -> UserTaskRemedyBuilder: ...
    def punch_no(self, punch_no: int) -> UserTaskRemedyBuilder: ...
    def work_type(self, work_type: int) -> UserTaskRemedyBuilder: ...
    def approval_id(self, approval_id: str) -> UserTaskRemedyBuilder: ...
    def remedy_time(self, remedy_time: str) -> UserTaskRemedyBuilder: ...
    def status(self, status: int) -> UserTaskRemedyBuilder: ...
    def reason(self, reason: str) -> UserTaskRemedyBuilder: ...
    def time(self, time: str) -> UserTaskRemedyBuilder: ...
    def time_zone(self, time_zone: str) -> UserTaskRemedyBuilder: ...
    def create_time(self, create_time: str) -> UserTaskRemedyBuilder: ...
    def update_time(self, update_time: str) -> UserTaskRemedyBuilder: ...
    def build(self) -> UserTaskRemedy: ...
