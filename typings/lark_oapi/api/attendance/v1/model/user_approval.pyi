from .user_leave import UserLeave as UserLeave
from .user_out import UserOut as UserOut
from .user_overtime_work import UserOvertimeWork as UserOvertimeWork
from .user_trip import UserTrip as UserTrip
from lark_oapi.core.construct import init as init

class UserApproval:
    user_id: str | None
    date: str | None
    outs: list[UserOut] | None
    leaves: list[UserLeave] | None
    overtime_works: list[UserOvertimeWork] | None
    trips: list[UserTrip] | None
    time_zone: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> UserApprovalBuilder: ...

class UserApprovalBuilder:
    def __init__(self) -> None: ...
    def user_id(self, user_id: str) -> UserApprovalBuilder: ...
    def date(self, date: str) -> UserApprovalBuilder: ...
    def outs(self, outs: list[UserOut]) -> UserApprovalBuilder: ...
    def leaves(self, leaves: list[UserLeave]) -> UserApprovalBuilder: ...
    def overtime_works(self, overtime_works: list[UserOvertimeWork]) -> UserApprovalBuilder: ...
    def trips(self, trips: list[UserTrip]) -> UserApprovalBuilder: ...
    def time_zone(self, time_zone: str) -> UserApprovalBuilder: ...
    def build(self) -> UserApproval: ...
