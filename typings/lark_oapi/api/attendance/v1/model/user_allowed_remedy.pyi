from lark_oapi.core.construct import init as init

class UserAllowedRemedy:
    user_id: str | None
    remedy_date: int | None
    is_free_punch: bool | None
    punch_no: int | None
    work_type: int | None
    punch_status: str | None
    normal_punch_time: str | None
    remedy_start_time: str | None
    remedy_end_time: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> UserAllowedRemedyBuilder: ...

class UserAllowedRemedyBuilder:
    def __init__(self) -> None: ...
    def user_id(self, user_id: str) -> UserAllowedRemedyBuilder: ...
    def remedy_date(self, remedy_date: int) -> UserAllowedRemedyBuilder: ...
    def is_free_punch(self, is_free_punch: bool) -> UserAllowedRemedyBuilder: ...
    def punch_no(self, punch_no: int) -> UserAllowedRemedyBuilder: ...
    def work_type(self, work_type: int) -> UserAllowedRemedyBuilder: ...
    def punch_status(self, punch_status: str) -> UserAllowedRemedyBuilder: ...
    def normal_punch_time(self, normal_punch_time: str) -> UserAllowedRemedyBuilder: ...
    def remedy_start_time(self, remedy_start_time: str) -> UserAllowedRemedyBuilder: ...
    def remedy_end_time(self, remedy_end_time: str) -> UserAllowedRemedyBuilder: ...
    def build(self) -> UserAllowedRemedy: ...
