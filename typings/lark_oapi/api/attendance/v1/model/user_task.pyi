from .task_result import TaskResult as TaskResult
from lark_oapi.core.construct import init as init

class UserTask:
    result_id: str | None
    user_id: str | None
    employee_name: str | None
    day: int | None
    group_id: str | None
    shift_id: str | None
    records: list[TaskResult] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> UserTaskBuilder: ...

class UserTaskBuilder:
    def __init__(self) -> None: ...
    def result_id(self, result_id: str) -> UserTaskBuilder: ...
    def user_id(self, user_id: str) -> UserTaskBuilder: ...
    def employee_name(self, employee_name: str) -> UserTaskBuilder: ...
    def day(self, day: int) -> UserTaskBuilder: ...
    def group_id(self, group_id: str) -> UserTaskBuilder: ...
    def shift_id(self, shift_id: str) -> UserTaskBuilder: ...
    def records(self, records: list[TaskResult]) -> UserTaskBuilder: ...
    def build(self) -> UserTask: ...
