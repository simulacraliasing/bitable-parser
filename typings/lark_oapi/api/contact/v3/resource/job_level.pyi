from ..model.create_job_level_request import CreateJobLevelRequest as CreateJobLevelRequest
from ..model.create_job_level_response import CreateJobLevelResponse as CreateJobLevelResponse
from ..model.delete_job_level_request import DeleteJobLevelRequest as DeleteJobLevelRequest
from ..model.delete_job_level_response import DeleteJobLevelResponse as DeleteJobLevelResponse
from ..model.get_job_level_request import GetJobLevelRequest as GetJobLevelRequest
from ..model.get_job_level_response import GetJobLevelResponse as GetJobLevelResponse
from ..model.list_job_level_request import ListJobLevelRequest as ListJobLevelRequest
from ..model.list_job_level_response import ListJobLevelResponse as ListJobLevelResponse
from ..model.update_job_level_request import UpdateJobLevelRequest as UpdateJobLevelRequest
from ..model.update_job_level_response import UpdateJobLevelResponse as UpdateJobLevelResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class JobLevel:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateJobLevelRequest, option: RequestOption | None = None) -> CreateJobLevelResponse: ...
    async def acreate(self, request: CreateJobLevelRequest, option: RequestOption | None = None) -> CreateJobLevelResponse: ...
    def delete(self, request: DeleteJobLevelRequest, option: RequestOption | None = None) -> DeleteJobLevelResponse: ...
    async def adelete(self, request: DeleteJobLevelRequest, option: RequestOption | None = None) -> DeleteJobLevelResponse: ...
    def get(self, request: GetJobLevelRequest, option: RequestOption | None = None) -> GetJobLevelResponse: ...
    async def aget(self, request: GetJobLevelRequest, option: RequestOption | None = None) -> GetJobLevelResponse: ...
    def list(self, request: ListJobLevelRequest, option: RequestOption | None = None) -> ListJobLevelResponse: ...
    async def alist(self, request: ListJobLevelRequest, option: RequestOption | None = None) -> ListJobLevelResponse: ...
    def update(self, request: UpdateJobLevelRequest, option: RequestOption | None = None) -> UpdateJobLevelResponse: ...
    async def aupdate(self, request: UpdateJobLevelRequest, option: RequestOption | None = None) -> UpdateJobLevelResponse: ...
