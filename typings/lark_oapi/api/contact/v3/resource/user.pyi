from ..model.batch_get_id_user_request import BatchGetIdUserRequest as BatchGetIdUserRequest
from ..model.batch_get_id_user_response import BatchGetIdUserResponse as BatchGetIdUserResponse
from ..model.batch_user_request import BatchUserRequest as BatchUserRequest
from ..model.batch_user_response import BatchUserResponse as BatchUserResponse
from ..model.create_user_request import CreateUserRequest as CreateUserRequest
from ..model.create_user_response import CreateUserResponse as CreateUserResponse
from ..model.delete_user_request import DeleteUserRequest as DeleteUserRequest
from ..model.delete_user_response import DeleteUserResponse as DeleteUserResponse
from ..model.find_by_department_user_request import FindByDepartmentUserRequest as FindByDepartmentUserRequest
from ..model.find_by_department_user_response import FindByDepartmentUserResponse as FindByDepartmentUserResponse
from ..model.get_user_request import GetUserRequest as GetUserRequest
from ..model.get_user_response import GetUserResponse as GetUserResponse
from ..model.list_user_request import ListUserRequest as ListUserRequest
from ..model.list_user_response import ListUserResponse as ListUserResponse
from ..model.patch_user_request import PatchUserRequest as PatchUserRequest
from ..model.patch_user_response import PatchUserResponse as PatchUserResponse
from ..model.resurrect_user_request import ResurrectUserRequest as ResurrectUserRequest
from ..model.resurrect_user_response import ResurrectUserResponse as ResurrectUserResponse
from ..model.update_user_id_user_request import UpdateUserIdUserRequest as UpdateUserIdUserRequest
from ..model.update_user_id_user_response import UpdateUserIdUserResponse as UpdateUserIdUserResponse
from ..model.update_user_request import UpdateUserRequest as UpdateUserRequest
from ..model.update_user_response import UpdateUserResponse as UpdateUserResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class User:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def batch(self, request: BatchUserRequest, option: RequestOption | None = None) -> BatchUserResponse: ...
    async def abatch(self, request: BatchUserRequest, option: RequestOption | None = None) -> BatchUserResponse: ...
    def batch_get_id(self, request: BatchGetIdUserRequest, option: RequestOption | None = None) -> BatchGetIdUserResponse: ...
    async def abatch_get_id(self, request: BatchGetIdUserRequest, option: RequestOption | None = None) -> BatchGetIdUserResponse: ...
    def create(self, request: CreateUserRequest, option: RequestOption | None = None) -> CreateUserResponse: ...
    async def acreate(self, request: CreateUserRequest, option: RequestOption | None = None) -> CreateUserResponse: ...
    def delete(self, request: DeleteUserRequest, option: RequestOption | None = None) -> DeleteUserResponse: ...
    async def adelete(self, request: DeleteUserRequest, option: RequestOption | None = None) -> DeleteUserResponse: ...
    def find_by_department(self, request: FindByDepartmentUserRequest, option: RequestOption | None = None) -> FindByDepartmentUserResponse: ...
    async def afind_by_department(self, request: FindByDepartmentUserRequest, option: RequestOption | None = None) -> FindByDepartmentUserResponse: ...
    def get(self, request: GetUserRequest, option: RequestOption | None = None) -> GetUserResponse: ...
    async def aget(self, request: GetUserRequest, option: RequestOption | None = None) -> GetUserResponse: ...
    def list(self, request: ListUserRequest, option: RequestOption | None = None) -> ListUserResponse: ...
    async def alist(self, request: ListUserRequest, option: RequestOption | None = None) -> ListUserResponse: ...
    def patch(self, request: PatchUserRequest, option: RequestOption | None = None) -> PatchUserResponse: ...
    async def apatch(self, request: PatchUserRequest, option: RequestOption | None = None) -> PatchUserResponse: ...
    def resurrect(self, request: ResurrectUserRequest, option: RequestOption | None = None) -> ResurrectUserResponse: ...
    async def aresurrect(self, request: ResurrectUserRequest, option: RequestOption | None = None) -> ResurrectUserResponse: ...
    def update(self, request: UpdateUserRequest, option: RequestOption | None = None) -> UpdateUserResponse: ...
    async def aupdate(self, request: UpdateUserRequest, option: RequestOption | None = None) -> UpdateUserResponse: ...
    def update_user_id(self, request: UpdateUserIdUserRequest, option: RequestOption | None = None) -> UpdateUserIdUserResponse: ...
    async def aupdate_user_id(self, request: UpdateUserIdUserRequest, option: RequestOption | None = None) -> UpdateUserIdUserResponse: ...
