from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class GetFunctionalRoleMemberRequest(BaseRequest):
    user_id_type: str | None
    department_id_type: str | None
    role_id: str | None
    member_id: str | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> GetFunctionalRoleMemberRequestBuilder: ...

class GetFunctionalRoleMemberRequestBuilder:
    def __init__(self) -> None: ...
    def user_id_type(self, user_id_type: str) -> GetFunctionalRoleMemberRequestBuilder: ...
    def department_id_type(self, department_id_type: str) -> GetFunctionalRoleMemberRequestBuilder: ...
    def role_id(self, role_id: str) -> GetFunctionalRoleMemberRequestBuilder: ...
    def member_id(self, member_id: str) -> GetFunctionalRoleMemberRequestBuilder: ...
    def build(self) -> GetFunctionalRoleMemberRequest: ...
