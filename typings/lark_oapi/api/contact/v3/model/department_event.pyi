from .department_leader import DepartmentLeader as DepartmentLeader
from .department_status import DepartmentStatus as DepartmentStatus
from .user_id import UserId as UserId
from lark_oapi.core.construct import init as init

class DepartmentEvent:
    name: str | None
    parent_department_id: str | None
    department_id: str | None
    open_department_id: str | None
    leader_user_id: str | None
    chat_id: str | None
    order: int | None
    unit_ids: list[str] | None
    status: DepartmentStatus | None
    leaders: list[DepartmentLeader] | None
    department_hrbps: list[UserId] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> DepartmentEventBuilder: ...

class DepartmentEventBuilder:
    def __init__(self) -> None: ...
    def name(self, name: str) -> DepartmentEventBuilder: ...
    def parent_department_id(self, parent_department_id: str) -> DepartmentEventBuilder: ...
    def department_id(self, department_id: str) -> DepartmentEventBuilder: ...
    def open_department_id(self, open_department_id: str) -> DepartmentEventBuilder: ...
    def leader_user_id(self, leader_user_id: str) -> DepartmentEventBuilder: ...
    def chat_id(self, chat_id: str) -> DepartmentEventBuilder: ...
    def order(self, order: int) -> DepartmentEventBuilder: ...
    def unit_ids(self, unit_ids: list[str]) -> DepartmentEventBuilder: ...
    def status(self, status: DepartmentStatus) -> DepartmentEventBuilder: ...
    def leaders(self, leaders: list[DepartmentLeader]) -> DepartmentEventBuilder: ...
    def department_hrbps(self, department_hrbps: list[UserId]) -> DepartmentEventBuilder: ...
    def build(self) -> DepartmentEvent: ...
