from .dynamic_group_expression import DynamicGroupExpression as DynamicGroupExpression
from lark_oapi.core.construct import init as init

class DynamicGroupRule:
    department_level: str | None
    expressions: list[DynamicGroupExpression] | None
    joiner_rule: str | None
    group_status: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> DynamicGroupRuleBuilder: ...

class DynamicGroupRuleBuilder:
    def __init__(self) -> None: ...
    def department_level(self, department_level: str) -> DynamicGroupRuleBuilder: ...
    def expressions(self, expressions: list[DynamicGroupExpression]) -> DynamicGroupRuleBuilder: ...
    def joiner_rule(self, joiner_rule: str) -> DynamicGroupRuleBuilder: ...
    def group_status(self, group_status: str) -> DynamicGroupRuleBuilder: ...
    def build(self) -> DynamicGroupRule: ...
