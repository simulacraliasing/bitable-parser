from ..model.create_agent_skill_request import CreateAgentSkillRequest as CreateAgentSkillRequest
from ..model.create_agent_skill_response import CreateAgentSkillResponse as CreateAgentSkillResponse
from ..model.delete_agent_skill_request import DeleteAgentSkillRequest as DeleteAgentSkillRequest
from ..model.delete_agent_skill_response import DeleteAgentSkillResponse as DeleteAgentSkillResponse
from ..model.get_agent_skill_request import GetAgentSkillRequest as GetAgentSkillRequest
from ..model.get_agent_skill_response import GetAgentSkillResponse as GetAgentSkillResponse
from ..model.list_agent_skill_request import ListAgentSkillRequest as ListAgentSkillRequest
from ..model.list_agent_skill_response import ListAgentSkillResponse as ListAgentSkillResponse
from ..model.patch_agent_skill_request import PatchAgentSkillRequest as PatchAgentSkillRequest
from ..model.patch_agent_skill_response import PatchAgentSkillResponse as PatchAgentSkillResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class AgentSkill:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateAgentSkillRequest, option: RequestOption | None = None) -> CreateAgentSkillResponse: ...
    async def acreate(self, request: CreateAgentSkillRequest, option: RequestOption | None = None) -> CreateAgentSkillResponse: ...
    def delete(self, request: DeleteAgentSkillRequest, option: RequestOption | None = None) -> DeleteAgentSkillResponse: ...
    async def adelete(self, request: DeleteAgentSkillRequest, option: RequestOption | None = None) -> DeleteAgentSkillResponse: ...
    def get(self, request: GetAgentSkillRequest, option: RequestOption | None = None) -> GetAgentSkillResponse: ...
    async def aget(self, request: GetAgentSkillRequest, option: RequestOption | None = None) -> GetAgentSkillResponse: ...
    def list(self, request: ListAgentSkillRequest, option: RequestOption | None = None) -> ListAgentSkillResponse: ...
    async def alist(self, request: ListAgentSkillRequest, option: RequestOption | None = None) -> ListAgentSkillResponse: ...
    def patch(self, request: PatchAgentSkillRequest, option: RequestOption | None = None) -> PatchAgentSkillResponse: ...
    async def apatch(self, request: PatchAgentSkillRequest, option: RequestOption | None = None) -> PatchAgentSkillResponse: ...
