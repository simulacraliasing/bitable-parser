from ..model.answer_user_query_ticket_request import AnswerUserQueryTicketRequest as AnswerUserQueryTicketRequest
from ..model.answer_user_query_ticket_response import AnswerUserQueryTicketResponse as AnswerUserQueryTicketResponse
from ..model.customized_fields_ticket_request import CustomizedFieldsTicketRequest as CustomizedFieldsTicketRequest
from ..model.customized_fields_ticket_response import CustomizedFieldsTicketResponse as CustomizedFieldsTicketResponse
from ..model.get_ticket_request import GetTicketRequest as GetTicketRequest
from ..model.get_ticket_response import GetTicketResponse as GetTicketResponse
from ..model.list_ticket_request import ListTicketRequest as ListTicketRequest
from ..model.list_ticket_response import ListTicketResponse as ListTicketResponse
from ..model.start_service_ticket_request import StartServiceTicketRequest as StartServiceTicketRequest
from ..model.start_service_ticket_response import StartServiceTicketResponse as StartServiceTicketResponse
from ..model.ticket_image_ticket_request import TicketImageTicketRequest as TicketImageTicketRequest
from ..model.ticket_image_ticket_response import TicketImageTicketResponse as TicketImageTicketResponse
from ..model.update_ticket_request import UpdateTicketRequest as UpdateTicketRequest
from ..model.update_ticket_response import UpdateTicketResponse as UpdateTicketResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Ticket:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def answer_user_query(self, request: AnswerUserQueryTicketRequest, option: RequestOption | None = None) -> AnswerUserQueryTicketResponse: ...
    async def aanswer_user_query(self, request: AnswerUserQueryTicketRequest, option: RequestOption | None = None) -> AnswerUserQueryTicketResponse: ...
    def customized_fields(self, request: CustomizedFieldsTicketRequest, option: RequestOption | None = None) -> CustomizedFieldsTicketResponse: ...
    async def acustomized_fields(self, request: CustomizedFieldsTicketRequest, option: RequestOption | None = None) -> CustomizedFieldsTicketResponse: ...
    def get(self, request: GetTicketRequest, option: RequestOption | None = None) -> GetTicketResponse: ...
    async def aget(self, request: GetTicketRequest, option: RequestOption | None = None) -> GetTicketResponse: ...
    def list(self, request: ListTicketRequest, option: RequestOption | None = None) -> ListTicketResponse: ...
    async def alist(self, request: ListTicketRequest, option: RequestOption | None = None) -> ListTicketResponse: ...
    def start_service(self, request: StartServiceTicketRequest, option: RequestOption | None = None) -> StartServiceTicketResponse: ...
    async def astart_service(self, request: StartServiceTicketRequest, option: RequestOption | None = None) -> StartServiceTicketResponse: ...
    def ticket_image(self, request: TicketImageTicketRequest, option: RequestOption | None = None) -> TicketImageTicketResponse: ...
    async def aticket_image(self, request: TicketImageTicketRequest, option: RequestOption | None = None) -> TicketImageTicketResponse: ...
    def update(self, request: UpdateTicketRequest, option: RequestOption | None = None) -> UpdateTicketResponse: ...
    async def aupdate(self, request: UpdateTicketRequest, option: RequestOption | None = None) -> UpdateTicketResponse: ...
