from ..model.create_category_request import CreateCategoryRequest as CreateCategoryRequest
from ..model.create_category_response import CreateCategoryResponse as CreateCategoryResponse
from ..model.delete_category_request import DeleteCategoryRequest as DeleteCategoryRequest
from ..model.delete_category_response import DeleteCategoryResponse as DeleteCategoryResponse
from ..model.get_category_request import GetCategoryRequest as GetCategoryRequest
from ..model.get_category_response import GetCategoryResponse as GetCategoryResponse
from ..model.list_category_request import ListCategoryRequest as ListCategoryRequest
from ..model.list_category_response import ListCategoryResponse as ListCategoryResponse
from ..model.patch_category_request import PatchCategoryRequest as PatchCategoryRequest
from ..model.patch_category_response import PatchCategoryResponse as PatchCategoryResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Category:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateCategoryRequest, option: RequestOption | None = None) -> CreateCategoryResponse: ...
    async def acreate(self, request: CreateCategoryRequest, option: RequestOption | None = None) -> CreateCategoryResponse: ...
    def delete(self, request: DeleteCategoryRequest, option: RequestOption | None = None) -> DeleteCategoryResponse: ...
    async def adelete(self, request: DeleteCategoryRequest, option: RequestOption | None = None) -> DeleteCategoryResponse: ...
    def get(self, request: GetCategoryRequest, option: RequestOption | None = None) -> GetCategoryResponse: ...
    async def aget(self, request: GetCategoryRequest, option: RequestOption | None = None) -> GetCategoryResponse: ...
    def list(self, request: ListCategoryRequest, option: RequestOption | None = None) -> ListCategoryResponse: ...
    async def alist(self, request: ListCategoryRequest, option: RequestOption | None = None) -> ListCategoryResponse: ...
    def patch(self, request: PatchCategoryRequest, option: RequestOption | None = None) -> PatchCategoryResponse: ...
    async def apatch(self, request: PatchCategoryRequest, option: RequestOption | None = None) -> PatchCategoryResponse: ...
