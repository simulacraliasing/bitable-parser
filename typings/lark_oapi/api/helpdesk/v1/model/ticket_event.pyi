from .customized_field_display_item import CustomizedFieldDisplayItem as CustomizedFieldDisplayItem
from .ticket_user_event import TicketUserEvent as TicketUserEvent
from lark_oapi.core.construct import init as init

class TicketEvent:
    ticket_id: str | None
    helpdesk_id: str | None
    guest: TicketUserEvent | None
    stage: int | None
    status: int | None
    score: int | None
    created_at: int | None
    updated_at: int | None
    closed_at: int | None
    agents: list[TicketUserEvent] | None
    channel: int | None
    solve: int | None
    closed_by: TicketUserEvent | None
    collaborators: list[TicketUserEvent] | None
    customized_fields: list[CustomizedFieldDisplayItem] | None
    chat_id: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> TicketEventBuilder: ...

class TicketEventBuilder:
    def __init__(self) -> None: ...
    def ticket_id(self, ticket_id: str) -> TicketEventBuilder: ...
    def helpdesk_id(self, helpdesk_id: str) -> TicketEventBuilder: ...
    def guest(self, guest: TicketUserEvent) -> TicketEventBuilder: ...
    def stage(self, stage: int) -> TicketEventBuilder: ...
    def status(self, status: int) -> TicketEventBuilder: ...
    def score(self, score: int) -> TicketEventBuilder: ...
    def created_at(self, created_at: int) -> TicketEventBuilder: ...
    def updated_at(self, updated_at: int) -> TicketEventBuilder: ...
    def closed_at(self, closed_at: int) -> TicketEventBuilder: ...
    def agents(self, agents: list[TicketUserEvent]) -> TicketEventBuilder: ...
    def channel(self, channel: int) -> TicketEventBuilder: ...
    def solve(self, solve: int) -> TicketEventBuilder: ...
    def closed_by(self, closed_by: TicketUserEvent) -> TicketEventBuilder: ...
    def collaborators(self, collaborators: list[TicketUserEvent]) -> TicketEventBuilder: ...
    def customized_fields(self, customized_fields: list[CustomizedFieldDisplayItem]) -> TicketEventBuilder: ...
    def chat_id(self, chat_id: str) -> TicketEventBuilder: ...
    def build(self) -> TicketEvent: ...
