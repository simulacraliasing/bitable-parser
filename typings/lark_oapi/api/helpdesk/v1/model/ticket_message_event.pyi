from .ticket import Ticket as Ticket
from .ticket_message_content import TicketMessageContent as TicketMessageContent
from .user_id import UserId as UserId
from lark_oapi.core.construct import init as init

class TicketMessageEvent:
    ticket_message_id: str | None
    message_id: str | None
    msg_type: str | None
    position: str | None
    sender_id: UserId | None
    sender_type: int | None
    text: str | None
    ticket: Ticket | None
    event_id: str | None
    chat_id: str | None
    content: TicketMessageContent | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> TicketMessageEventBuilder: ...

class TicketMessageEventBuilder:
    def __init__(self) -> None: ...
    def ticket_message_id(self, ticket_message_id: str) -> TicketMessageEventBuilder: ...
    def message_id(self, message_id: str) -> TicketMessageEventBuilder: ...
    def msg_type(self, msg_type: str) -> TicketMessageEventBuilder: ...
    def position(self, position: str) -> TicketMessageEventBuilder: ...
    def sender_id(self, sender_id: UserId) -> TicketMessageEventBuilder: ...
    def sender_type(self, sender_type: int) -> TicketMessageEventBuilder: ...
    def text(self, text: str) -> TicketMessageEventBuilder: ...
    def ticket(self, ticket: Ticket) -> TicketMessageEventBuilder: ...
    def event_id(self, event_id: str) -> TicketMessageEventBuilder: ...
    def chat_id(self, chat_id: str) -> TicketMessageEventBuilder: ...
    def content(self, content: TicketMessageContent) -> TicketMessageEventBuilder: ...
    def build(self) -> TicketMessageEvent: ...
