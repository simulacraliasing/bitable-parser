from .notification_chat import NotificationChat as NotificationChat
from .notification_department import NotificationDepartment as NotificationDepartment
from .notification_user import NotificationUser as NotificationUser
from lark_oapi.core.construct import init as init

class Notification:
    id: str | None
    job_name: str | None
    status: int | None
    create_user: NotificationUser | None
    created_at: str | None
    update_user: NotificationUser | None
    updated_at: str | None
    target_user_count: int | None
    sent_user_count: int | None
    read_user_count: int | None
    send_at: str | None
    push_content: str | None
    push_type: int | None
    push_scope_type: int | None
    new_staff_scope_type: int | None
    new_staff_scope_department_list: list[NotificationDepartment] | None
    user_list: list[NotificationUser] | None
    department_list: list[NotificationDepartment] | None
    chat_list: list[NotificationChat] | None
    ext: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> NotificationBuilder: ...

class NotificationBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> NotificationBuilder: ...
    def job_name(self, job_name: str) -> NotificationBuilder: ...
    def status(self, status: int) -> NotificationBuilder: ...
    def create_user(self, create_user: NotificationUser) -> NotificationBuilder: ...
    def created_at(self, created_at: str) -> NotificationBuilder: ...
    def update_user(self, update_user: NotificationUser) -> NotificationBuilder: ...
    def updated_at(self, updated_at: str) -> NotificationBuilder: ...
    def target_user_count(self, target_user_count: int) -> NotificationBuilder: ...
    def sent_user_count(self, sent_user_count: int) -> NotificationBuilder: ...
    def read_user_count(self, read_user_count: int) -> NotificationBuilder: ...
    def send_at(self, send_at: str) -> NotificationBuilder: ...
    def push_content(self, push_content: str) -> NotificationBuilder: ...
    def push_type(self, push_type: int) -> NotificationBuilder: ...
    def push_scope_type(self, push_scope_type: int) -> NotificationBuilder: ...
    def new_staff_scope_type(self, new_staff_scope_type: int) -> NotificationBuilder: ...
    def new_staff_scope_department_list(self, new_staff_scope_department_list: list[NotificationDepartment]) -> NotificationBuilder: ...
    def user_list(self, user_list: list[NotificationUser]) -> NotificationBuilder: ...
    def department_list(self, department_list: list[NotificationDepartment]) -> NotificationBuilder: ...
    def chat_list(self, chat_list: list[NotificationChat]) -> NotificationBuilder: ...
    def ext(self, ext: str) -> NotificationBuilder: ...
    def build(self) -> Notification: ...
