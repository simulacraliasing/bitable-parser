from .model.p2_helpdesk_notification_approve_v1 import P2HelpdeskNotificationApproveV1 as P2HelpdeskNotificationApproveV1
from .model.p2_helpdesk_ticket_created_v1 import P2HelpdeskTicketCreatedV1 as P2HelpdeskTicketCreatedV1
from .model.p2_helpdesk_ticket_message_created_v1 import P2HelpdeskTicketMessageCreatedV1 as P2HelpdeskTicketMessageCreatedV1
from .model.p2_helpdesk_ticket_updated_v1 import P2HelpdeskTicketUpdatedV1 as P2HelpdeskTicketUpdatedV1
from _typeshed import Incomplete
from lark_oapi.event.processor import IEventProcessor as IEventProcessor
from typing import Callable

class P2HelpdeskNotificationApproveV1Processor(IEventProcessor[P2HelpdeskNotificationApproveV1]):
    f: Incomplete
    def __init__(self, f: Callable[[P2HelpdeskNotificationApproveV1], None]) -> None: ...
    def type(self) -> type[P2HelpdeskNotificationApproveV1]: ...
    def do(self, data: P2HelpdeskNotificationApproveV1) -> None: ...

class P2HelpdeskTicketCreatedV1Processor(IEventProcessor[P2HelpdeskTicketCreatedV1]):
    f: Incomplete
    def __init__(self, f: Callable[[P2HelpdeskTicketCreatedV1], None]) -> None: ...
    def type(self) -> type[P2HelpdeskTicketCreatedV1]: ...
    def do(self, data: P2HelpdeskTicketCreatedV1) -> None: ...

class P2HelpdeskTicketUpdatedV1Processor(IEventProcessor[P2HelpdeskTicketUpdatedV1]):
    f: Incomplete
    def __init__(self, f: Callable[[P2HelpdeskTicketUpdatedV1], None]) -> None: ...
    def type(self) -> type[P2HelpdeskTicketUpdatedV1]: ...
    def do(self, data: P2HelpdeskTicketUpdatedV1) -> None: ...

class P2HelpdeskTicketMessageCreatedV1Processor(IEventProcessor[P2HelpdeskTicketMessageCreatedV1]):
    f: Incomplete
    def __init__(self, f: Callable[[P2HelpdeskTicketMessageCreatedV1], None]) -> None: ...
    def type(self) -> type[P2HelpdeskTicketMessageCreatedV1]: ...
    def do(self, data: P2HelpdeskTicketMessageCreatedV1) -> None: ...
