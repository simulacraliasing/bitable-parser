from .doc_bullet import DocBullet as DocBullet
from .doc_code import DocCode as DocCode
from .doc_container import DocContainer as DocContainer
from .doc_divider import DocDivider as DocDivider
from .doc_heading import DocHeading as DocHeading
from .doc_image import DocImage as DocImage
from .doc_link import DocLink as DocLink
from .doc_rodered import DocRodered as DocRodered
from .doc_text import DocText as DocText
from .doc_user import DocUser as DocUser
from lark_oapi.core.construct import init as init

class DocContent:
    id: str | None
    children: list[str] | None
    content_type: int | None
    text: DocText | None
    heading: DocHeading | None
    bullet: DocBullet | None
    ordered: DocRodered | None
    code: DocCode | None
    link: DocLink | None
    image: DocImage | None
    user: DocUser | None
    divider: DocDivider | None
    container: DocContainer | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> DocContentBuilder: ...

class DocContentBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> DocContentBuilder: ...
    def children(self, children: list[str]) -> DocContentBuilder: ...
    def content_type(self, content_type: int) -> DocContentBuilder: ...
    def text(self, text: DocText) -> DocContentBuilder: ...
    def heading(self, heading: DocHeading) -> DocContentBuilder: ...
    def bullet(self, bullet: DocBullet) -> DocContentBuilder: ...
    def ordered(self, ordered: DocRodered) -> DocContentBuilder: ...
    def code(self, code: DocCode) -> DocContentBuilder: ...
    def link(self, link: DocLink) -> DocContentBuilder: ...
    def image(self, image: DocImage) -> DocContentBuilder: ...
    def user(self, user: DocUser) -> DocContentBuilder: ...
    def divider(self, divider: DocDivider) -> DocContentBuilder: ...
    def container(self, container: DocContainer) -> DocContentBuilder: ...
    def build(self) -> DocContent: ...
