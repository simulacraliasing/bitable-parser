from .mail_flow_rule_info import MailFlowRuleInfo as MailFlowRuleInfo
from .mail_log_mail_info import MailLogMailInfo as MailLogMailInfo
from .user_mail_entity import UserMailEntity as UserMailEntity
from lark_oapi.core.construct import init as init

class MailLog:
    timestamp: int | None
    id: str | None
    initiator: UserMailEntity | None
    operator: UserMailEntity | None
    mail_info: MailLogMailInfo | None
    rule_infos: list[MailFlowRuleInfo] | None
    tags: list[str] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> MailLogBuilder: ...

class MailLogBuilder:
    def __init__(self) -> None: ...
    def timestamp(self, timestamp: int) -> MailLogBuilder: ...
    def id(self, id: str) -> MailLogBuilder: ...
    def initiator(self, initiator: UserMailEntity) -> MailLogBuilder: ...
    def operator(self, operator: UserMailEntity) -> MailLogBuilder: ...
    def mail_info(self, mail_info: MailLogMailInfo) -> MailLogBuilder: ...
    def rule_infos(self, rule_infos: list[MailFlowRuleInfo]) -> MailLogBuilder: ...
    def tags(self, tags: list[str]) -> MailLogBuilder: ...
    def build(self) -> MailLog: ...
