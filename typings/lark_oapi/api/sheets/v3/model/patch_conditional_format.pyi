from .conditional_format_range import ConditionalFormatRange as ConditionalFormatRange
from .conditional_format_rule import ConditionalFormatRule as ConditionalFormatRule
from lark_oapi.core.construct import init as init

class PatchConditionalFormat:
    ranges: list[ConditionalFormatRange] | None
    conditional_format_rule: ConditionalFormatRule | None
    index: int | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> PatchConditionalFormatBuilder: ...

class PatchConditionalFormatBuilder:
    def __init__(self) -> None: ...
    def ranges(self, ranges: list[ConditionalFormatRange]) -> PatchConditionalFormatBuilder: ...
    def conditional_format_rule(self, conditional_format_rule: ConditionalFormatRule) -> PatchConditionalFormatBuilder: ...
    def index(self, index: int) -> PatchConditionalFormatBuilder: ...
    def build(self) -> PatchConditionalFormat: ...
