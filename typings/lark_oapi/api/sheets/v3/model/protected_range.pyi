from .protected_columns import ProtectedColumns as ProtectedColumns
from .protected_range_editors import ProtectedRangeEditors as ProtectedRangeEditors
from .protected_rows import ProtectedRows as ProtectedRows
from .protected_sheet import ProtectedSheet as ProtectedSheet
from lark_oapi.core.construct import init as init

class ProtectedRange:
    protected_id: str | None
    description: str | None
    protected_dimension: str | None
    protected_rows: ProtectedRows | None
    protected_columns: ProtectedColumns | None
    protected_sheet: ProtectedSheet | None
    editors: ProtectedRangeEditors | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ProtectedRangeBuilder: ...

class ProtectedRangeBuilder:
    def __init__(self) -> None: ...
    def protected_id(self, protected_id: str) -> ProtectedRangeBuilder: ...
    def description(self, description: str) -> ProtectedRangeBuilder: ...
    def protected_dimension(self, protected_dimension: str) -> ProtectedRangeBuilder: ...
    def protected_rows(self, protected_rows: ProtectedRows) -> ProtectedRangeBuilder: ...
    def protected_columns(self, protected_columns: ProtectedColumns) -> ProtectedRangeBuilder: ...
    def protected_sheet(self, protected_sheet: ProtectedSheet) -> ProtectedRangeBuilder: ...
    def editors(self, editors: ProtectedRangeEditors) -> ProtectedRangeBuilder: ...
    def build(self) -> ProtectedRange: ...
