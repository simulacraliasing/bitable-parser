from .filter_view_condition import FilterViewCondition as FilterViewCondition
from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class UpdateSpreadsheetSheetFilterViewConditionRequest(BaseRequest):
    spreadsheet_token: str | None
    sheet_id: str | None
    filter_view_id: str | None
    condition_id: str | None
    request_body: FilterViewCondition | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> UpdateSpreadsheetSheetFilterViewConditionRequestBuilder: ...

class UpdateSpreadsheetSheetFilterViewConditionRequestBuilder:
    def __init__(self) -> None: ...
    def spreadsheet_token(self, spreadsheet_token: str) -> UpdateSpreadsheetSheetFilterViewConditionRequestBuilder: ...
    def sheet_id(self, sheet_id: str) -> UpdateSpreadsheetSheetFilterViewConditionRequestBuilder: ...
    def filter_view_id(self, filter_view_id: str) -> UpdateSpreadsheetSheetFilterViewConditionRequestBuilder: ...
    def condition_id(self, condition_id: str) -> UpdateSpreadsheetSheetFilterViewConditionRequestBuilder: ...
    def request_body(self, request_body: FilterViewCondition) -> UpdateSpreadsheetSheetFilterViewConditionRequestBuilder: ...
    def build(self) -> UpdateSpreadsheetSheetFilterViewConditionRequest: ...
