from ..model.create_spreadsheet_sheet_filter_request import CreateSpreadsheetSheetFilterRequest as CreateSpreadsheetSheetFilterRequest
from ..model.create_spreadsheet_sheet_filter_response import CreateSpreadsheetSheetFilterResponse as CreateSpreadsheetSheetFilterResponse
from ..model.delete_spreadsheet_sheet_filter_request import DeleteSpreadsheetSheetFilterRequest as DeleteSpreadsheetSheetFilterRequest
from ..model.delete_spreadsheet_sheet_filter_response import DeleteSpreadsheetSheetFilterResponse as DeleteSpreadsheetSheetFilterResponse
from ..model.get_spreadsheet_sheet_filter_request import GetSpreadsheetSheetFilterRequest as GetSpreadsheetSheetFilterRequest
from ..model.get_spreadsheet_sheet_filter_response import GetSpreadsheetSheetFilterResponse as GetSpreadsheetSheetFilterResponse
from ..model.update_spreadsheet_sheet_filter_request import UpdateSpreadsheetSheetFilterRequest as UpdateSpreadsheetSheetFilterRequest
from ..model.update_spreadsheet_sheet_filter_response import UpdateSpreadsheetSheetFilterResponse as UpdateSpreadsheetSheetFilterResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class SpreadsheetSheetFilter:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateSpreadsheetSheetFilterRequest, option: RequestOption | None = None) -> CreateSpreadsheetSheetFilterResponse: ...
    async def acreate(self, request: CreateSpreadsheetSheetFilterRequest, option: RequestOption | None = None) -> CreateSpreadsheetSheetFilterResponse: ...
    def delete(self, request: DeleteSpreadsheetSheetFilterRequest, option: RequestOption | None = None) -> DeleteSpreadsheetSheetFilterResponse: ...
    async def adelete(self, request: DeleteSpreadsheetSheetFilterRequest, option: RequestOption | None = None) -> DeleteSpreadsheetSheetFilterResponse: ...
    def get(self, request: GetSpreadsheetSheetFilterRequest, option: RequestOption | None = None) -> GetSpreadsheetSheetFilterResponse: ...
    async def aget(self, request: GetSpreadsheetSheetFilterRequest, option: RequestOption | None = None) -> GetSpreadsheetSheetFilterResponse: ...
    def update(self, request: UpdateSpreadsheetSheetFilterRequest, option: RequestOption | None = None) -> UpdateSpreadsheetSheetFilterResponse: ...
    async def aupdate(self, request: UpdateSpreadsheetSheetFilterRequest, option: RequestOption | None = None) -> UpdateSpreadsheetSheetFilterResponse: ...
