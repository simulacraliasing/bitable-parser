from lark_oapi.core.construct import init as init

class CallbackAction:
    value: dict[str, str] | None
    tag: str | None
    option: str | None
    options: list[str] | None
    timezone: str | None
    input_value: str | None
    form_value: dict[str, str] | None
    name: str | None
    checked: bool | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> CallbackActionBuilder: ...

class CallbackActionBuilder:
    def __init__(self) -> None: ...
    def value(self, value: dict[str, str]) -> CallbackActionBuilder: ...
    def tag(self, tag: str) -> CallbackActionBuilder: ...
    def option(self, option: str) -> CallbackActionBuilder: ...
    def options(self, options: list[str]) -> CallbackActionBuilder: ...
    def timezone(self, timezone: str) -> CallbackActionBuilder: ...
    def input_value(self, input_value: str) -> CallbackActionBuilder: ...
    def form_value(self, form_value: dict[str, str]) -> CallbackActionBuilder: ...
    def name(self, name: str) -> CallbackActionBuilder: ...
    def checked(self, checked: bool) -> CallbackActionBuilder: ...
    def build(self) -> CallbackAction: ...
