from ..model.approve_task_request import ApproveTaskRequest as ApproveTaskRequest
from ..model.approve_task_response import ApproveTaskResponse as ApproveTaskResponse
from ..model.query_task_request import QueryTaskRequest as QueryTaskRequest
from ..model.query_task_response import QueryTaskResponse as QueryTaskResponse
from ..model.reject_task_request import RejectTaskRequest as RejectTaskRequest
from ..model.reject_task_response import RejectTaskResponse as RejectTaskResponse
from ..model.resubmit_task_request import ResubmitTaskRequest as ResubmitTaskRequest
from ..model.resubmit_task_response import ResubmitTaskResponse as ResubmitTaskResponse
from ..model.search_task_request import SearchTaskRequest as SearchTaskRequest
from ..model.search_task_response import SearchTaskResponse as SearchTaskResponse
from ..model.transfer_task_request import TransferTaskRequest as TransferTaskRequest
from ..model.transfer_task_response import TransferTaskResponse as TransferTaskResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Task:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def approve(self, request: ApproveTaskRequest, option: RequestOption | None = None) -> ApproveTaskResponse: ...
    async def aapprove(self, request: ApproveTaskRequest, option: RequestOption | None = None) -> ApproveTaskResponse: ...
    def query(self, request: QueryTaskRequest, option: RequestOption | None = None) -> QueryTaskResponse: ...
    async def aquery(self, request: QueryTaskRequest, option: RequestOption | None = None) -> QueryTaskResponse: ...
    def reject(self, request: RejectTaskRequest, option: RequestOption | None = None) -> RejectTaskResponse: ...
    async def areject(self, request: RejectTaskRequest, option: RequestOption | None = None) -> RejectTaskResponse: ...
    def resubmit(self, request: ResubmitTaskRequest, option: RequestOption | None = None) -> ResubmitTaskResponse: ...
    async def aresubmit(self, request: ResubmitTaskRequest, option: RequestOption | None = None) -> ResubmitTaskResponse: ...
    def search(self, request: SearchTaskRequest, option: RequestOption | None = None) -> SearchTaskResponse: ...
    async def asearch(self, request: SearchTaskRequest, option: RequestOption | None = None) -> SearchTaskResponse: ...
    def transfer(self, request: TransferTaskRequest, option: RequestOption | None = None) -> TransferTaskResponse: ...
    async def atransfer(self, request: TransferTaskRequest, option: RequestOption | None = None) -> TransferTaskResponse: ...
