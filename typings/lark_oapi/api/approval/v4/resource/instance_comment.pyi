from ..model.create_instance_comment_request import CreateInstanceCommentRequest as CreateInstanceCommentRequest
from ..model.create_instance_comment_response import CreateInstanceCommentResponse as CreateInstanceCommentResponse
from ..model.delete_instance_comment_request import DeleteInstanceCommentRequest as DeleteInstanceCommentRequest
from ..model.delete_instance_comment_response import DeleteInstanceCommentResponse as DeleteInstanceCommentResponse
from ..model.list_instance_comment_request import ListInstanceCommentRequest as ListInstanceCommentRequest
from ..model.list_instance_comment_response import ListInstanceCommentResponse as ListInstanceCommentResponse
from ..model.remove_instance_comment_request import RemoveInstanceCommentRequest as RemoveInstanceCommentRequest
from ..model.remove_instance_comment_response import RemoveInstanceCommentResponse as RemoveInstanceCommentResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class InstanceComment:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateInstanceCommentRequest, option: RequestOption | None = None) -> CreateInstanceCommentResponse: ...
    async def acreate(self, request: CreateInstanceCommentRequest, option: RequestOption | None = None) -> CreateInstanceCommentResponse: ...
    def delete(self, request: DeleteInstanceCommentRequest, option: RequestOption | None = None) -> DeleteInstanceCommentResponse: ...
    async def adelete(self, request: DeleteInstanceCommentRequest, option: RequestOption | None = None) -> DeleteInstanceCommentResponse: ...
    def list(self, request: ListInstanceCommentRequest, option: RequestOption | None = None) -> ListInstanceCommentResponse: ...
    async def alist(self, request: ListInstanceCommentRequest, option: RequestOption | None = None) -> ListInstanceCommentResponse: ...
    def remove(self, request: RemoveInstanceCommentRequest, option: RequestOption | None = None) -> RemoveInstanceCommentResponse: ...
    async def aremove(self, request: RemoveInstanceCommentRequest, option: RequestOption | None = None) -> RemoveInstanceCommentResponse: ...
