from ..model.create_approval_request import CreateApprovalRequest as CreateApprovalRequest
from ..model.create_approval_response import CreateApprovalResponse as CreateApprovalResponse
from ..model.get_approval_request import GetApprovalRequest as GetApprovalRequest
from ..model.get_approval_response import GetApprovalResponse as GetApprovalResponse
from ..model.subscribe_approval_request import SubscribeApprovalRequest as SubscribeApprovalRequest
from ..model.subscribe_approval_response import SubscribeApprovalResponse as SubscribeApprovalResponse
from ..model.unsubscribe_approval_request import UnsubscribeApprovalRequest as UnsubscribeApprovalRequest
from ..model.unsubscribe_approval_response import UnsubscribeApprovalResponse as UnsubscribeApprovalResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Approval:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateApprovalRequest, option: RequestOption | None = None) -> CreateApprovalResponse: ...
    async def acreate(self, request: CreateApprovalRequest, option: RequestOption | None = None) -> CreateApprovalResponse: ...
    def get(self, request: GetApprovalRequest, option: RequestOption | None = None) -> GetApprovalResponse: ...
    async def aget(self, request: GetApprovalRequest, option: RequestOption | None = None) -> GetApprovalResponse: ...
    def subscribe(self, request: SubscribeApprovalRequest, option: RequestOption | None = None) -> SubscribeApprovalResponse: ...
    async def asubscribe(self, request: SubscribeApprovalRequest, option: RequestOption | None = None) -> SubscribeApprovalResponse: ...
    def unsubscribe(self, request: UnsubscribeApprovalRequest, option: RequestOption | None = None) -> UnsubscribeApprovalResponse: ...
    async def aunsubscribe(self, request: UnsubscribeApprovalRequest, option: RequestOption | None = None) -> UnsubscribeApprovalResponse: ...
