from .approval_approver_ccer import ApprovalApproverCcer as ApprovalApproverCcer
from .approver_range import ApproverRange as ApproverRange
from .field_group import FieldGroup as FieldGroup
from lark_oapi.core.construct import init as init

class ApprovalNode:
    id: str | None
    name: str | None
    node_type: str | None
    approver: list[ApprovalApproverCcer] | None
    ccer: list[ApprovalApproverCcer] | None
    privilege_field: FieldGroup | None
    approver_chosen_multi: bool | None
    approver_chosen_range: list[ApproverRange] | None
    starter_assignee: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ApprovalNodeBuilder: ...

class ApprovalNodeBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> ApprovalNodeBuilder: ...
    def name(self, name: str) -> ApprovalNodeBuilder: ...
    def node_type(self, node_type: str) -> ApprovalNodeBuilder: ...
    def approver(self, approver: list[ApprovalApproverCcer]) -> ApprovalNodeBuilder: ...
    def ccer(self, ccer: list[ApprovalApproverCcer]) -> ApprovalNodeBuilder: ...
    def privilege_field(self, privilege_field: FieldGroup) -> ApprovalNodeBuilder: ...
    def approver_chosen_multi(self, approver_chosen_multi: bool) -> ApprovalNodeBuilder: ...
    def approver_chosen_range(self, approver_chosen_range: list[ApproverRange]) -> ApprovalNodeBuilder: ...
    def starter_assignee(self, starter_assignee: str) -> ApprovalNodeBuilder: ...
    def build(self) -> ApprovalNode: ...
