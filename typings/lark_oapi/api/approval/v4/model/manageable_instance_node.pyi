from lark_oapi.core.construct import init as init

class ManageableInstanceNode:
    code: str | None
    start_user_id: str | None
    current_user_ids: list[str] | None
    department_id: str | None
    node_name: str | None
    form: str | None
    version: str | None
    start_time: int | None
    end_time: int | None
    status: str | None
    serial_id: str | None
    status_display: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ManageableInstanceNodeBuilder: ...

class ManageableInstanceNodeBuilder:
    def __init__(self) -> None: ...
    def code(self, code: str) -> ManageableInstanceNodeBuilder: ...
    def start_user_id(self, start_user_id: str) -> ManageableInstanceNodeBuilder: ...
    def current_user_ids(self, current_user_ids: list[str]) -> ManageableInstanceNodeBuilder: ...
    def department_id(self, department_id: str) -> ManageableInstanceNodeBuilder: ...
    def node_name(self, node_name: str) -> ManageableInstanceNodeBuilder: ...
    def form(self, form: str) -> ManageableInstanceNodeBuilder: ...
    def version(self, version: str) -> ManageableInstanceNodeBuilder: ...
    def start_time(self, start_time: int) -> ManageableInstanceNodeBuilder: ...
    def end_time(self, end_time: int) -> ManageableInstanceNodeBuilder: ...
    def status(self, status: str) -> ManageableInstanceNodeBuilder: ...
    def serial_id(self, serial_id: str) -> ManageableInstanceNodeBuilder: ...
    def status_display(self, status_display: str) -> ManageableInstanceNodeBuilder: ...
    def build(self) -> ManageableInstanceNode: ...
