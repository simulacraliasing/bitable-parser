from .instance_search_approval import InstanceSearchApproval as InstanceSearchApproval
from .instance_search_group import InstanceSearchGroup as InstanceSearchGroup
from .instance_search_node import InstanceSearchNode as InstanceSearchNode
from .task_search_node import TaskSearchNode as TaskSearchNode
from lark_oapi.core.construct import init as init

class TaskSearchItem:
    approval: InstanceSearchApproval | None
    group: InstanceSearchGroup | None
    instance: InstanceSearchNode | None
    task: TaskSearchNode | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> TaskSearchItemBuilder: ...

class TaskSearchItemBuilder:
    def __init__(self) -> None: ...
    def approval(self, approval: InstanceSearchApproval) -> TaskSearchItemBuilder: ...
    def group(self, group: InstanceSearchGroup) -> TaskSearchItemBuilder: ...
    def instance(self, instance: InstanceSearchNode) -> TaskSearchItemBuilder: ...
    def task(self, task: TaskSearchNode) -> TaskSearchItemBuilder: ...
    def build(self) -> TaskSearchItem: ...
