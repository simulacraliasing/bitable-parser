from .enum import Enum as Enum
from .i18n_string import I18nString as I18nString
from .language import Language as Language
from .time_zone import TimeZone as TimeZone
from lark_oapi.core.construct import init as init

class CountryRegion:
    id: str | None
    update_by: str | None
    create_by: str | None
    update_time: str | None
    create_time: str | None
    alpha_3_code: str | None
    alpha_2_code: str | None
    numeric_code: str | None
    name: I18nString | None
    local_script: str | None
    western_script: str | None
    mdm_code: str | None
    full_name: I18nString | None
    global_code: str | None
    time_zone: list[str] | None
    overseas: str | None
    level: str | None
    remark: str | None
    update_reason: str | None
    status: str | None
    continents: Enum | None
    md_local_script: Language | None
    md_western_script: Language | None
    md_time_zone: list[TimeZone] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> CountryRegionBuilder: ...

class CountryRegionBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> CountryRegionBuilder: ...
    def update_by(self, update_by: str) -> CountryRegionBuilder: ...
    def create_by(self, create_by: str) -> CountryRegionBuilder: ...
    def update_time(self, update_time: str) -> CountryRegionBuilder: ...
    def create_time(self, create_time: str) -> CountryRegionBuilder: ...
    def alpha_3_code(self, alpha_3_code: str) -> CountryRegionBuilder: ...
    def alpha_2_code(self, alpha_2_code: str) -> CountryRegionBuilder: ...
    def numeric_code(self, numeric_code: str) -> CountryRegionBuilder: ...
    def name(self, name: I18nString) -> CountryRegionBuilder: ...
    def local_script(self, local_script: str) -> CountryRegionBuilder: ...
    def western_script(self, western_script: str) -> CountryRegionBuilder: ...
    def mdm_code(self, mdm_code: str) -> CountryRegionBuilder: ...
    def full_name(self, full_name: I18nString) -> CountryRegionBuilder: ...
    def global_code(self, global_code: str) -> CountryRegionBuilder: ...
    def time_zone(self, time_zone: list[str]) -> CountryRegionBuilder: ...
    def overseas(self, overseas: str) -> CountryRegionBuilder: ...
    def level(self, level: str) -> CountryRegionBuilder: ...
    def remark(self, remark: str) -> CountryRegionBuilder: ...
    def update_reason(self, update_reason: str) -> CountryRegionBuilder: ...
    def status(self, status: str) -> CountryRegionBuilder: ...
    def continents(self, continents: Enum) -> CountryRegionBuilder: ...
    def md_local_script(self, md_local_script: Language) -> CountryRegionBuilder: ...
    def md_western_script(self, md_western_script: Language) -> CountryRegionBuilder: ...
    def md_time_zone(self, md_time_zone: list[TimeZone]) -> CountryRegionBuilder: ...
    def build(self) -> CountryRegion: ...
