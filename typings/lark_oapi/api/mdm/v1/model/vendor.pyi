from .appendix import Appendix as Appendix
from .extend_field import ExtendField as ExtendField
from .vendor_account import VendorAccount as VendorAccount
from .vendor_address import VendorAddress as VendorAddress
from .vendor_company_view import VendorCompanyView as VendorCompanyView
from .vendor_contact import VendorContact as VendorContact
from lark_oapi.core.construct import init as init

class Vendor:
    id: int | None
    ad_country: str | None
    ad_province: str | None
    ad_city: str | None
    address: str | None
    ad_postcode: str | None
    legal_person: str | None
    certification_type: str | None
    certification_id: str | None
    contact_person: str | None
    contact_telephone: str | None
    contact_mobile_phone: str | None
    fax: str | None
    e_mail: str | None
    status: int | None
    vendor: str | None
    vendor_text: str | None
    short_text: str | None
    vendor_type: str | None
    vendor_category: str | None
    vendor_nature: str | None
    linked_employee: str | None
    linked_customer: str | None
    associated_with_legal_entity: bool | None
    extend_info: list[ExtendField] | None
    vendor_accounts: list[VendorAccount] | None
    vendor_addresses: list[VendorAddress] | None
    vendor_company_views: list[VendorCompanyView] | None
    vendor_contacts: list[VendorContact] | None
    gl_account: str | None
    down_payment_term: str | None
    payment_term: str | None
    vendor_site_code: str | None
    appendix: list[Appendix] | None
    is_risked: bool | None
    owner_depts: list[str] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> VendorBuilder: ...

class VendorBuilder:
    def __init__(self) -> None: ...
    def id(self, id: int) -> VendorBuilder: ...
    def ad_country(self, ad_country: str) -> VendorBuilder: ...
    def ad_province(self, ad_province: str) -> VendorBuilder: ...
    def ad_city(self, ad_city: str) -> VendorBuilder: ...
    def address(self, address: str) -> VendorBuilder: ...
    def ad_postcode(self, ad_postcode: str) -> VendorBuilder: ...
    def legal_person(self, legal_person: str) -> VendorBuilder: ...
    def certification_type(self, certification_type: str) -> VendorBuilder: ...
    def certification_id(self, certification_id: str) -> VendorBuilder: ...
    def contact_person(self, contact_person: str) -> VendorBuilder: ...
    def contact_telephone(self, contact_telephone: str) -> VendorBuilder: ...
    def contact_mobile_phone(self, contact_mobile_phone: str) -> VendorBuilder: ...
    def fax(self, fax: str) -> VendorBuilder: ...
    def e_mail(self, e_mail: str) -> VendorBuilder: ...
    def status(self, status: int) -> VendorBuilder: ...
    def vendor(self, vendor: str) -> VendorBuilder: ...
    def vendor_text(self, vendor_text: str) -> VendorBuilder: ...
    def short_text(self, short_text: str) -> VendorBuilder: ...
    def vendor_type(self, vendor_type: str) -> VendorBuilder: ...
    def vendor_category(self, vendor_category: str) -> VendorBuilder: ...
    def vendor_nature(self, vendor_nature: str) -> VendorBuilder: ...
    def linked_employee(self, linked_employee: str) -> VendorBuilder: ...
    def linked_customer(self, linked_customer: str) -> VendorBuilder: ...
    def associated_with_legal_entity(self, associated_with_legal_entity: bool) -> VendorBuilder: ...
    def extend_info(self, extend_info: list[ExtendField]) -> VendorBuilder: ...
    def vendor_accounts(self, vendor_accounts: list[VendorAccount]) -> VendorBuilder: ...
    def vendor_addresses(self, vendor_addresses: list[VendorAddress]) -> VendorBuilder: ...
    def vendor_company_views(self, vendor_company_views: list[VendorCompanyView]) -> VendorBuilder: ...
    def vendor_contacts(self, vendor_contacts: list[VendorContact]) -> VendorBuilder: ...
    def gl_account(self, gl_account: str) -> VendorBuilder: ...
    def down_payment_term(self, down_payment_term: str) -> VendorBuilder: ...
    def payment_term(self, payment_term: str) -> VendorBuilder: ...
    def vendor_site_code(self, vendor_site_code: str) -> VendorBuilder: ...
    def appendix(self, appendix: list[Appendix]) -> VendorBuilder: ...
    def is_risked(self, is_risked: bool) -> VendorBuilder: ...
    def owner_depts(self, owner_depts: list[str]) -> VendorBuilder: ...
    def build(self) -> Vendor: ...
