from lark_oapi.core.construct import init as init

class FixedExchangeRate:
    source_currency: str | None
    target_currency: str | None
    effective_date: str | None
    exchange_rate: str | None
    status: int | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> FixedExchangeRateBuilder: ...

class FixedExchangeRateBuilder:
    def __init__(self) -> None: ...
    def source_currency(self, source_currency: str) -> FixedExchangeRateBuilder: ...
    def target_currency(self, target_currency: str) -> FixedExchangeRateBuilder: ...
    def effective_date(self, effective_date: str) -> FixedExchangeRateBuilder: ...
    def exchange_rate(self, exchange_rate: str) -> FixedExchangeRateBuilder: ...
    def status(self, status: int) -> FixedExchangeRateBuilder: ...
    def build(self) -> FixedExchangeRate: ...
