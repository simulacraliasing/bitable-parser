from lark_oapi.core.construct import init as init

class Config:
    field_code: str | None
    field_name: str | None
    module: int | None
    field_describe: str | None
    sys: int | None
    field_type: int | None
    required: int | None
    status: int | None
    field_version: int | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ConfigBuilder: ...

class ConfigBuilder:
    def __init__(self) -> None: ...
    def field_code(self, field_code: str) -> ConfigBuilder: ...
    def field_name(self, field_name: str) -> ConfigBuilder: ...
    def module(self, module: int) -> ConfigBuilder: ...
    def field_describe(self, field_describe: str) -> ConfigBuilder: ...
    def sys(self, sys: int) -> ConfigBuilder: ...
    def field_type(self, field_type: int) -> ConfigBuilder: ...
    def required(self, required: int) -> ConfigBuilder: ...
    def status(self, status: int) -> ConfigBuilder: ...
    def field_version(self, field_version: int) -> ConfigBuilder: ...
    def build(self) -> Config: ...
