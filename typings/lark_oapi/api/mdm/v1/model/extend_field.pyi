from .appendix import Appendix as Appendix
from lark_oapi.core.construct import init as init

class ExtendField:
    field_type: int | None
    field_value: str | None
    options: list[str] | None
    num: float | None
    date: str | None
    range_date: list[str] | None
    field_code: str | None
    appendix: list[Appendix] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ExtendFieldBuilder: ...

class ExtendFieldBuilder:
    def __init__(self) -> None: ...
    def field_type(self, field_type: int) -> ExtendFieldBuilder: ...
    def field_value(self, field_value: str) -> ExtendFieldBuilder: ...
    def options(self, options: list[str]) -> ExtendFieldBuilder: ...
    def num(self, num: float) -> ExtendFieldBuilder: ...
    def date(self, date: str) -> ExtendFieldBuilder: ...
    def range_date(self, range_date: list[str]) -> ExtendFieldBuilder: ...
    def field_code(self, field_code: str) -> ExtendFieldBuilder: ...
    def appendix(self, appendix: list[Appendix]) -> ExtendFieldBuilder: ...
    def build(self) -> ExtendField: ...
