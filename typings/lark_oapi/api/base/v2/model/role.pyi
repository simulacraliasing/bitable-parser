from .block_role import BlockRole as BlockRole
from .table_role import TableRole as TableRole
from lark_oapi.core.construct import init as init

class Role:
    role_name: str | None
    table_roles: list[TableRole] | None
    role_id: str | None
    block_roles: list[BlockRole] | None
    base_rule: dict[str, int] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> RoleBuilder: ...

class RoleBuilder:
    def __init__(self) -> None: ...
    def role_name(self, role_name: str) -> RoleBuilder: ...
    def table_roles(self, table_roles: list[TableRole]) -> RoleBuilder: ...
    def role_id(self, role_id: str) -> RoleBuilder: ...
    def block_roles(self, block_roles: list[BlockRole]) -> RoleBuilder: ...
    def base_rule(self, base_rule: dict[str, int]) -> RoleBuilder: ...
    def build(self) -> Role: ...
