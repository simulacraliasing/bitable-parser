from .other_rec_rule import OtherRecRule as OtherRecRule
from .rec_rule import RecRule as RecRule
from lark_oapi.core.construct import init as init

class TableRole:
    table_perm: int | None
    table_name: str | None
    table_id: str | None
    rec_rule: RecRule | None
    other_rec_rule: OtherRecRule | None
    field_perm: dict[str, int] | None
    allow_add_record: bool | None
    allow_delete_record: bool | None
    view_perm: int | None
    view_rules: dict[str, int] | None
    field_action_rules: dict[str, dict[str, int]] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> TableRoleBuilder: ...

class TableRoleBuilder:
    def __init__(self) -> None: ...
    def table_perm(self, table_perm: int) -> TableRoleBuilder: ...
    def table_name(self, table_name: str) -> TableRoleBuilder: ...
    def table_id(self, table_id: str) -> TableRoleBuilder: ...
    def rec_rule(self, rec_rule: RecRule) -> TableRoleBuilder: ...
    def other_rec_rule(self, other_rec_rule: OtherRecRule) -> TableRoleBuilder: ...
    def field_perm(self, field_perm: dict[str, int]) -> TableRoleBuilder: ...
    def allow_add_record(self, allow_add_record: bool) -> TableRoleBuilder: ...
    def allow_delete_record(self, allow_delete_record: bool) -> TableRoleBuilder: ...
    def view_perm(self, view_perm: int) -> TableRoleBuilder: ...
    def view_rules(self, view_rules: dict[str, int]) -> TableRoleBuilder: ...
    def field_action_rules(self, field_action_rules: dict[str, dict[str, int]]) -> TableRoleBuilder: ...
    def build(self) -> TableRole: ...
