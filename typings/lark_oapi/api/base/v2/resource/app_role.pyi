from ..model.create_app_role_request import CreateAppRoleRequest as CreateAppRoleRequest
from ..model.create_app_role_response import CreateAppRoleResponse as CreateAppRoleResponse
from ..model.list_app_role_request import ListAppRoleRequest as ListAppRoleRequest
from ..model.list_app_role_response import ListAppRoleResponse as ListAppRoleResponse
from ..model.update_app_role_request import UpdateAppRoleRequest as UpdateAppRoleRequest
from ..model.update_app_role_response import UpdateAppRoleResponse as UpdateAppRoleResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class AppRole:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateAppRoleRequest, option: RequestOption | None = None) -> CreateAppRoleResponse: ...
    async def acreate(self, request: CreateAppRoleRequest, option: RequestOption | None = None) -> CreateAppRoleResponse: ...
    def list(self, request: ListAppRoleRequest, option: RequestOption | None = None) -> ListAppRoleResponse: ...
    async def alist(self, request: ListAppRoleRequest, option: RequestOption | None = None) -> ListAppRoleResponse: ...
    def update(self, request: UpdateAppRoleRequest, option: RequestOption | None = None) -> UpdateAppRoleResponse: ...
    async def aupdate(self, request: UpdateAppRoleRequest, option: RequestOption | None = None) -> UpdateAppRoleResponse: ...
