from .i18n import I18n as I18n
from .metric_dimension import MetricDimension as MetricDimension
from .metric_group import MetricGroup as MetricGroup
from .metric_in_template import MetricInTemplate as MetricInTemplate
from lark_oapi.core.construct import init as init

class MetricTemplate:
    id: int | None
    name: I18n | None
    description: I18n | None
    status: str | None
    is_set_by_group: bool | None
    total_metric_score_method: str | None
    metric_weight_method: str | None
    metric_dimensions: list[MetricDimension] | None
    metrics: list[MetricInTemplate] | None
    groups: list[MetricGroup] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> MetricTemplateBuilder: ...

class MetricTemplateBuilder:
    def __init__(self) -> None: ...
    def id(self, id: int) -> MetricTemplateBuilder: ...
    def name(self, name: I18n) -> MetricTemplateBuilder: ...
    def description(self, description: I18n) -> MetricTemplateBuilder: ...
    def status(self, status: str) -> MetricTemplateBuilder: ...
    def is_set_by_group(self, is_set_by_group: bool) -> MetricTemplateBuilder: ...
    def total_metric_score_method(self, total_metric_score_method: str) -> MetricTemplateBuilder: ...
    def metric_weight_method(self, metric_weight_method: str) -> MetricTemplateBuilder: ...
    def metric_dimensions(self, metric_dimensions: list[MetricDimension]) -> MetricTemplateBuilder: ...
    def metrics(self, metrics: list[MetricInTemplate]) -> MetricTemplateBuilder: ...
    def groups(self, groups: list[MetricGroup]) -> MetricTemplateBuilder: ...
    def build(self) -> MetricTemplate: ...
