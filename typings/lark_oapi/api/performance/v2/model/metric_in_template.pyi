from .metric_field_in_template import MetricFieldInTemplate as MetricFieldInTemplate
from .metric_review_rule_config import MetricReviewRuleConfig as MetricReviewRuleConfig
from .user import User as User
from lark_oapi.core.construct import init as init

class MetricInTemplate:
    group_id: int | None
    metric_id: int | None
    name: str | None
    type_id: str | None
    fields: list[MetricFieldInTemplate] | None
    is_from_library: bool | None
    scoring_setting_type: str | None
    data_source_inputters: list[User] | None
    metric_dimension_id: int | None
    review_rule_config: MetricReviewRuleConfig | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> MetricInTemplateBuilder: ...

class MetricInTemplateBuilder:
    def __init__(self) -> None: ...
    def group_id(self, group_id: int) -> MetricInTemplateBuilder: ...
    def metric_id(self, metric_id: int) -> MetricInTemplateBuilder: ...
    def name(self, name: str) -> MetricInTemplateBuilder: ...
    def type_id(self, type_id: str) -> MetricInTemplateBuilder: ...
    def fields(self, fields: list[MetricFieldInTemplate]) -> MetricInTemplateBuilder: ...
    def is_from_library(self, is_from_library: bool) -> MetricInTemplateBuilder: ...
    def scoring_setting_type(self, scoring_setting_type: str) -> MetricInTemplateBuilder: ...
    def data_source_inputters(self, data_source_inputters: list[User]) -> MetricInTemplateBuilder: ...
    def metric_dimension_id(self, metric_dimension_id: int) -> MetricInTemplateBuilder: ...
    def review_rule_config(self, review_rule_config: MetricReviewRuleConfig) -> MetricInTemplateBuilder: ...
    def build(self) -> MetricInTemplate: ...
