from lark_oapi.core.construct import init as init

class UserReport2022:
    user_id: str | None
    user_register_date: str | None
    active_day_count: int | None
    msg_busy_date: str | None
    msg_busy_date_send_msg_count: str | None
    p2p_chat_count: str | None
    talked_chat_count: str | None
    positive_reaction_count: str | None
    first_positive_reaction: str | None
    second_positive_reaction: str | None
    third_positive_reaction: str | None
    fourth_positive_reaction: str | None
    fifth_positive_reaction: str | None
    create_file_count: str | None
    created_file_view_count: str | None
    comment_file_count: str | None
    attend_event_count: str | None
    event_busy_date: str | None
    event_busy_date_event_count: str | None
    event_start_time_range1: str | None
    conference_create_count: str | None
    total_parti_count: str | None
    okr_cum_o_count: str | None
    okr_cum_kr_count: str | None
    okr_aligned_user_count: str | None
    people_interview_num: str | None
    send_email_count: str | None
    receive_email_count: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> UserReport2022Builder: ...

class UserReport2022Builder:
    def __init__(self) -> None: ...
    def user_id(self, user_id: str) -> UserReport2022Builder: ...
    def user_register_date(self, user_register_date: str) -> UserReport2022Builder: ...
    def active_day_count(self, active_day_count: int) -> UserReport2022Builder: ...
    def msg_busy_date(self, msg_busy_date: str) -> UserReport2022Builder: ...
    def msg_busy_date_send_msg_count(self, msg_busy_date_send_msg_count: str) -> UserReport2022Builder: ...
    def p2p_chat_count(self, p2p_chat_count: str) -> UserReport2022Builder: ...
    def talked_chat_count(self, talked_chat_count: str) -> UserReport2022Builder: ...
    def positive_reaction_count(self, positive_reaction_count: str) -> UserReport2022Builder: ...
    def first_positive_reaction(self, first_positive_reaction: str) -> UserReport2022Builder: ...
    def second_positive_reaction(self, second_positive_reaction: str) -> UserReport2022Builder: ...
    def third_positive_reaction(self, third_positive_reaction: str) -> UserReport2022Builder: ...
    def fourth_positive_reaction(self, fourth_positive_reaction: str) -> UserReport2022Builder: ...
    def fifth_positive_reaction(self, fifth_positive_reaction: str) -> UserReport2022Builder: ...
    def create_file_count(self, create_file_count: str) -> UserReport2022Builder: ...
    def created_file_view_count(self, created_file_view_count: str) -> UserReport2022Builder: ...
    def comment_file_count(self, comment_file_count: str) -> UserReport2022Builder: ...
    def attend_event_count(self, attend_event_count: str) -> UserReport2022Builder: ...
    def event_busy_date(self, event_busy_date: str) -> UserReport2022Builder: ...
    def event_busy_date_event_count(self, event_busy_date_event_count: str) -> UserReport2022Builder: ...
    def event_start_time_range1(self, event_start_time_range1: str) -> UserReport2022Builder: ...
    def conference_create_count(self, conference_create_count: str) -> UserReport2022Builder: ...
    def total_parti_count(self, total_parti_count: str) -> UserReport2022Builder: ...
    def okr_cum_o_count(self, okr_cum_o_count: str) -> UserReport2022Builder: ...
    def okr_cum_kr_count(self, okr_cum_kr_count: str) -> UserReport2022Builder: ...
    def okr_aligned_user_count(self, okr_aligned_user_count: str) -> UserReport2022Builder: ...
    def people_interview_num(self, people_interview_num: str) -> UserReport2022Builder: ...
    def send_email_count(self, send_email_count: str) -> UserReport2022Builder: ...
    def receive_email_count(self, receive_email_count: str) -> UserReport2022Builder: ...
    def build(self) -> UserReport2022: ...
