from ..model.create_department_request import CreateDepartmentRequest as CreateDepartmentRequest
from ..model.create_department_response import CreateDepartmentResponse as CreateDepartmentResponse
from ..model.delete_department_request import DeleteDepartmentRequest as DeleteDepartmentRequest
from ..model.delete_department_response import DeleteDepartmentResponse as DeleteDepartmentResponse
from ..model.get_department_request import GetDepartmentRequest as GetDepartmentRequest
from ..model.get_department_response import GetDepartmentResponse as GetDepartmentResponse
from ..model.list_department_request import ListDepartmentRequest as ListDepartmentRequest
from ..model.list_department_response import ListDepartmentResponse as ListDepartmentResponse
from ..model.patch_department_request import PatchDepartmentRequest as PatchDepartmentRequest
from ..model.patch_department_response import PatchDepartmentResponse as PatchDepartmentResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Department:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateDepartmentRequest, option: RequestOption | None = None) -> CreateDepartmentResponse: ...
    async def acreate(self, request: CreateDepartmentRequest, option: RequestOption | None = None) -> CreateDepartmentResponse: ...
    def delete(self, request: DeleteDepartmentRequest, option: RequestOption | None = None) -> DeleteDepartmentResponse: ...
    async def adelete(self, request: DeleteDepartmentRequest, option: RequestOption | None = None) -> DeleteDepartmentResponse: ...
    def get(self, request: GetDepartmentRequest, option: RequestOption | None = None) -> GetDepartmentResponse: ...
    async def aget(self, request: GetDepartmentRequest, option: RequestOption | None = None) -> GetDepartmentResponse: ...
    def list(self, request: ListDepartmentRequest, option: RequestOption | None = None) -> ListDepartmentResponse: ...
    async def alist(self, request: ListDepartmentRequest, option: RequestOption | None = None) -> ListDepartmentResponse: ...
    def patch(self, request: PatchDepartmentRequest, option: RequestOption | None = None) -> PatchDepartmentResponse: ...
    async def apatch(self, request: PatchDepartmentRequest, option: RequestOption | None = None) -> PatchDepartmentResponse: ...
