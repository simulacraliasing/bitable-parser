from ..model.calendar_by_scope_leave_request import CalendarByScopeLeaveRequest as CalendarByScopeLeaveRequest
from ..model.calendar_by_scope_leave_response import CalendarByScopeLeaveResponse as CalendarByScopeLeaveResponse
from ..model.leave_balances_leave_request import LeaveBalancesLeaveRequest as LeaveBalancesLeaveRequest
from ..model.leave_balances_leave_response import LeaveBalancesLeaveResponse as LeaveBalancesLeaveResponse
from ..model.leave_request_history_leave_request import LeaveRequestHistoryLeaveRequest as LeaveRequestHistoryLeaveRequest
from ..model.leave_request_history_leave_response import LeaveRequestHistoryLeaveResponse as LeaveRequestHistoryLeaveResponse
from ..model.leave_types_leave_request import LeaveTypesLeaveRequest as LeaveTypesLeaveRequest
from ..model.leave_types_leave_response import LeaveTypesLeaveResponse as LeaveTypesLeaveResponse
from ..model.work_calendar_date_leave_request import WorkCalendarDateLeaveRequest as WorkCalendarDateLeaveRequest
from ..model.work_calendar_date_leave_response import WorkCalendarDateLeaveResponse as WorkCalendarDateLeaveResponse
from ..model.work_calendar_leave_request import WorkCalendarLeaveRequest as WorkCalendarLeaveRequest
from ..model.work_calendar_leave_response import WorkCalendarLeaveResponse as WorkCalendarLeaveResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Leave:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def calendar_by_scope(self, request: CalendarByScopeLeaveRequest, option: RequestOption | None = None) -> CalendarByScopeLeaveResponse: ...
    async def acalendar_by_scope(self, request: CalendarByScopeLeaveRequest, option: RequestOption | None = None) -> CalendarByScopeLeaveResponse: ...
    def leave_balances(self, request: LeaveBalancesLeaveRequest, option: RequestOption | None = None) -> LeaveBalancesLeaveResponse: ...
    async def aleave_balances(self, request: LeaveBalancesLeaveRequest, option: RequestOption | None = None) -> LeaveBalancesLeaveResponse: ...
    def leave_request_history(self, request: LeaveRequestHistoryLeaveRequest, option: RequestOption | None = None) -> LeaveRequestHistoryLeaveResponse: ...
    async def aleave_request_history(self, request: LeaveRequestHistoryLeaveRequest, option: RequestOption | None = None) -> LeaveRequestHistoryLeaveResponse: ...
    def leave_types(self, request: LeaveTypesLeaveRequest, option: RequestOption | None = None) -> LeaveTypesLeaveResponse: ...
    async def aleave_types(self, request: LeaveTypesLeaveRequest, option: RequestOption | None = None) -> LeaveTypesLeaveResponse: ...
    def work_calendar(self, request: WorkCalendarLeaveRequest, option: RequestOption | None = None) -> WorkCalendarLeaveResponse: ...
    async def awork_calendar(self, request: WorkCalendarLeaveRequest, option: RequestOption | None = None) -> WorkCalendarLeaveResponse: ...
    def work_calendar_date(self, request: WorkCalendarDateLeaveRequest, option: RequestOption | None = None) -> WorkCalendarDateLeaveResponse: ...
    async def awork_calendar_date(self, request: WorkCalendarDateLeaveRequest, option: RequestOption | None = None) -> WorkCalendarDateLeaveResponse: ...
