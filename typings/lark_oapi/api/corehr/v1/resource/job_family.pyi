from ..model.create_job_family_request import CreateJobFamilyRequest as CreateJobFamilyRequest
from ..model.create_job_family_response import CreateJobFamilyResponse as CreateJobFamilyResponse
from ..model.delete_job_family_request import DeleteJobFamilyRequest as DeleteJobFamilyRequest
from ..model.delete_job_family_response import DeleteJobFamilyResponse as DeleteJobFamilyResponse
from ..model.get_job_family_request import GetJobFamilyRequest as GetJobFamilyRequest
from ..model.get_job_family_response import GetJobFamilyResponse as GetJobFamilyResponse
from ..model.list_job_family_request import ListJobFamilyRequest as ListJobFamilyRequest
from ..model.list_job_family_response import ListJobFamilyResponse as ListJobFamilyResponse
from ..model.patch_job_family_request import PatchJobFamilyRequest as PatchJobFamilyRequest
from ..model.patch_job_family_response import PatchJobFamilyResponse as PatchJobFamilyResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class JobFamily:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateJobFamilyRequest, option: RequestOption | None = None) -> CreateJobFamilyResponse: ...
    async def acreate(self, request: CreateJobFamilyRequest, option: RequestOption | None = None) -> CreateJobFamilyResponse: ...
    def delete(self, request: DeleteJobFamilyRequest, option: RequestOption | None = None) -> DeleteJobFamilyResponse: ...
    async def adelete(self, request: DeleteJobFamilyRequest, option: RequestOption | None = None) -> DeleteJobFamilyResponse: ...
    def get(self, request: GetJobFamilyRequest, option: RequestOption | None = None) -> GetJobFamilyResponse: ...
    async def aget(self, request: GetJobFamilyRequest, option: RequestOption | None = None) -> GetJobFamilyResponse: ...
    def list(self, request: ListJobFamilyRequest, option: RequestOption | None = None) -> ListJobFamilyResponse: ...
    async def alist(self, request: ListJobFamilyRequest, option: RequestOption | None = None) -> ListJobFamilyResponse: ...
    def patch(self, request: PatchJobFamilyRequest, option: RequestOption | None = None) -> PatchJobFamilyResponse: ...
    async def apatch(self, request: PatchJobFamilyRequest, option: RequestOption | None = None) -> PatchJobFamilyResponse: ...
