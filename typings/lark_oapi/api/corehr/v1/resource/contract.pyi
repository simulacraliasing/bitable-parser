from ..model.create_contract_request import CreateContractRequest as CreateContractRequest
from ..model.create_contract_response import CreateContractResponse as CreateContractResponse
from ..model.delete_contract_request import DeleteContractRequest as DeleteContractRequest
from ..model.delete_contract_response import DeleteContractResponse as DeleteContractResponse
from ..model.get_contract_request import GetContractRequest as GetContractRequest
from ..model.get_contract_response import GetContractResponse as GetContractResponse
from ..model.list_contract_request import ListContractRequest as ListContractRequest
from ..model.list_contract_response import ListContractResponse as ListContractResponse
from ..model.patch_contract_request import PatchContractRequest as PatchContractRequest
from ..model.patch_contract_response import PatchContractResponse as PatchContractResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Contract:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateContractRequest, option: RequestOption | None = None) -> CreateContractResponse: ...
    async def acreate(self, request: CreateContractRequest, option: RequestOption | None = None) -> CreateContractResponse: ...
    def delete(self, request: DeleteContractRequest, option: RequestOption | None = None) -> DeleteContractResponse: ...
    async def adelete(self, request: DeleteContractRequest, option: RequestOption | None = None) -> DeleteContractResponse: ...
    def get(self, request: GetContractRequest, option: RequestOption | None = None) -> GetContractResponse: ...
    async def aget(self, request: GetContractRequest, option: RequestOption | None = None) -> GetContractResponse: ...
    def list(self, request: ListContractRequest, option: RequestOption | None = None) -> ListContractResponse: ...
    async def alist(self, request: ListContractRequest, option: RequestOption | None = None) -> ListContractResponse: ...
    def patch(self, request: PatchContractRequest, option: RequestOption | None = None) -> PatchContractResponse: ...
    async def apatch(self, request: PatchContractRequest, option: RequestOption | None = None) -> PatchContractResponse: ...
