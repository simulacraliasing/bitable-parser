from ..model.create_person_request import CreatePersonRequest as CreatePersonRequest
from ..model.create_person_response import CreatePersonResponse as CreatePersonResponse
from ..model.delete_person_request import DeletePersonRequest as DeletePersonRequest
from ..model.delete_person_response import DeletePersonResponse as DeletePersonResponse
from ..model.get_person_request import GetPersonRequest as GetPersonRequest
from ..model.get_person_response import GetPersonResponse as GetPersonResponse
from ..model.patch_person_request import PatchPersonRequest as PatchPersonRequest
from ..model.patch_person_response import PatchPersonResponse as PatchPersonResponse
from ..model.upload_person_request import UploadPersonRequest as UploadPersonRequest
from ..model.upload_person_response import UploadPersonResponse as UploadPersonResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files

class Person:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreatePersonRequest, option: RequestOption | None = None) -> CreatePersonResponse: ...
    async def acreate(self, request: CreatePersonRequest, option: RequestOption | None = None) -> CreatePersonResponse: ...
    def delete(self, request: DeletePersonRequest, option: RequestOption | None = None) -> DeletePersonResponse: ...
    async def adelete(self, request: DeletePersonRequest, option: RequestOption | None = None) -> DeletePersonResponse: ...
    def get(self, request: GetPersonRequest, option: RequestOption | None = None) -> GetPersonResponse: ...
    async def aget(self, request: GetPersonRequest, option: RequestOption | None = None) -> GetPersonResponse: ...
    def patch(self, request: PatchPersonRequest, option: RequestOption | None = None) -> PatchPersonResponse: ...
    async def apatch(self, request: PatchPersonRequest, option: RequestOption | None = None) -> PatchPersonResponse: ...
    def upload(self, request: UploadPersonRequest, option: RequestOption | None = None) -> UploadPersonResponse: ...
    async def aupload(self, request: UploadPersonRequest, option: RequestOption | None = None) -> UploadPersonResponse: ...
