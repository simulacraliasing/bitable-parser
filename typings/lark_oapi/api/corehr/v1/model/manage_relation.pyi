from .enum import Enum as Enum
from lark_oapi.core.construct import init as init

class ManageRelation:
    subordinate_department_id: str | None
    subordinate_employee_id: str | None
    manager_type: Enum | None
    report_mode_type: Enum | None
    superior_employee_id: str | None
    effective_time: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ManageRelationBuilder: ...

class ManageRelationBuilder:
    def __init__(self) -> None: ...
    def subordinate_department_id(self, subordinate_department_id: str) -> ManageRelationBuilder: ...
    def subordinate_employee_id(self, subordinate_employee_id: str) -> ManageRelationBuilder: ...
    def manager_type(self, manager_type: Enum) -> ManageRelationBuilder: ...
    def report_mode_type(self, report_mode_type: Enum) -> ManageRelationBuilder: ...
    def superior_employee_id(self, superior_employee_id: str) -> ManageRelationBuilder: ...
    def effective_time(self, effective_time: str) -> ManageRelationBuilder: ...
    def build(self) -> ManageRelation: ...
