from .filter_rule_value import FilterRuleValue as FilterRuleValue
from lark_oapi.core.construct import init as init

class FilterCondition:
    left: FilterRuleValue | None
    right: FilterRuleValue | None
    operator: int | None
    right_value_type: int | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> FilterConditionBuilder: ...

class FilterConditionBuilder:
    def __init__(self) -> None: ...
    def left(self, left: FilterRuleValue) -> FilterConditionBuilder: ...
    def right(self, right: FilterRuleValue) -> FilterConditionBuilder: ...
    def operator(self, operator: int) -> FilterConditionBuilder: ...
    def right_value_type(self, right_value_type: int) -> FilterConditionBuilder: ...
    def build(self) -> FilterCondition: ...
