from .common_schema_config import CommonSchemaConfig as CommonSchemaConfig
from .name import Name as Name
from lark_oapi.core.construct import init as init

class CustomField:
    custom_api_name: str | None
    name: Name | None
    description: Name | None
    is_open: bool | None
    is_required: bool | None
    is_unique: bool | None
    object_api_name: str | None
    type: int | None
    common_schema_config: CommonSchemaConfig | None
    create_time: str | None
    update_time: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> CustomFieldBuilder: ...

class CustomFieldBuilder:
    def __init__(self) -> None: ...
    def custom_api_name(self, custom_api_name: str) -> CustomFieldBuilder: ...
    def name(self, name: Name) -> CustomFieldBuilder: ...
    def description(self, description: Name) -> CustomFieldBuilder: ...
    def is_open(self, is_open: bool) -> CustomFieldBuilder: ...
    def is_required(self, is_required: bool) -> CustomFieldBuilder: ...
    def is_unique(self, is_unique: bool) -> CustomFieldBuilder: ...
    def object_api_name(self, object_api_name: str) -> CustomFieldBuilder: ...
    def type(self, type: int) -> CustomFieldBuilder: ...
    def common_schema_config(self, common_schema_config: CommonSchemaConfig) -> CustomFieldBuilder: ...
    def create_time(self, create_time: str) -> CustomFieldBuilder: ...
    def update_time(self, update_time: str) -> CustomFieldBuilder: ...
    def build(self) -> CustomField: ...
