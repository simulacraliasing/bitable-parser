from .enum import Enum as Enum
from .object_field_data import ObjectFieldData as ObjectFieldData
from lark_oapi.core.construct import init as init

class Phone:
    international_area_code: Enum | None
    phone_number: str | None
    formatted_phone_number: str | None
    device_type: Enum | None
    phone_usage: Enum | None
    is_primary: bool | None
    is_public: bool | None
    custom_fields: list[ObjectFieldData] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> PhoneBuilder: ...

class PhoneBuilder:
    def __init__(self) -> None: ...
    def international_area_code(self, international_area_code: Enum) -> PhoneBuilder: ...
    def phone_number(self, phone_number: str) -> PhoneBuilder: ...
    def formatted_phone_number(self, formatted_phone_number: str) -> PhoneBuilder: ...
    def device_type(self, device_type: Enum) -> PhoneBuilder: ...
    def phone_usage(self, phone_usage: Enum) -> PhoneBuilder: ...
    def is_primary(self, is_primary: bool) -> PhoneBuilder: ...
    def is_public(self, is_public: bool) -> PhoneBuilder: ...
    def custom_fields(self, custom_fields: list[ObjectFieldData]) -> PhoneBuilder: ...
    def build(self) -> Phone: ...
