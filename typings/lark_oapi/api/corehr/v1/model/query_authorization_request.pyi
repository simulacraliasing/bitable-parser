from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class QueryAuthorizationRequest(BaseRequest):
    employment_id_list: list[str] | None
    role_id_list: list[str] | None
    page_token: str | None
    page_size: str | None
    user_id_type: str | None
    updated_at_gte: str | None
    updated_at_lte: str | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> QueryAuthorizationRequestBuilder: ...

class QueryAuthorizationRequestBuilder:
    def __init__(self) -> None: ...
    def employment_id_list(self, employment_id_list: list[str]) -> QueryAuthorizationRequestBuilder: ...
    def role_id_list(self, role_id_list: list[str]) -> QueryAuthorizationRequestBuilder: ...
    def page_token(self, page_token: str) -> QueryAuthorizationRequestBuilder: ...
    def page_size(self, page_size: str) -> QueryAuthorizationRequestBuilder: ...
    def user_id_type(self, user_id_type: str) -> QueryAuthorizationRequestBuilder: ...
    def updated_at_gte(self, updated_at_gte: str) -> QueryAuthorizationRequestBuilder: ...
    def updated_at_lte(self, updated_at_lte: str) -> QueryAuthorizationRequestBuilder: ...
    def build(self) -> QueryAuthorizationRequest: ...
