from lark_oapi.core.construct import init as init

class FilterRuleValue:
    type: int | None
    value: str | None
    lookup_value: str | None
    lookup_type: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> FilterRuleValueBuilder: ...

class FilterRuleValueBuilder:
    def __init__(self) -> None: ...
    def type(self, type: int) -> FilterRuleValueBuilder: ...
    def value(self, value: str) -> FilterRuleValueBuilder: ...
    def lookup_value(self, lookup_value: str) -> FilterRuleValueBuilder: ...
    def lookup_type(self, lookup_type: str) -> FilterRuleValueBuilder: ...
    def build(self) -> FilterRuleValue: ...
