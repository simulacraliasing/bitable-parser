from .enum import Enum as Enum
from .object_field_data import ObjectFieldData as ObjectFieldData
from .support_cost_center_item import SupportCostCenterItem as SupportCostCenterItem
from lark_oapi.core.construct import init as init

class PreHire:
    ats_application_id: str | None
    id: str | None
    hire_date: str | None
    employee_type: Enum | None
    worker_id: str | None
    employee_type_id: str | None
    person_id: str | None
    custom_fields: list[ObjectFieldData] | None
    cost_center_rate: list[SupportCostCenterItem] | None
    onboarding_status: Enum | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> PreHireBuilder: ...

class PreHireBuilder:
    def __init__(self) -> None: ...
    def ats_application_id(self, ats_application_id: str) -> PreHireBuilder: ...
    def id(self, id: str) -> PreHireBuilder: ...
    def hire_date(self, hire_date: str) -> PreHireBuilder: ...
    def employee_type(self, employee_type: Enum) -> PreHireBuilder: ...
    def worker_id(self, worker_id: str) -> PreHireBuilder: ...
    def employee_type_id(self, employee_type_id: str) -> PreHireBuilder: ...
    def person_id(self, person_id: str) -> PreHireBuilder: ...
    def custom_fields(self, custom_fields: list[ObjectFieldData]) -> PreHireBuilder: ...
    def cost_center_rate(self, cost_center_rate: list[SupportCostCenterItem]) -> PreHireBuilder: ...
    def onboarding_status(self, onboarding_status: Enum) -> PreHireBuilder: ...
    def build(self) -> PreHire: ...
