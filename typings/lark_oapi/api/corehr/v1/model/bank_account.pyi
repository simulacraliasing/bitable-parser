from .enum import Enum as Enum
from .object_field_data import ObjectFieldData as ObjectFieldData
from lark_oapi.core.construct import init as init

class BankAccount:
    bank_name: str | None
    bank_account_number: str | None
    account_holder: str | None
    bank: Enum | None
    bank_identification_code: str | None
    branch_name: str | None
    bank_id: str | None
    branch_id: str | None
    bank_id_v2: str | None
    branch_id_v2: str | None
    custom_fields: list[ObjectFieldData] | None
    country_region_id: str | None
    bank_account_usage: list[Enum] | None
    bank_account_type: Enum | None
    currency_id: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> BankAccountBuilder: ...

class BankAccountBuilder:
    def __init__(self) -> None: ...
    def bank_name(self, bank_name: str) -> BankAccountBuilder: ...
    def bank_account_number(self, bank_account_number: str) -> BankAccountBuilder: ...
    def account_holder(self, account_holder: str) -> BankAccountBuilder: ...
    def bank(self, bank: Enum) -> BankAccountBuilder: ...
    def bank_identification_code(self, bank_identification_code: str) -> BankAccountBuilder: ...
    def branch_name(self, branch_name: str) -> BankAccountBuilder: ...
    def bank_id(self, bank_id: str) -> BankAccountBuilder: ...
    def branch_id(self, branch_id: str) -> BankAccountBuilder: ...
    def bank_id_v2(self, bank_id_v2: str) -> BankAccountBuilder: ...
    def branch_id_v2(self, branch_id_v2: str) -> BankAccountBuilder: ...
    def custom_fields(self, custom_fields: list[ObjectFieldData]) -> BankAccountBuilder: ...
    def country_region_id(self, country_region_id: str) -> BankAccountBuilder: ...
    def bank_account_usage(self, bank_account_usage: list[Enum]) -> BankAccountBuilder: ...
    def bank_account_type(self, bank_account_type: Enum) -> BankAccountBuilder: ...
    def currency_id(self, currency_id: str) -> BankAccountBuilder: ...
    def build(self) -> BankAccount: ...
