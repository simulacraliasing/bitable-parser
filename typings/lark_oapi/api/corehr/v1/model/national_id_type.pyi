from .enum import Enum as Enum
from .i18n import I18n as I18n
from .object_field_data import ObjectFieldData as ObjectFieldData
from lark_oapi.core.construct import init as init

class NationalIdType:
    id: str | None
    country_region_id: str | None
    name: list[I18n] | None
    active: bool | None
    validation_rule: str | None
    validation_rule_description: list[I18n] | None
    code: str | None
    identification_type: Enum | None
    custom_fields: list[ObjectFieldData] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> NationalIdTypeBuilder: ...

class NationalIdTypeBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> NationalIdTypeBuilder: ...
    def country_region_id(self, country_region_id: str) -> NationalIdTypeBuilder: ...
    def name(self, name: list[I18n]) -> NationalIdTypeBuilder: ...
    def active(self, active: bool) -> NationalIdTypeBuilder: ...
    def validation_rule(self, validation_rule: str) -> NationalIdTypeBuilder: ...
    def validation_rule_description(self, validation_rule_description: list[I18n]) -> NationalIdTypeBuilder: ...
    def code(self, code: str) -> NationalIdTypeBuilder: ...
    def identification_type(self, identification_type: Enum) -> NationalIdTypeBuilder: ...
    def custom_fields(self, custom_fields: list[ObjectFieldData]) -> NationalIdTypeBuilder: ...
    def build(self) -> NationalIdType: ...
