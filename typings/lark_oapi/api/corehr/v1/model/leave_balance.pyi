from .i18n import I18n as I18n
from lark_oapi.core.construct import init as init

class LeaveBalance:
    leave_type_id: str | None
    leave_type_name: list[I18n] | None
    historical_cycles_left: str | None
    this_cycle_total: str | None
    this_cycle_taken: str | None
    leave_balance: str | None
    leave_duration_unit: int | None
    history_cycle_accrual: str | None
    balance_in_current_cycle: str | None
    taken: str | None
    taken_history_cycle: str | None
    offboarding_balance: str | None
    taken_current_date: str | None
    offboarding_granted: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> LeaveBalanceBuilder: ...

class LeaveBalanceBuilder:
    def __init__(self) -> None: ...
    def leave_type_id(self, leave_type_id: str) -> LeaveBalanceBuilder: ...
    def leave_type_name(self, leave_type_name: list[I18n]) -> LeaveBalanceBuilder: ...
    def historical_cycles_left(self, historical_cycles_left: str) -> LeaveBalanceBuilder: ...
    def this_cycle_total(self, this_cycle_total: str) -> LeaveBalanceBuilder: ...
    def this_cycle_taken(self, this_cycle_taken: str) -> LeaveBalanceBuilder: ...
    def leave_balance(self, leave_balance: str) -> LeaveBalanceBuilder: ...
    def leave_duration_unit(self, leave_duration_unit: int) -> LeaveBalanceBuilder: ...
    def history_cycle_accrual(self, history_cycle_accrual: str) -> LeaveBalanceBuilder: ...
    def balance_in_current_cycle(self, balance_in_current_cycle: str) -> LeaveBalanceBuilder: ...
    def taken(self, taken: str) -> LeaveBalanceBuilder: ...
    def taken_history_cycle(self, taken_history_cycle: str) -> LeaveBalanceBuilder: ...
    def offboarding_balance(self, offboarding_balance: str) -> LeaveBalanceBuilder: ...
    def taken_current_date(self, taken_current_date: str) -> LeaveBalanceBuilder: ...
    def offboarding_granted(self, offboarding_granted: str) -> LeaveBalanceBuilder: ...
    def build(self) -> LeaveBalance: ...
