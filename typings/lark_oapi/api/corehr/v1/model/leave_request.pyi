from .i18n import I18n as I18n
from .leave_process_info import LeaveProcessInfo as LeaveProcessInfo
from .leave_request_detail import LeaveRequestDetail as LeaveRequestDetail
from lark_oapi.core.construct import init as init

class LeaveRequest:
    leave_request_id: str | None
    employment_id: str | None
    employment_name: list[I18n] | None
    leave_type_id: str | None
    leave_type_name: list[I18n] | None
    start_time: str | None
    end_time: str | None
    leave_duration: str | None
    leave_duration_unit: int | None
    leave_request_status: int | None
    grant_source: str | None
    return_time: str | None
    submitted_at: str | None
    submitted_by: str | None
    notes: str | None
    approval_date: str | None
    is_deducted: bool | None
    details: list[LeaveRequestDetail] | None
    leave_type_code: str | None
    actual_end_date: str | None
    estimated_end_date: str | None
    time_zone: str | None
    data_source: int | None
    leave_process_id: list[str] | None
    leave_correct_process_id: list[str] | None
    leave_cancel_process_id: list[str] | None
    leave_return_process_id: list[str] | None
    wd_paid_type: int | None
    leave_correct_process_info: list[LeaveProcessInfo] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> LeaveRequestBuilder: ...

class LeaveRequestBuilder:
    def __init__(self) -> None: ...
    def leave_request_id(self, leave_request_id: str) -> LeaveRequestBuilder: ...
    def employment_id(self, employment_id: str) -> LeaveRequestBuilder: ...
    def employment_name(self, employment_name: list[I18n]) -> LeaveRequestBuilder: ...
    def leave_type_id(self, leave_type_id: str) -> LeaveRequestBuilder: ...
    def leave_type_name(self, leave_type_name: list[I18n]) -> LeaveRequestBuilder: ...
    def start_time(self, start_time: str) -> LeaveRequestBuilder: ...
    def end_time(self, end_time: str) -> LeaveRequestBuilder: ...
    def leave_duration(self, leave_duration: str) -> LeaveRequestBuilder: ...
    def leave_duration_unit(self, leave_duration_unit: int) -> LeaveRequestBuilder: ...
    def leave_request_status(self, leave_request_status: int) -> LeaveRequestBuilder: ...
    def grant_source(self, grant_source: str) -> LeaveRequestBuilder: ...
    def return_time(self, return_time: str) -> LeaveRequestBuilder: ...
    def submitted_at(self, submitted_at: str) -> LeaveRequestBuilder: ...
    def submitted_by(self, submitted_by: str) -> LeaveRequestBuilder: ...
    def notes(self, notes: str) -> LeaveRequestBuilder: ...
    def approval_date(self, approval_date: str) -> LeaveRequestBuilder: ...
    def is_deducted(self, is_deducted: bool) -> LeaveRequestBuilder: ...
    def details(self, details: list[LeaveRequestDetail]) -> LeaveRequestBuilder: ...
    def leave_type_code(self, leave_type_code: str) -> LeaveRequestBuilder: ...
    def actual_end_date(self, actual_end_date: str) -> LeaveRequestBuilder: ...
    def estimated_end_date(self, estimated_end_date: str) -> LeaveRequestBuilder: ...
    def time_zone(self, time_zone: str) -> LeaveRequestBuilder: ...
    def data_source(self, data_source: int) -> LeaveRequestBuilder: ...
    def leave_process_id(self, leave_process_id: list[str]) -> LeaveRequestBuilder: ...
    def leave_correct_process_id(self, leave_correct_process_id: list[str]) -> LeaveRequestBuilder: ...
    def leave_cancel_process_id(self, leave_cancel_process_id: list[str]) -> LeaveRequestBuilder: ...
    def leave_return_process_id(self, leave_return_process_id: list[str]) -> LeaveRequestBuilder: ...
    def wd_paid_type(self, wd_paid_type: int) -> LeaveRequestBuilder: ...
    def leave_correct_process_info(self, leave_correct_process_info: list[LeaveProcessInfo]) -> LeaveRequestBuilder: ...
    def build(self) -> LeaveRequest: ...
