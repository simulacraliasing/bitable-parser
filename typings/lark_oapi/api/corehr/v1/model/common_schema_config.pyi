from .attachment_field_setting import AttachmentFieldSetting as AttachmentFieldSetting
from .calculated_field_setting import CalculatedFieldSetting as CalculatedFieldSetting
from .date_time_field_setting import DateTimeFieldSetting as DateTimeFieldSetting
from .enum_field_setting import EnumFieldSetting as EnumFieldSetting
from .image_field_setting import ImageFieldSetting as ImageFieldSetting
from .lookup_field_setting import LookupFieldSetting as LookupFieldSetting
from .number_field_setting import NumberFieldSetting as NumberFieldSetting
from .text_field_setting import TextFieldSetting as TextFieldSetting
from lark_oapi.core.construct import init as init

class CommonSchemaConfig:
    text_field_setting: TextFieldSetting | None
    number_field_setting: NumberFieldSetting | None
    enum_field_setting: EnumFieldSetting | None
    lookup_field_setting: LookupFieldSetting | None
    date_time_field_setting: DateTimeFieldSetting | None
    attachment_field_setting: AttachmentFieldSetting | None
    image_field_setting: ImageFieldSetting | None
    calculated_field_setting: CalculatedFieldSetting | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> CommonSchemaConfigBuilder: ...

class CommonSchemaConfigBuilder:
    def __init__(self) -> None: ...
    def text_field_setting(self, text_field_setting: TextFieldSetting) -> CommonSchemaConfigBuilder: ...
    def number_field_setting(self, number_field_setting: NumberFieldSetting) -> CommonSchemaConfigBuilder: ...
    def enum_field_setting(self, enum_field_setting: EnumFieldSetting) -> CommonSchemaConfigBuilder: ...
    def lookup_field_setting(self, lookup_field_setting: LookupFieldSetting) -> CommonSchemaConfigBuilder: ...
    def date_time_field_setting(self, date_time_field_setting: DateTimeFieldSetting) -> CommonSchemaConfigBuilder: ...
    def attachment_field_setting(self, attachment_field_setting: AttachmentFieldSetting) -> CommonSchemaConfigBuilder: ...
    def image_field_setting(self, image_field_setting: ImageFieldSetting) -> CommonSchemaConfigBuilder: ...
    def calculated_field_setting(self, calculated_field_setting: CalculatedFieldSetting) -> CommonSchemaConfigBuilder: ...
    def build(self) -> CommonSchemaConfig: ...
