from .custom_field_data import CustomFieldData as CustomFieldData
from .enum import Enum as Enum
from lark_oapi.core.construct import init as init

class OffboardingInfo:
    employment_id: str | None
    hrbp_id: list[str] | None
    expected_offboarding_date: str | None
    offboarding_date: str | None
    reason: Enum | None
    reason_explanation: str | None
    employee_reason: Enum | None
    employee_reason_explanation: str | None
    add_block_list: str | None
    block_reason: Enum | None
    block_reason_explanation: str | None
    custom_fields: list[CustomFieldData] | None
    retain_account: bool | None
    social_insurance_end_date: str | None
    provident_fund_end_date: str | None
    enforce_noncompete_agreement: bool | None
    noncompete_agreement_id: str | None
    noncompete_agreement_company: str | None
    noncompete_agreement_start_date: str | None
    noncompete_agreement_end_date: str | None
    sign_type: Enum | None
    signature_file: str | None
    last_attendance_date: str | None
    is_transfer_with_workforce: bool | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> OffboardingInfoBuilder: ...

class OffboardingInfoBuilder:
    def __init__(self) -> None: ...
    def employment_id(self, employment_id: str) -> OffboardingInfoBuilder: ...
    def hrbp_id(self, hrbp_id: list[str]) -> OffboardingInfoBuilder: ...
    def expected_offboarding_date(self, expected_offboarding_date: str) -> OffboardingInfoBuilder: ...
    def offboarding_date(self, offboarding_date: str) -> OffboardingInfoBuilder: ...
    def reason(self, reason: Enum) -> OffboardingInfoBuilder: ...
    def reason_explanation(self, reason_explanation: str) -> OffboardingInfoBuilder: ...
    def employee_reason(self, employee_reason: Enum) -> OffboardingInfoBuilder: ...
    def employee_reason_explanation(self, employee_reason_explanation: str) -> OffboardingInfoBuilder: ...
    def add_block_list(self, add_block_list: str) -> OffboardingInfoBuilder: ...
    def block_reason(self, block_reason: Enum) -> OffboardingInfoBuilder: ...
    def block_reason_explanation(self, block_reason_explanation: str) -> OffboardingInfoBuilder: ...
    def custom_fields(self, custom_fields: list[CustomFieldData]) -> OffboardingInfoBuilder: ...
    def retain_account(self, retain_account: bool) -> OffboardingInfoBuilder: ...
    def social_insurance_end_date(self, social_insurance_end_date: str) -> OffboardingInfoBuilder: ...
    def provident_fund_end_date(self, provident_fund_end_date: str) -> OffboardingInfoBuilder: ...
    def enforce_noncompete_agreement(self, enforce_noncompete_agreement: bool) -> OffboardingInfoBuilder: ...
    def noncompete_agreement_id(self, noncompete_agreement_id: str) -> OffboardingInfoBuilder: ...
    def noncompete_agreement_company(self, noncompete_agreement_company: str) -> OffboardingInfoBuilder: ...
    def noncompete_agreement_start_date(self, noncompete_agreement_start_date: str) -> OffboardingInfoBuilder: ...
    def noncompete_agreement_end_date(self, noncompete_agreement_end_date: str) -> OffboardingInfoBuilder: ...
    def sign_type(self, sign_type: Enum) -> OffboardingInfoBuilder: ...
    def signature_file(self, signature_file: str) -> OffboardingInfoBuilder: ...
    def last_attendance_date(self, last_attendance_date: str) -> OffboardingInfoBuilder: ...
    def is_transfer_with_workforce(self, is_transfer_with_workforce: bool) -> OffboardingInfoBuilder: ...
    def build(self) -> OffboardingInfo: ...
