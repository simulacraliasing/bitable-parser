from .i18n import I18n as I18n
from .object_field_data import ObjectFieldData as ObjectFieldData
from lark_oapi.core.construct import init as init

class Job:
    id: str | None
    code: str | None
    name: list[I18n] | None
    description: list[I18n] | None
    active: bool | None
    job_title: list[I18n] | None
    pathway_id: str | None
    job_family_id_list: list[str] | None
    job_level_id_list: list[str] | None
    working_hours_type_id: str | None
    effective_time: str | None
    expiration_time: str | None
    custom_fields: list[ObjectFieldData] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> JobBuilder: ...

class JobBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> JobBuilder: ...
    def code(self, code: str) -> JobBuilder: ...
    def name(self, name: list[I18n]) -> JobBuilder: ...
    def description(self, description: list[I18n]) -> JobBuilder: ...
    def active(self, active: bool) -> JobBuilder: ...
    def job_title(self, job_title: list[I18n]) -> JobBuilder: ...
    def pathway_id(self, pathway_id: str) -> JobBuilder: ...
    def job_family_id_list(self, job_family_id_list: list[str]) -> JobBuilder: ...
    def job_level_id_list(self, job_level_id_list: list[str]) -> JobBuilder: ...
    def working_hours_type_id(self, working_hours_type_id: str) -> JobBuilder: ...
    def effective_time(self, effective_time: str) -> JobBuilder: ...
    def expiration_time(self, expiration_time: str) -> JobBuilder: ...
    def custom_fields(self, custom_fields: list[ObjectFieldData]) -> JobBuilder: ...
    def build(self) -> Job: ...
