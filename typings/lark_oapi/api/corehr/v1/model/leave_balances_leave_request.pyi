from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class LeaveBalancesLeaveRequest(BaseRequest):
    page_token: str | None
    page_size: str | None
    as_of_date: str | None
    employment_id_list: list[str] | None
    user_id_type: str | None
    time_zone: str | None
    include_offboard: bool | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> LeaveBalancesLeaveRequestBuilder: ...

class LeaveBalancesLeaveRequestBuilder:
    def __init__(self) -> None: ...
    def page_token(self, page_token: str) -> LeaveBalancesLeaveRequestBuilder: ...
    def page_size(self, page_size: str) -> LeaveBalancesLeaveRequestBuilder: ...
    def as_of_date(self, as_of_date: str) -> LeaveBalancesLeaveRequestBuilder: ...
    def employment_id_list(self, employment_id_list: list[str]) -> LeaveBalancesLeaveRequestBuilder: ...
    def user_id_type(self, user_id_type: str) -> LeaveBalancesLeaveRequestBuilder: ...
    def time_zone(self, time_zone: str) -> LeaveBalancesLeaveRequestBuilder: ...
    def include_offboard(self, include_offboard: bool) -> LeaveBalancesLeaveRequestBuilder: ...
    def build(self) -> LeaveBalancesLeaveRequest: ...
