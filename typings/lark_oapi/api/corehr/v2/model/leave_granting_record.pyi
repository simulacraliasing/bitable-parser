from .i18n import I18n as I18n
from lark_oapi.core.construct import init as init

class LeaveGrantingRecord:
    id: str | None
    employment_id: str | None
    leave_type_id: str | None
    granting_quantity: str | None
    granting_unit: int | None
    effective_date: str | None
    expiration_date: str | None
    granted_by: int | None
    reason: list[I18n] | None
    created_at: str | None
    created_by: str | None
    updated_at: str | None
    updated_by: str | None
    section_type: int | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> LeaveGrantingRecordBuilder: ...

class LeaveGrantingRecordBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> LeaveGrantingRecordBuilder: ...
    def employment_id(self, employment_id: str) -> LeaveGrantingRecordBuilder: ...
    def leave_type_id(self, leave_type_id: str) -> LeaveGrantingRecordBuilder: ...
    def granting_quantity(self, granting_quantity: str) -> LeaveGrantingRecordBuilder: ...
    def granting_unit(self, granting_unit: int) -> LeaveGrantingRecordBuilder: ...
    def effective_date(self, effective_date: str) -> LeaveGrantingRecordBuilder: ...
    def expiration_date(self, expiration_date: str) -> LeaveGrantingRecordBuilder: ...
    def granted_by(self, granted_by: int) -> LeaveGrantingRecordBuilder: ...
    def reason(self, reason: list[I18n]) -> LeaveGrantingRecordBuilder: ...
    def created_at(self, created_at: str) -> LeaveGrantingRecordBuilder: ...
    def created_by(self, created_by: str) -> LeaveGrantingRecordBuilder: ...
    def updated_at(self, updated_at: str) -> LeaveGrantingRecordBuilder: ...
    def updated_by(self, updated_by: str) -> LeaveGrantingRecordBuilder: ...
    def section_type(self, section_type: int) -> LeaveGrantingRecordBuilder: ...
    def build(self) -> LeaveGrantingRecord: ...
