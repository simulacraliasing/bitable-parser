from .object_field_data import ObjectFieldData as ObjectFieldData
from lark_oapi.core.construct import init as init

class EmployeesInternationalAssignmentReq:
    work_location_id: str | None
    service_company: str | None
    work_shift: str | None
    weekly_working_hours_v2: float | None
    working_hours_type_id: str | None
    employee_type_id: str | None
    department_id: str | None
    job_id: str | None
    job_family_id: str | None
    job_level_id: str | None
    job_grade_id: str | None
    compensation_type: str | None
    direct_manager_id: str | None
    dotted_line_manager_id: str | None
    work_calendar_id: str | None
    position_id: str | None
    employment_id: str | None
    custom_fields: list[ObjectFieldData] | None
    international_assignment_reason: str | None
    description: str | None
    international_assignment_expected_end_date: str | None
    international_assignment_type: str | None
    effective_time: str | None
    expiration_time: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> EmployeesInternationalAssignmentReqBuilder: ...

class EmployeesInternationalAssignmentReqBuilder:
    def __init__(self) -> None: ...
    def work_location_id(self, work_location_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def service_company(self, service_company: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def work_shift(self, work_shift: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def weekly_working_hours_v2(self, weekly_working_hours_v2: float) -> EmployeesInternationalAssignmentReqBuilder: ...
    def working_hours_type_id(self, working_hours_type_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def employee_type_id(self, employee_type_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def department_id(self, department_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def job_id(self, job_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def job_family_id(self, job_family_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def job_level_id(self, job_level_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def job_grade_id(self, job_grade_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def compensation_type(self, compensation_type: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def direct_manager_id(self, direct_manager_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def dotted_line_manager_id(self, dotted_line_manager_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def work_calendar_id(self, work_calendar_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def position_id(self, position_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def employment_id(self, employment_id: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def custom_fields(self, custom_fields: list[ObjectFieldData]) -> EmployeesInternationalAssignmentReqBuilder: ...
    def international_assignment_reason(self, international_assignment_reason: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def description(self, description: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def international_assignment_expected_end_date(self, international_assignment_expected_end_date: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def international_assignment_type(self, international_assignment_type: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def effective_time(self, effective_time: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def expiration_time(self, expiration_time: str) -> EmployeesInternationalAssignmentReqBuilder: ...
    def build(self) -> EmployeesInternationalAssignmentReq: ...
