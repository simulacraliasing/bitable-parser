from .dataengine_i18n import DataengineI18n as DataengineI18n
from .process_abstract_item import ProcessAbstractItem as ProcessAbstractItem
from .process_cc_item import ProcessCcItem as ProcessCcItem
from .process_comment_info import ProcessCommentInfo as ProcessCommentInfo
from .process_done_item import ProcessDoneItem as ProcessDoneItem
from .process_link import ProcessLink as ProcessLink
from .process_system_done_item import ProcessSystemDoneItem as ProcessSystemDoneItem
from .process_system_todo_item import ProcessSystemTodoItem as ProcessSystemTodoItem
from .process_todo_item import ProcessTodoItem as ProcessTodoItem
from lark_oapi.core.construct import init as init

class GetProcessResponseBody:
    process_id: str | None
    status: int | None
    flow_template_id: str | None
    flow_template_name: DataengineI18n | None
    flow_definition_id: str | None
    flow_definition_name: DataengineI18n | None
    initiator_id: str | None
    initiator_name: DataengineI18n | None
    create_time: str | None
    complete_time: str | None
    start_links: ProcessLink | None
    abstracts: list[ProcessAbstractItem] | None
    todos: list[ProcessTodoItem] | None
    cc_list: list[ProcessCcItem] | None
    done_list: list[ProcessDoneItem] | None
    properties: int | None
    system_todos: list[ProcessSystemTodoItem] | None
    system_done_list: list[ProcessSystemDoneItem] | None
    comment_infos: list[ProcessCommentInfo] | None
    original_process_id: str | None
    is_last_completed_correct_process: bool | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> GetProcessResponseBodyBuilder: ...

class GetProcessResponseBodyBuilder:
    def __init__(self) -> None: ...
    def process_id(self, process_id: str) -> GetProcessResponseBodyBuilder: ...
    def status(self, status: int) -> GetProcessResponseBodyBuilder: ...
    def flow_template_id(self, flow_template_id: str) -> GetProcessResponseBodyBuilder: ...
    def flow_template_name(self, flow_template_name: DataengineI18n) -> GetProcessResponseBodyBuilder: ...
    def flow_definition_id(self, flow_definition_id: str) -> GetProcessResponseBodyBuilder: ...
    def flow_definition_name(self, flow_definition_name: DataengineI18n) -> GetProcessResponseBodyBuilder: ...
    def initiator_id(self, initiator_id: str) -> GetProcessResponseBodyBuilder: ...
    def initiator_name(self, initiator_name: DataengineI18n) -> GetProcessResponseBodyBuilder: ...
    def create_time(self, create_time: str) -> GetProcessResponseBodyBuilder: ...
    def complete_time(self, complete_time: str) -> GetProcessResponseBodyBuilder: ...
    def start_links(self, start_links: ProcessLink) -> GetProcessResponseBodyBuilder: ...
    def abstracts(self, abstracts: list[ProcessAbstractItem]) -> GetProcessResponseBodyBuilder: ...
    def todos(self, todos: list[ProcessTodoItem]) -> GetProcessResponseBodyBuilder: ...
    def cc_list(self, cc_list: list[ProcessCcItem]) -> GetProcessResponseBodyBuilder: ...
    def done_list(self, done_list: list[ProcessDoneItem]) -> GetProcessResponseBodyBuilder: ...
    def properties(self, properties: int) -> GetProcessResponseBodyBuilder: ...
    def system_todos(self, system_todos: list[ProcessSystemTodoItem]) -> GetProcessResponseBodyBuilder: ...
    def system_done_list(self, system_done_list: list[ProcessSystemDoneItem]) -> GetProcessResponseBodyBuilder: ...
    def comment_infos(self, comment_infos: list[ProcessCommentInfo]) -> GetProcessResponseBodyBuilder: ...
    def original_process_id(self, original_process_id: str) -> GetProcessResponseBodyBuilder: ...
    def is_last_completed_correct_process(self, is_last_completed_correct_process: bool) -> GetProcessResponseBodyBuilder: ...
    def build(self) -> GetProcessResponseBody: ...
