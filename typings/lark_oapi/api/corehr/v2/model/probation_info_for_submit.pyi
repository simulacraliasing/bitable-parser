from .custom_field_data import CustomFieldData as CustomFieldData
from .enum import Enum as Enum
from lark_oapi.core.construct import init as init

class ProbationInfoForSubmit:
    employment_id: str | None
    probation_id: str | None
    probation_start_date: str | None
    probation_expected_end_date: str | None
    actual_probation_end_date: str | None
    initiating_time: str | None
    submission_type: Enum | None
    initiator_id: str | None
    probation_status: Enum | None
    self_review: str | None
    notes: str | None
    process_id: str | None
    converted_via_bpm: bool | None
    custom_fields: list[CustomFieldData] | None
    final_assessment_status: Enum | None
    final_assessment_result: Enum | None
    final_assessment_score: float | None
    final_assessment_grade: Enum | None
    final_assessment_comment: str | None
    final_assessment_detail: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ProbationInfoForSubmitBuilder: ...

class ProbationInfoForSubmitBuilder:
    def __init__(self) -> None: ...
    def employment_id(self, employment_id: str) -> ProbationInfoForSubmitBuilder: ...
    def probation_id(self, probation_id: str) -> ProbationInfoForSubmitBuilder: ...
    def probation_start_date(self, probation_start_date: str) -> ProbationInfoForSubmitBuilder: ...
    def probation_expected_end_date(self, probation_expected_end_date: str) -> ProbationInfoForSubmitBuilder: ...
    def actual_probation_end_date(self, actual_probation_end_date: str) -> ProbationInfoForSubmitBuilder: ...
    def initiating_time(self, initiating_time: str) -> ProbationInfoForSubmitBuilder: ...
    def submission_type(self, submission_type: Enum) -> ProbationInfoForSubmitBuilder: ...
    def initiator_id(self, initiator_id: str) -> ProbationInfoForSubmitBuilder: ...
    def probation_status(self, probation_status: Enum) -> ProbationInfoForSubmitBuilder: ...
    def self_review(self, self_review: str) -> ProbationInfoForSubmitBuilder: ...
    def notes(self, notes: str) -> ProbationInfoForSubmitBuilder: ...
    def process_id(self, process_id: str) -> ProbationInfoForSubmitBuilder: ...
    def converted_via_bpm(self, converted_via_bpm: bool) -> ProbationInfoForSubmitBuilder: ...
    def custom_fields(self, custom_fields: list[CustomFieldData]) -> ProbationInfoForSubmitBuilder: ...
    def final_assessment_status(self, final_assessment_status: Enum) -> ProbationInfoForSubmitBuilder: ...
    def final_assessment_result(self, final_assessment_result: Enum) -> ProbationInfoForSubmitBuilder: ...
    def final_assessment_score(self, final_assessment_score: float) -> ProbationInfoForSubmitBuilder: ...
    def final_assessment_grade(self, final_assessment_grade: Enum) -> ProbationInfoForSubmitBuilder: ...
    def final_assessment_comment(self, final_assessment_comment: str) -> ProbationInfoForSubmitBuilder: ...
    def final_assessment_detail(self, final_assessment_detail: str) -> ProbationInfoForSubmitBuilder: ...
    def build(self) -> ProbationInfoForSubmit: ...
