from .enum import Enum as Enum
from .i18n import I18n as I18n
from lark_oapi.core.construct import init as init

class LocationUpdate:
    parent_id: str | None
    names: list[I18n] | None
    active: bool | None
    effective_time: str | None
    code: str | None
    descriptions: list[I18n] | None
    location_usages: list[Enum] | None
    working_hours_type_id: str | None
    locale: Enum | None
    time_zone_id: str | None
    display_language_id: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> LocationUpdateBuilder: ...

class LocationUpdateBuilder:
    def __init__(self) -> None: ...
    def parent_id(self, parent_id: str) -> LocationUpdateBuilder: ...
    def names(self, names: list[I18n]) -> LocationUpdateBuilder: ...
    def active(self, active: bool) -> LocationUpdateBuilder: ...
    def effective_time(self, effective_time: str) -> LocationUpdateBuilder: ...
    def code(self, code: str) -> LocationUpdateBuilder: ...
    def descriptions(self, descriptions: list[I18n]) -> LocationUpdateBuilder: ...
    def location_usages(self, location_usages: list[Enum]) -> LocationUpdateBuilder: ...
    def working_hours_type_id(self, working_hours_type_id: str) -> LocationUpdateBuilder: ...
    def locale(self, locale: Enum) -> LocationUpdateBuilder: ...
    def time_zone_id(self, time_zone_id: str) -> LocationUpdateBuilder: ...
    def display_language_id(self, display_language_id: str) -> LocationUpdateBuilder: ...
    def build(self) -> LocationUpdate: ...
