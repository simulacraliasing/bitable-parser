from .address_for_update import AddressForUpdate as AddressForUpdate
from .file import File as File
from .national_id_for_update import NationalIdForUpdate as NationalIdForUpdate
from .object_field_data import ObjectFieldData as ObjectFieldData
from .phone_for_update import PhoneForUpdate as PhoneForUpdate
from lark_oapi.core.construct import init as init

class DependentForUpdate:
    relationship: str | None
    gender: str | None
    date_of_birth: str | None
    national_ids: list[NationalIdForUpdate] | None
    spouses_working_status: str | None
    is_this_person_covered_by_health_insurance: bool | None
    is_this_person_allowed_for_tax_deduction: bool | None
    dependent_name: str | None
    employer: str | None
    job: str | None
    phone: PhoneForUpdate | None
    address: AddressForUpdate | None
    birth_certificate_of_children: list[File] | None
    custom_fields: list[ObjectFieldData] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> DependentForUpdateBuilder: ...

class DependentForUpdateBuilder:
    def __init__(self) -> None: ...
    def relationship(self, relationship: str) -> DependentForUpdateBuilder: ...
    def gender(self, gender: str) -> DependentForUpdateBuilder: ...
    def date_of_birth(self, date_of_birth: str) -> DependentForUpdateBuilder: ...
    def national_ids(self, national_ids: list[NationalIdForUpdate]) -> DependentForUpdateBuilder: ...
    def spouses_working_status(self, spouses_working_status: str) -> DependentForUpdateBuilder: ...
    def is_this_person_covered_by_health_insurance(self, is_this_person_covered_by_health_insurance: bool) -> DependentForUpdateBuilder: ...
    def is_this_person_allowed_for_tax_deduction(self, is_this_person_allowed_for_tax_deduction: bool) -> DependentForUpdateBuilder: ...
    def dependent_name(self, dependent_name: str) -> DependentForUpdateBuilder: ...
    def employer(self, employer: str) -> DependentForUpdateBuilder: ...
    def job(self, job: str) -> DependentForUpdateBuilder: ...
    def phone(self, phone: PhoneForUpdate) -> DependentForUpdateBuilder: ...
    def address(self, address: AddressForUpdate) -> DependentForUpdateBuilder: ...
    def birth_certificate_of_children(self, birth_certificate_of_children: list[File]) -> DependentForUpdateBuilder: ...
    def custom_fields(self, custom_fields: list[ObjectFieldData]) -> DependentForUpdateBuilder: ...
    def build(self) -> DependentForUpdate: ...
