from .i18n import I18n as I18n
from lark_oapi.core.construct import init as init

class JobFamilyVersionData:
    job_family_id: str | None
    job_family_version_id: str | None
    job_family_names: list[I18n] | None
    effective_date: str | None
    expiration_date: str | None
    active: bool | None
    descriptions: list[I18n] | None
    selectable: bool | None
    parent_job_family_id: str | None
    pathway_ids: list[str] | None
    code: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> JobFamilyVersionDataBuilder: ...

class JobFamilyVersionDataBuilder:
    def __init__(self) -> None: ...
    def job_family_id(self, job_family_id: str) -> JobFamilyVersionDataBuilder: ...
    def job_family_version_id(self, job_family_version_id: str) -> JobFamilyVersionDataBuilder: ...
    def job_family_names(self, job_family_names: list[I18n]) -> JobFamilyVersionDataBuilder: ...
    def effective_date(self, effective_date: str) -> JobFamilyVersionDataBuilder: ...
    def expiration_date(self, expiration_date: str) -> JobFamilyVersionDataBuilder: ...
    def active(self, active: bool) -> JobFamilyVersionDataBuilder: ...
    def descriptions(self, descriptions: list[I18n]) -> JobFamilyVersionDataBuilder: ...
    def selectable(self, selectable: bool) -> JobFamilyVersionDataBuilder: ...
    def parent_job_family_id(self, parent_job_family_id: str) -> JobFamilyVersionDataBuilder: ...
    def pathway_ids(self, pathway_ids: list[str]) -> JobFamilyVersionDataBuilder: ...
    def code(self, code: str) -> JobFamilyVersionDataBuilder: ...
    def build(self) -> JobFamilyVersionData: ...
