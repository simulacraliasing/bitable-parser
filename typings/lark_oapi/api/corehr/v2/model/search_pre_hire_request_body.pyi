from lark_oapi.core.construct import init as init

class SearchPreHireRequestBody:
    worker_ids: list[str] | None
    pre_hire_ids: list[str] | None
    person_ids: list[str] | None
    onboarding_date_start: str | None
    onboarding_date_end: str | None
    updated_date_start: str | None
    updated_date_end: str | None
    onboarding_location_ids: list[str] | None
    onboarding_status: str | None
    department_ids: list[str] | None
    direct_manager_ids: list[str] | None
    employee_type_ids: list[str] | None
    employee_subtype_ids: list[str] | None
    job_family_ids: list[str] | None
    key_word: str | None
    condition_worker: bool | None
    rehire: str | None
    fields: list[str] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> SearchPreHireRequestBodyBuilder: ...

class SearchPreHireRequestBodyBuilder:
    def __init__(self) -> None: ...
    def worker_ids(self, worker_ids: list[str]) -> SearchPreHireRequestBodyBuilder: ...
    def pre_hire_ids(self, pre_hire_ids: list[str]) -> SearchPreHireRequestBodyBuilder: ...
    def person_ids(self, person_ids: list[str]) -> SearchPreHireRequestBodyBuilder: ...
    def onboarding_date_start(self, onboarding_date_start: str) -> SearchPreHireRequestBodyBuilder: ...
    def onboarding_date_end(self, onboarding_date_end: str) -> SearchPreHireRequestBodyBuilder: ...
    def updated_date_start(self, updated_date_start: str) -> SearchPreHireRequestBodyBuilder: ...
    def updated_date_end(self, updated_date_end: str) -> SearchPreHireRequestBodyBuilder: ...
    def onboarding_location_ids(self, onboarding_location_ids: list[str]) -> SearchPreHireRequestBodyBuilder: ...
    def onboarding_status(self, onboarding_status: str) -> SearchPreHireRequestBodyBuilder: ...
    def department_ids(self, department_ids: list[str]) -> SearchPreHireRequestBodyBuilder: ...
    def direct_manager_ids(self, direct_manager_ids: list[str]) -> SearchPreHireRequestBodyBuilder: ...
    def employee_type_ids(self, employee_type_ids: list[str]) -> SearchPreHireRequestBodyBuilder: ...
    def employee_subtype_ids(self, employee_subtype_ids: list[str]) -> SearchPreHireRequestBodyBuilder: ...
    def job_family_ids(self, job_family_ids: list[str]) -> SearchPreHireRequestBodyBuilder: ...
    def key_word(self, key_word: str) -> SearchPreHireRequestBodyBuilder: ...
    def condition_worker(self, condition_worker: bool) -> SearchPreHireRequestBodyBuilder: ...
    def rehire(self, rehire: str) -> SearchPreHireRequestBodyBuilder: ...
    def fields(self, fields: list[str]) -> SearchPreHireRequestBodyBuilder: ...
    def build(self) -> SearchPreHireRequestBody: ...
