from .address import Address as Address
from .custom_field_data import CustomFieldData as CustomFieldData
from .enum import Enum as Enum
from .i18n import I18n as I18n
from lark_oapi.core.construct import init as init

class LocationV2:
    location_id: str | None
    parent_location_id: str | None
    names: list[I18n] | None
    code: str | None
    active: bool | None
    location_usages: list[Enum] | None
    addresses: list[Address] | None
    working_hours_type_id: str | None
    effective_time: str | None
    expiration_time: str | None
    custom_fields: list[CustomFieldData] | None
    locale: Enum | None
    time_zone_id: str | None
    display_language_id: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> LocationV2Builder: ...

class LocationV2Builder:
    def __init__(self) -> None: ...
    def location_id(self, location_id: str) -> LocationV2Builder: ...
    def parent_location_id(self, parent_location_id: str) -> LocationV2Builder: ...
    def names(self, names: list[I18n]) -> LocationV2Builder: ...
    def code(self, code: str) -> LocationV2Builder: ...
    def active(self, active: bool) -> LocationV2Builder: ...
    def location_usages(self, location_usages: list[Enum]) -> LocationV2Builder: ...
    def addresses(self, addresses: list[Address]) -> LocationV2Builder: ...
    def working_hours_type_id(self, working_hours_type_id: str) -> LocationV2Builder: ...
    def effective_time(self, effective_time: str) -> LocationV2Builder: ...
    def expiration_time(self, expiration_time: str) -> LocationV2Builder: ...
    def custom_fields(self, custom_fields: list[CustomFieldData]) -> LocationV2Builder: ...
    def locale(self, locale: Enum) -> LocationV2Builder: ...
    def time_zone_id(self, time_zone_id: str) -> LocationV2Builder: ...
    def display_language_id(self, display_language_id: str) -> LocationV2Builder: ...
    def build(self) -> LocationV2: ...
