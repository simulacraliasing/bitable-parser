from lark_oapi.core.construct import init as init

class BatchGetEmployeesJobDataRequestBody:
    employment_ids: list[str] | None
    get_all_version: bool | None
    effective_date_start: str | None
    effective_date_end: str | None
    data_date: str | None
    primary_job_data: bool | None
    assignment_start_reasons: list[str] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> BatchGetEmployeesJobDataRequestBodyBuilder: ...

class BatchGetEmployeesJobDataRequestBodyBuilder:
    def __init__(self) -> None: ...
    def employment_ids(self, employment_ids: list[str]) -> BatchGetEmployeesJobDataRequestBodyBuilder: ...
    def get_all_version(self, get_all_version: bool) -> BatchGetEmployeesJobDataRequestBodyBuilder: ...
    def effective_date_start(self, effective_date_start: str) -> BatchGetEmployeesJobDataRequestBodyBuilder: ...
    def effective_date_end(self, effective_date_end: str) -> BatchGetEmployeesJobDataRequestBodyBuilder: ...
    def data_date(self, data_date: str) -> BatchGetEmployeesJobDataRequestBodyBuilder: ...
    def primary_job_data(self, primary_job_data: bool) -> BatchGetEmployeesJobDataRequestBodyBuilder: ...
    def assignment_start_reasons(self, assignment_start_reasons: list[str]) -> BatchGetEmployeesJobDataRequestBodyBuilder: ...
    def build(self) -> BatchGetEmployeesJobDataRequestBody: ...
