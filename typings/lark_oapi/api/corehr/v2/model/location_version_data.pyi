from .enum import Enum as Enum
from .i18n import I18n as I18n
from lark_oapi.core.construct import init as init

class LocationVersionData:
    location_id: str | None
    location_version_id: str | None
    location_names: list[I18n] | None
    parent_location_id: str | None
    effective_date: str | None
    expiration_date: str | None
    active: bool | None
    descriptions: list[I18n] | None
    code: str | None
    location_usages: list[Enum] | None
    locale: Enum | None
    time_zone_id: str | None
    display_language_id: str | None
    working_hours_type_id: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> LocationVersionDataBuilder: ...

class LocationVersionDataBuilder:
    def __init__(self) -> None: ...
    def location_id(self, location_id: str) -> LocationVersionDataBuilder: ...
    def location_version_id(self, location_version_id: str) -> LocationVersionDataBuilder: ...
    def location_names(self, location_names: list[I18n]) -> LocationVersionDataBuilder: ...
    def parent_location_id(self, parent_location_id: str) -> LocationVersionDataBuilder: ...
    def effective_date(self, effective_date: str) -> LocationVersionDataBuilder: ...
    def expiration_date(self, expiration_date: str) -> LocationVersionDataBuilder: ...
    def active(self, active: bool) -> LocationVersionDataBuilder: ...
    def descriptions(self, descriptions: list[I18n]) -> LocationVersionDataBuilder: ...
    def code(self, code: str) -> LocationVersionDataBuilder: ...
    def location_usages(self, location_usages: list[Enum]) -> LocationVersionDataBuilder: ...
    def locale(self, locale: Enum) -> LocationVersionDataBuilder: ...
    def time_zone_id(self, time_zone_id: str) -> LocationVersionDataBuilder: ...
    def display_language_id(self, display_language_id: str) -> LocationVersionDataBuilder: ...
    def working_hours_type_id(self, working_hours_type_id: str) -> LocationVersionDataBuilder: ...
    def build(self) -> LocationVersionData: ...
