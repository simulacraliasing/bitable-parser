from .signature_enum_info_label import SignatureEnumInfoLabel as SignatureEnumInfoLabel
from .signature_user_info import SignatureUserInfo as SignatureUserInfo
from lark_oapi.core.construct import init as init

class SignatureNode:
    user_infos: list[SignatureUserInfo] | None
    state: str | None
    finish_time: str | None
    updated_time: str | None
    is_ongoing: bool | None
    role_label: SignatureEnumInfoLabel | None
    sign_role: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> SignatureNodeBuilder: ...

class SignatureNodeBuilder:
    def __init__(self) -> None: ...
    def user_infos(self, user_infos: list[SignatureUserInfo]) -> SignatureNodeBuilder: ...
    def state(self, state: str) -> SignatureNodeBuilder: ...
    def finish_time(self, finish_time: str) -> SignatureNodeBuilder: ...
    def updated_time(self, updated_time: str) -> SignatureNodeBuilder: ...
    def is_ongoing(self, is_ongoing: bool) -> SignatureNodeBuilder: ...
    def role_label(self, role_label: SignatureEnumInfoLabel) -> SignatureNodeBuilder: ...
    def sign_role(self, sign_role: str) -> SignatureNodeBuilder: ...
    def build(self) -> SignatureNode: ...
