from .address import Address as Address
from .custom_field_data import CustomFieldData as CustomFieldData
from .enum import Enum as Enum
from .hiberarchy_common import HiberarchyCommon as HiberarchyCommon
from lark_oapi.core.construct import init as init

class Location:
    location_id: str | None
    hiberarchy_common: HiberarchyCommon | None
    location_usage_list: list[Enum] | None
    address: list[Address] | None
    working_hours_type_id: str | None
    effective_time: str | None
    expiration_time: str | None
    custom_fields: list[CustomFieldData] | None
    locale: Enum | None
    time_zone_id: str | None
    display_language_id: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> LocationBuilder: ...

class LocationBuilder:
    def __init__(self) -> None: ...
    def location_id(self, location_id: str) -> LocationBuilder: ...
    def hiberarchy_common(self, hiberarchy_common: HiberarchyCommon) -> LocationBuilder: ...
    def location_usage_list(self, location_usage_list: list[Enum]) -> LocationBuilder: ...
    def address(self, address: list[Address]) -> LocationBuilder: ...
    def working_hours_type_id(self, working_hours_type_id: str) -> LocationBuilder: ...
    def effective_time(self, effective_time: str) -> LocationBuilder: ...
    def expiration_time(self, expiration_time: str) -> LocationBuilder: ...
    def custom_fields(self, custom_fields: list[CustomFieldData]) -> LocationBuilder: ...
    def locale(self, locale: Enum) -> LocationBuilder: ...
    def time_zone_id(self, time_zone_id: str) -> LocationBuilder: ...
    def display_language_id(self, display_language_id: str) -> LocationBuilder: ...
    def build(self) -> Location: ...
