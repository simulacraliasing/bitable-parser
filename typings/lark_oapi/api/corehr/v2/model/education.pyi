from .custom_field_data import CustomFieldData as CustomFieldData
from .enum import Enum as Enum
from .i18n import I18n as I18n
from lark_oapi.core.construct import init as init

class Education:
    school: list[I18n] | None
    level_of_education: Enum | None
    start_date: str | None
    end_date: str | None
    field_of_study: list[I18n] | None
    degree: Enum | None
    school_name: Enum | None
    field_of_study_name: Enum | None
    country_region_id: str | None
    expected_end_date: str | None
    custom_fields: list[CustomFieldData] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> EducationBuilder: ...

class EducationBuilder:
    def __init__(self) -> None: ...
    def school(self, school: list[I18n]) -> EducationBuilder: ...
    def level_of_education(self, level_of_education: Enum) -> EducationBuilder: ...
    def start_date(self, start_date: str) -> EducationBuilder: ...
    def end_date(self, end_date: str) -> EducationBuilder: ...
    def field_of_study(self, field_of_study: list[I18n]) -> EducationBuilder: ...
    def degree(self, degree: Enum) -> EducationBuilder: ...
    def school_name(self, school_name: Enum) -> EducationBuilder: ...
    def field_of_study_name(self, field_of_study_name: Enum) -> EducationBuilder: ...
    def country_region_id(self, country_region_id: str) -> EducationBuilder: ...
    def expected_end_date(self, expected_end_date: str) -> EducationBuilder: ...
    def custom_fields(self, custom_fields: list[CustomFieldData]) -> EducationBuilder: ...
    def build(self) -> Education: ...
