from .address import Address as Address
from .company_version_data import CompanyVersionData as CompanyVersionData
from .currency import Currency as Currency
from .enum import Enum as Enum
from .i18n import I18n as I18n
from .phone_number_and_area_code import PhoneNumberAndAreaCode as PhoneNumberAndAreaCode
from lark_oapi.core.construct import init as init

class CompanyTimeline:
    company_version_data: list[CompanyVersionData] | None
    type: Enum | None
    industry_list: list[Enum] | None
    legal_representative: list[I18n] | None
    post_code: str | None
    tax_payer_id: str | None
    confidential: bool | None
    sub_type_list: list[Enum] | None
    branch_company: bool | None
    primary_manager: list[I18n] | None
    currency: Currency | None
    phone: PhoneNumberAndAreaCode | None
    fax: PhoneNumberAndAreaCode | None
    registered_office_address: list[I18n] | None
    office_address: list[I18n] | None
    registered_office_address_info: Address | None
    office_address_info: Address | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> CompanyTimelineBuilder: ...

class CompanyTimelineBuilder:
    def __init__(self) -> None: ...
    def company_version_data(self, company_version_data: list[CompanyVersionData]) -> CompanyTimelineBuilder: ...
    def type(self, type: Enum) -> CompanyTimelineBuilder: ...
    def industry_list(self, industry_list: list[Enum]) -> CompanyTimelineBuilder: ...
    def legal_representative(self, legal_representative: list[I18n]) -> CompanyTimelineBuilder: ...
    def post_code(self, post_code: str) -> CompanyTimelineBuilder: ...
    def tax_payer_id(self, tax_payer_id: str) -> CompanyTimelineBuilder: ...
    def confidential(self, confidential: bool) -> CompanyTimelineBuilder: ...
    def sub_type_list(self, sub_type_list: list[Enum]) -> CompanyTimelineBuilder: ...
    def branch_company(self, branch_company: bool) -> CompanyTimelineBuilder: ...
    def primary_manager(self, primary_manager: list[I18n]) -> CompanyTimelineBuilder: ...
    def currency(self, currency: Currency) -> CompanyTimelineBuilder: ...
    def phone(self, phone: PhoneNumberAndAreaCode) -> CompanyTimelineBuilder: ...
    def fax(self, fax: PhoneNumberAndAreaCode) -> CompanyTimelineBuilder: ...
    def registered_office_address(self, registered_office_address: list[I18n]) -> CompanyTimelineBuilder: ...
    def office_address(self, office_address: list[I18n]) -> CompanyTimelineBuilder: ...
    def registered_office_address_info(self, registered_office_address_info: Address) -> CompanyTimelineBuilder: ...
    def office_address_info(self, office_address_info: Address) -> CompanyTimelineBuilder: ...
    def build(self) -> CompanyTimeline: ...
