from .basic_department import BasicDepartment as BasicDepartment
from .basic_employee import BasicEmployee as BasicEmployee
from .custom_field_data import CustomFieldData as CustomFieldData
from .employee_job_family import EmployeeJobFamily as EmployeeJobFamily
from .employee_job_level import EmployeeJobLevel as EmployeeJobLevel
from .employee_pathway import EmployeePathway as EmployeePathway
from .employment_bp import EmploymentBp as EmploymentBp
from .enum import Enum as Enum
from .international_assignment import InternationalAssignment as InternationalAssignment
from .job import Job as Job
from .job_data_cost_center import JobDataCostCenter as JobDataCostCenter
from .person_info import PersonInfo as PersonInfo
from .position import Position as Position
from .seniority_adjust_information import SeniorityAdjustInformation as SeniorityAdjustInformation
from .work_email import WorkEmail as WorkEmail
from lark_oapi.core.construct import init as init

class Employee:
    employment_id: str | None
    employment_id_v2: str | None
    ats_application_id: str | None
    prehire_id: str | None
    employee_number: str | None
    employee_type_id: str | None
    employee_subtype_id: str | None
    department_id: str | None
    department_id_v2: str | None
    job_level_id: str | None
    job_level: EmployeeJobLevel | None
    pathway_id: str | None
    pathway: EmployeePathway | None
    job_grade_id: str | None
    work_location_id: str | None
    job_family_id: str | None
    job_family: EmployeeJobFamily | None
    position_id: str | None
    position: Position | None
    job_id: str | None
    job: Job | None
    company_id: str | None
    working_hours_type_id: str | None
    tenure: str | None
    seniority_date: str | None
    effective_date: str | None
    primary_employment: bool | None
    probation_period: int | None
    on_probation: bool | None
    probation_end_date: str | None
    direct_manager_id: str | None
    dotted_line_manager_id: str | None
    direct_manager_id_v2: str | None
    dotted_line_manager_id_v2: str | None
    employment_type: Enum | None
    employment_status: Enum | None
    expiration_date: str | None
    reason_for_offboarding: Enum | None
    email_address: str | None
    user_name: str | None
    work_email_list: list[WorkEmail] | None
    cost_center_list: list[JobDataCostCenter] | None
    rehire: Enum | None
    rehire_employment_id: str | None
    person_info: PersonInfo | None
    custom_fields: list[CustomFieldData] | None
    noncompete_status: Enum | None
    past_offboarding: bool | None
    regular_employee_start_date: str | None
    external_id: str | None
    times_employed: int | None
    recruitment_type: Enum | None
    avatar_url: str | None
    primary_contract_id: str | None
    contract_start_date: str | None
    contract_end_date: str | None
    contract_expected_end_date: str | None
    pay_group_id: str | None
    assignment_pay_group_id: str | None
    international_assignment: bool | None
    work_calendar_id: str | None
    department: BasicDepartment | None
    direct_manager: BasicEmployee | None
    dotted_line_manager: BasicEmployee | None
    time_zone: str | None
    primary_international_assignment: InternationalAssignment | None
    service_company: str | None
    compensation_type: Enum | None
    work_shift: Enum | None
    talent_pool_id_list: list[str] | None
    custom_org: str | None
    seniority_adjust_information_list: list[SeniorityAdjustInformation] | None
    employment_direct_bps: EmploymentBp | None
    employment_all_bps: EmploymentBp | None
    contract_type: Enum | None
    archive_cpst_plan_id: str | None
    attendance_group_id: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> EmployeeBuilder: ...

class EmployeeBuilder:
    def __init__(self) -> None: ...
    def employment_id(self, employment_id: str) -> EmployeeBuilder: ...
    def employment_id_v2(self, employment_id_v2: str) -> EmployeeBuilder: ...
    def ats_application_id(self, ats_application_id: str) -> EmployeeBuilder: ...
    def prehire_id(self, prehire_id: str) -> EmployeeBuilder: ...
    def employee_number(self, employee_number: str) -> EmployeeBuilder: ...
    def employee_type_id(self, employee_type_id: str) -> EmployeeBuilder: ...
    def employee_subtype_id(self, employee_subtype_id: str) -> EmployeeBuilder: ...
    def department_id(self, department_id: str) -> EmployeeBuilder: ...
    def department_id_v2(self, department_id_v2: str) -> EmployeeBuilder: ...
    def job_level_id(self, job_level_id: str) -> EmployeeBuilder: ...
    def job_level(self, job_level: EmployeeJobLevel) -> EmployeeBuilder: ...
    def pathway_id(self, pathway_id: str) -> EmployeeBuilder: ...
    def pathway(self, pathway: EmployeePathway) -> EmployeeBuilder: ...
    def job_grade_id(self, job_grade_id: str) -> EmployeeBuilder: ...
    def work_location_id(self, work_location_id: str) -> EmployeeBuilder: ...
    def job_family_id(self, job_family_id: str) -> EmployeeBuilder: ...
    def job_family(self, job_family: EmployeeJobFamily) -> EmployeeBuilder: ...
    def position_id(self, position_id: str) -> EmployeeBuilder: ...
    def position(self, position: Position) -> EmployeeBuilder: ...
    def job_id(self, job_id: str) -> EmployeeBuilder: ...
    def job(self, job: Job) -> EmployeeBuilder: ...
    def company_id(self, company_id: str) -> EmployeeBuilder: ...
    def working_hours_type_id(self, working_hours_type_id: str) -> EmployeeBuilder: ...
    def tenure(self, tenure: str) -> EmployeeBuilder: ...
    def seniority_date(self, seniority_date: str) -> EmployeeBuilder: ...
    def effective_date(self, effective_date: str) -> EmployeeBuilder: ...
    def primary_employment(self, primary_employment: bool) -> EmployeeBuilder: ...
    def probation_period(self, probation_period: int) -> EmployeeBuilder: ...
    def on_probation(self, on_probation: bool) -> EmployeeBuilder: ...
    def probation_end_date(self, probation_end_date: str) -> EmployeeBuilder: ...
    def direct_manager_id(self, direct_manager_id: str) -> EmployeeBuilder: ...
    def dotted_line_manager_id(self, dotted_line_manager_id: str) -> EmployeeBuilder: ...
    def direct_manager_id_v2(self, direct_manager_id_v2: str) -> EmployeeBuilder: ...
    def dotted_line_manager_id_v2(self, dotted_line_manager_id_v2: str) -> EmployeeBuilder: ...
    def employment_type(self, employment_type: Enum) -> EmployeeBuilder: ...
    def employment_status(self, employment_status: Enum) -> EmployeeBuilder: ...
    def expiration_date(self, expiration_date: str) -> EmployeeBuilder: ...
    def reason_for_offboarding(self, reason_for_offboarding: Enum) -> EmployeeBuilder: ...
    def email_address(self, email_address: str) -> EmployeeBuilder: ...
    def user_name(self, user_name: str) -> EmployeeBuilder: ...
    def work_email_list(self, work_email_list: list[WorkEmail]) -> EmployeeBuilder: ...
    def cost_center_list(self, cost_center_list: list[JobDataCostCenter]) -> EmployeeBuilder: ...
    def rehire(self, rehire: Enum) -> EmployeeBuilder: ...
    def rehire_employment_id(self, rehire_employment_id: str) -> EmployeeBuilder: ...
    def person_info(self, person_info: PersonInfo) -> EmployeeBuilder: ...
    def custom_fields(self, custom_fields: list[CustomFieldData]) -> EmployeeBuilder: ...
    def noncompete_status(self, noncompete_status: Enum) -> EmployeeBuilder: ...
    def past_offboarding(self, past_offboarding: bool) -> EmployeeBuilder: ...
    def regular_employee_start_date(self, regular_employee_start_date: str) -> EmployeeBuilder: ...
    def external_id(self, external_id: str) -> EmployeeBuilder: ...
    def times_employed(self, times_employed: int) -> EmployeeBuilder: ...
    def recruitment_type(self, recruitment_type: Enum) -> EmployeeBuilder: ...
    def avatar_url(self, avatar_url: str) -> EmployeeBuilder: ...
    def primary_contract_id(self, primary_contract_id: str) -> EmployeeBuilder: ...
    def contract_start_date(self, contract_start_date: str) -> EmployeeBuilder: ...
    def contract_end_date(self, contract_end_date: str) -> EmployeeBuilder: ...
    def contract_expected_end_date(self, contract_expected_end_date: str) -> EmployeeBuilder: ...
    def pay_group_id(self, pay_group_id: str) -> EmployeeBuilder: ...
    def assignment_pay_group_id(self, assignment_pay_group_id: str) -> EmployeeBuilder: ...
    def international_assignment(self, international_assignment: bool) -> EmployeeBuilder: ...
    def work_calendar_id(self, work_calendar_id: str) -> EmployeeBuilder: ...
    def department(self, department: BasicDepartment) -> EmployeeBuilder: ...
    def direct_manager(self, direct_manager: BasicEmployee) -> EmployeeBuilder: ...
    def dotted_line_manager(self, dotted_line_manager: BasicEmployee) -> EmployeeBuilder: ...
    def time_zone(self, time_zone: str) -> EmployeeBuilder: ...
    def primary_international_assignment(self, primary_international_assignment: InternationalAssignment) -> EmployeeBuilder: ...
    def service_company(self, service_company: str) -> EmployeeBuilder: ...
    def compensation_type(self, compensation_type: Enum) -> EmployeeBuilder: ...
    def work_shift(self, work_shift: Enum) -> EmployeeBuilder: ...
    def talent_pool_id_list(self, talent_pool_id_list: list[str]) -> EmployeeBuilder: ...
    def custom_org(self, custom_org: str) -> EmployeeBuilder: ...
    def seniority_adjust_information_list(self, seniority_adjust_information_list: list[SeniorityAdjustInformation]) -> EmployeeBuilder: ...
    def employment_direct_bps(self, employment_direct_bps: EmploymentBp) -> EmployeeBuilder: ...
    def employment_all_bps(self, employment_all_bps: EmploymentBp) -> EmployeeBuilder: ...
    def contract_type(self, contract_type: Enum) -> EmployeeBuilder: ...
    def archive_cpst_plan_id(self, archive_cpst_plan_id: str) -> EmployeeBuilder: ...
    def attendance_group_id(self, attendance_group_id: str) -> EmployeeBuilder: ...
    def build(self) -> Employee: ...
