from .dataengine_i18n import DataengineI18n as DataengineI18n
from lark_oapi.core.construct import init as init

class BpmFlowInfo:
    flow_definition_id: str | None
    flow_definition_name: DataengineI18n | None
    description: DataengineI18n | None
    biz_type: str | None
    biz_type_name: DataengineI18n | None
    status: int | None
    creator_id: str | None
    creator_name: DataengineI18n | None
    create_time: str | None
    last_editor_id: str | None
    last_editor_name: DataengineI18n | None
    last_edit_time: str | None
    last_active_time: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> BpmFlowInfoBuilder: ...

class BpmFlowInfoBuilder:
    def __init__(self) -> None: ...
    def flow_definition_id(self, flow_definition_id: str) -> BpmFlowInfoBuilder: ...
    def flow_definition_name(self, flow_definition_name: DataengineI18n) -> BpmFlowInfoBuilder: ...
    def description(self, description: DataengineI18n) -> BpmFlowInfoBuilder: ...
    def biz_type(self, biz_type: str) -> BpmFlowInfoBuilder: ...
    def biz_type_name(self, biz_type_name: DataengineI18n) -> BpmFlowInfoBuilder: ...
    def status(self, status: int) -> BpmFlowInfoBuilder: ...
    def creator_id(self, creator_id: str) -> BpmFlowInfoBuilder: ...
    def creator_name(self, creator_name: DataengineI18n) -> BpmFlowInfoBuilder: ...
    def create_time(self, create_time: str) -> BpmFlowInfoBuilder: ...
    def last_editor_id(self, last_editor_id: str) -> BpmFlowInfoBuilder: ...
    def last_editor_name(self, last_editor_name: DataengineI18n) -> BpmFlowInfoBuilder: ...
    def last_edit_time(self, last_edit_time: str) -> BpmFlowInfoBuilder: ...
    def last_active_time(self, last_active_time: str) -> BpmFlowInfoBuilder: ...
    def build(self) -> BpmFlowInfo: ...
