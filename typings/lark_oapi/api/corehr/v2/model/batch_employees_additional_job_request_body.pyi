from .employees_additional_job_batch_req_date import EmployeesAdditionalJobBatchReqDate as EmployeesAdditionalJobBatchReqDate
from lark_oapi.core.construct import init as init

class BatchEmployeesAdditionalJobRequestBody:
    employment_ids: list[str] | None
    additional_job_ids: list[str] | None
    start_date: EmployeesAdditionalJobBatchReqDate | None
    end_date: EmployeesAdditionalJobBatchReqDate | None
    data_date: str | None
    is_effective: bool | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> BatchEmployeesAdditionalJobRequestBodyBuilder: ...

class BatchEmployeesAdditionalJobRequestBodyBuilder:
    def __init__(self) -> None: ...
    def employment_ids(self, employment_ids: list[str]) -> BatchEmployeesAdditionalJobRequestBodyBuilder: ...
    def additional_job_ids(self, additional_job_ids: list[str]) -> BatchEmployeesAdditionalJobRequestBodyBuilder: ...
    def start_date(self, start_date: EmployeesAdditionalJobBatchReqDate) -> BatchEmployeesAdditionalJobRequestBodyBuilder: ...
    def end_date(self, end_date: EmployeesAdditionalJobBatchReqDate) -> BatchEmployeesAdditionalJobRequestBodyBuilder: ...
    def data_date(self, data_date: str) -> BatchEmployeesAdditionalJobRequestBodyBuilder: ...
    def is_effective(self, is_effective: bool) -> BatchEmployeesAdditionalJobRequestBodyBuilder: ...
    def build(self) -> BatchEmployeesAdditionalJobRequestBody: ...
