from .enum import Enum as Enum
from lark_oapi.core.construct import init as init

class PersonName:
    local_primary: str | None
    local_first_name: str | None
    country_region_id: str | None
    name_type: Enum | None
    local_first_name_2: str | None
    local_primary_2: str | None
    additional_name: str | None
    additional_name_type: Enum | None
    first_name: str | None
    full_name: str | None
    hereditary: str | None
    custom_name: str | None
    custom_local_name: str | None
    middle_name: str | None
    name_primary: str | None
    secondary: str | None
    tertiary: str | None
    social: Enum | None
    title: Enum | None
    local_middle_name: str | None
    local_secondary: str | None
    display_name_local_and_western_script: str | None
    display_name_local_script: str | None
    display_name_western_script: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> PersonNameBuilder: ...

class PersonNameBuilder:
    def __init__(self) -> None: ...
    def local_primary(self, local_primary: str) -> PersonNameBuilder: ...
    def local_first_name(self, local_first_name: str) -> PersonNameBuilder: ...
    def country_region_id(self, country_region_id: str) -> PersonNameBuilder: ...
    def name_type(self, name_type: Enum) -> PersonNameBuilder: ...
    def local_first_name_2(self, local_first_name_2: str) -> PersonNameBuilder: ...
    def local_primary_2(self, local_primary_2: str) -> PersonNameBuilder: ...
    def additional_name(self, additional_name: str) -> PersonNameBuilder: ...
    def additional_name_type(self, additional_name_type: Enum) -> PersonNameBuilder: ...
    def first_name(self, first_name: str) -> PersonNameBuilder: ...
    def full_name(self, full_name: str) -> PersonNameBuilder: ...
    def hereditary(self, hereditary: str) -> PersonNameBuilder: ...
    def custom_name(self, custom_name: str) -> PersonNameBuilder: ...
    def custom_local_name(self, custom_local_name: str) -> PersonNameBuilder: ...
    def middle_name(self, middle_name: str) -> PersonNameBuilder: ...
    def name_primary(self, name_primary: str) -> PersonNameBuilder: ...
    def secondary(self, secondary: str) -> PersonNameBuilder: ...
    def tertiary(self, tertiary: str) -> PersonNameBuilder: ...
    def social(self, social: Enum) -> PersonNameBuilder: ...
    def title(self, title: Enum) -> PersonNameBuilder: ...
    def local_middle_name(self, local_middle_name: str) -> PersonNameBuilder: ...
    def local_secondary(self, local_secondary: str) -> PersonNameBuilder: ...
    def display_name_local_and_western_script(self, display_name_local_and_western_script: str) -> PersonNameBuilder: ...
    def display_name_local_script(self, display_name_local_script: str) -> PersonNameBuilder: ...
    def display_name_western_script(self, display_name_western_script: str) -> PersonNameBuilder: ...
    def build(self) -> PersonName: ...
