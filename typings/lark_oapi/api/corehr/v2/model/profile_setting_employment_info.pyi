from .cost_allocation import CostAllocation as CostAllocation
from .default_cost_center_record import DefaultCostCenterRecord as DefaultCostCenterRecord
from .job_data_custom_org import JobDataCustomOrg as JobDataCustomOrg
from .profile_setting_custom_group import ProfileSettingCustomGroup as ProfileSettingCustomGroup
from .profile_setting_emp_contract_record import ProfileSettingEmpContractRecord as ProfileSettingEmpContractRecord
from .profile_setting_employment_basic_info import ProfileSettingEmploymentBasicInfo as ProfileSettingEmploymentBasicInfo
from .profile_setting_employment_record import ProfileSettingEmploymentRecord as ProfileSettingEmploymentRecord
from .profile_setting_probation_info import ProfileSettingProbationInfo as ProfileSettingProbationInfo
from .seniority_adjust_information_edit import SeniorityAdjustInformationEdit as SeniorityAdjustInformationEdit
from lark_oapi.core.construct import init as init

class ProfileSettingEmploymentInfo:
    basic_info: ProfileSettingEmploymentBasicInfo | None
    probation_info: ProfileSettingProbationInfo | None
    employment_record: ProfileSettingEmploymentRecord | None
    emp_contract_record: ProfileSettingEmpContractRecord | None
    custom_groups: list[ProfileSettingCustomGroup] | None
    custom_org_groups: list[JobDataCustomOrg] | None
    seniority_adjust_informations: list[SeniorityAdjustInformationEdit] | None
    default_cost_center: DefaultCostCenterRecord | None
    cost_allocation: CostAllocation | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ProfileSettingEmploymentInfoBuilder: ...

class ProfileSettingEmploymentInfoBuilder:
    def __init__(self) -> None: ...
    def basic_info(self, basic_info: ProfileSettingEmploymentBasicInfo) -> ProfileSettingEmploymentInfoBuilder: ...
    def probation_info(self, probation_info: ProfileSettingProbationInfo) -> ProfileSettingEmploymentInfoBuilder: ...
    def employment_record(self, employment_record: ProfileSettingEmploymentRecord) -> ProfileSettingEmploymentInfoBuilder: ...
    def emp_contract_record(self, emp_contract_record: ProfileSettingEmpContractRecord) -> ProfileSettingEmploymentInfoBuilder: ...
    def custom_groups(self, custom_groups: list[ProfileSettingCustomGroup]) -> ProfileSettingEmploymentInfoBuilder: ...
    def custom_org_groups(self, custom_org_groups: list[JobDataCustomOrg]) -> ProfileSettingEmploymentInfoBuilder: ...
    def seniority_adjust_informations(self, seniority_adjust_informations: list[SeniorityAdjustInformationEdit]) -> ProfileSettingEmploymentInfoBuilder: ...
    def default_cost_center(self, default_cost_center: DefaultCostCenterRecord) -> ProfileSettingEmploymentInfoBuilder: ...
    def cost_allocation(self, cost_allocation: CostAllocation) -> ProfileSettingEmploymentInfoBuilder: ...
    def build(self) -> ProfileSettingEmploymentInfo: ...
