from ..model.create_job_grade_request import CreateJobGradeRequest as CreateJobGradeRequest
from ..model.create_job_grade_response import CreateJobGradeResponse as CreateJobGradeResponse
from ..model.delete_job_grade_request import DeleteJobGradeRequest as DeleteJobGradeRequest
from ..model.delete_job_grade_response import DeleteJobGradeResponse as DeleteJobGradeResponse
from ..model.patch_job_grade_request import PatchJobGradeRequest as PatchJobGradeRequest
from ..model.patch_job_grade_response import PatchJobGradeResponse as PatchJobGradeResponse
from ..model.query_job_grade_request import QueryJobGradeRequest as QueryJobGradeRequest
from ..model.query_job_grade_response import QueryJobGradeResponse as QueryJobGradeResponse
from ..model.query_recent_change_job_grade_request import QueryRecentChangeJobGradeRequest as QueryRecentChangeJobGradeRequest
from ..model.query_recent_change_job_grade_response import QueryRecentChangeJobGradeResponse as QueryRecentChangeJobGradeResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class JobGrade:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateJobGradeRequest, option: RequestOption | None = None) -> CreateJobGradeResponse: ...
    async def acreate(self, request: CreateJobGradeRequest, option: RequestOption | None = None) -> CreateJobGradeResponse: ...
    def delete(self, request: DeleteJobGradeRequest, option: RequestOption | None = None) -> DeleteJobGradeResponse: ...
    async def adelete(self, request: DeleteJobGradeRequest, option: RequestOption | None = None) -> DeleteJobGradeResponse: ...
    def patch(self, request: PatchJobGradeRequest, option: RequestOption | None = None) -> PatchJobGradeResponse: ...
    async def apatch(self, request: PatchJobGradeRequest, option: RequestOption | None = None) -> PatchJobGradeResponse: ...
    def query(self, request: QueryJobGradeRequest, option: RequestOption | None = None) -> QueryJobGradeResponse: ...
    async def aquery(self, request: QueryJobGradeRequest, option: RequestOption | None = None) -> QueryJobGradeResponse: ...
    def query_recent_change(self, request: QueryRecentChangeJobGradeRequest, option: RequestOption | None = None) -> QueryRecentChangeJobGradeResponse: ...
    async def aquery_recent_change(self, request: QueryRecentChangeJobGradeRequest, option: RequestOption | None = None) -> QueryRecentChangeJobGradeResponse: ...
