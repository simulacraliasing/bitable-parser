from ..model.active_location_request import ActiveLocationRequest as ActiveLocationRequest
from ..model.active_location_response import ActiveLocationResponse as ActiveLocationResponse
from ..model.batch_get_location_request import BatchGetLocationRequest as BatchGetLocationRequest
from ..model.batch_get_location_response import BatchGetLocationResponse as BatchGetLocationResponse
from ..model.patch_location_request import PatchLocationRequest as PatchLocationRequest
from ..model.patch_location_response import PatchLocationResponse as PatchLocationResponse
from ..model.query_recent_change_location_request import QueryRecentChangeLocationRequest as QueryRecentChangeLocationRequest
from ..model.query_recent_change_location_response import QueryRecentChangeLocationResponse as QueryRecentChangeLocationResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Location:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def active(self, request: ActiveLocationRequest, option: RequestOption | None = None) -> ActiveLocationResponse: ...
    async def aactive(self, request: ActiveLocationRequest, option: RequestOption | None = None) -> ActiveLocationResponse: ...
    def batch_get(self, request: BatchGetLocationRequest, option: RequestOption | None = None) -> BatchGetLocationResponse: ...
    async def abatch_get(self, request: BatchGetLocationRequest, option: RequestOption | None = None) -> BatchGetLocationResponse: ...
    def patch(self, request: PatchLocationRequest, option: RequestOption | None = None) -> PatchLocationResponse: ...
    async def apatch(self, request: PatchLocationRequest, option: RequestOption | None = None) -> PatchLocationResponse: ...
    def query_recent_change(self, request: QueryRecentChangeLocationRequest, option: RequestOption | None = None) -> QueryRecentChangeLocationResponse: ...
    async def aquery_recent_change(self, request: QueryRecentChangeLocationRequest, option: RequestOption | None = None) -> QueryRecentChangeLocationResponse: ...
