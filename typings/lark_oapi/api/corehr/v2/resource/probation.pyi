from ..model.enable_disable_assessment_probation_request import EnableDisableAssessmentProbationRequest as EnableDisableAssessmentProbationRequest
from ..model.enable_disable_assessment_probation_response import EnableDisableAssessmentProbationResponse as EnableDisableAssessmentProbationResponse
from ..model.search_probation_request import SearchProbationRequest as SearchProbationRequest
from ..model.search_probation_response import SearchProbationResponse as SearchProbationResponse
from ..model.submit_probation_request import SubmitProbationRequest as SubmitProbationRequest
from ..model.submit_probation_response import SubmitProbationResponse as SubmitProbationResponse
from ..model.withdraw_probation_request import WithdrawProbationRequest as WithdrawProbationRequest
from ..model.withdraw_probation_response import WithdrawProbationResponse as WithdrawProbationResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Probation:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def enable_disable_assessment(self, request: EnableDisableAssessmentProbationRequest, option: RequestOption | None = None) -> EnableDisableAssessmentProbationResponse: ...
    async def aenable_disable_assessment(self, request: EnableDisableAssessmentProbationRequest, option: RequestOption | None = None) -> EnableDisableAssessmentProbationResponse: ...
    def search(self, request: SearchProbationRequest, option: RequestOption | None = None) -> SearchProbationResponse: ...
    async def asearch(self, request: SearchProbationRequest, option: RequestOption | None = None) -> SearchProbationResponse: ...
    def submit(self, request: SubmitProbationRequest, option: RequestOption | None = None) -> SubmitProbationResponse: ...
    async def asubmit(self, request: SubmitProbationRequest, option: RequestOption | None = None) -> SubmitProbationResponse: ...
    def withdraw(self, request: WithdrawProbationRequest, option: RequestOption | None = None) -> WithdrawProbationResponse: ...
    async def awithdraw(self, request: WithdrawProbationRequest, option: RequestOption | None = None) -> WithdrawProbationResponse: ...
