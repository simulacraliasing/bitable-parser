from .model.p2_payroll_payment_activity_approved_v1 import P2PayrollPaymentActivityApprovedV1 as P2PayrollPaymentActivityApprovedV1
from .model.p2_payroll_payment_activity_status_changed_v1 import P2PayrollPaymentActivityStatusChangedV1 as P2PayrollPaymentActivityStatusChangedV1
from _typeshed import Incomplete
from lark_oapi.event.processor import IEventProcessor as IEventProcessor
from typing import Callable

class P2PayrollPaymentActivityApprovedV1Processor(IEventProcessor[P2PayrollPaymentActivityApprovedV1]):
    f: Incomplete
    def __init__(self, f: Callable[[P2PayrollPaymentActivityApprovedV1], None]) -> None: ...
    def type(self) -> type[P2PayrollPaymentActivityApprovedV1]: ...
    def do(self, data: P2PayrollPaymentActivityApprovedV1) -> None: ...

class P2PayrollPaymentActivityStatusChangedV1Processor(IEventProcessor[P2PayrollPaymentActivityStatusChangedV1]):
    f: Incomplete
    def __init__(self, f: Callable[[P2PayrollPaymentActivityStatusChangedV1], None]) -> None: ...
    def type(self) -> type[P2PayrollPaymentActivityStatusChangedV1]: ...
    def do(self, data: P2PayrollPaymentActivityStatusChangedV1) -> None: ...
