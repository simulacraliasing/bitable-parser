from .id_with_name import IdWithName as IdWithName
from .verif_act_item_value import VerifActItemValue as VerifActItemValue
from .verif_act_proration import VerifActProration as VerifActProration
from lark_oapi.core.construct import init as init

class VerificationActivityRow:
    row_id: str | None
    employment_id: str | None
    activity_id: str | None
    employee_number: str | None
    employee_id: str | None
    working_hours_type: IdWithName | None
    pay_group: IdWithName | None
    start_date: str | None
    end_date: str | None
    cutoff_date: str | None
    item_values: list[VerifActItemValue] | None
    prorations: list[VerifActProration] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> VerificationActivityRowBuilder: ...

class VerificationActivityRowBuilder:
    def __init__(self) -> None: ...
    def row_id(self, row_id: str) -> VerificationActivityRowBuilder: ...
    def employment_id(self, employment_id: str) -> VerificationActivityRowBuilder: ...
    def activity_id(self, activity_id: str) -> VerificationActivityRowBuilder: ...
    def employee_number(self, employee_number: str) -> VerificationActivityRowBuilder: ...
    def employee_id(self, employee_id: str) -> VerificationActivityRowBuilder: ...
    def working_hours_type(self, working_hours_type: IdWithName) -> VerificationActivityRowBuilder: ...
    def pay_group(self, pay_group: IdWithName) -> VerificationActivityRowBuilder: ...
    def start_date(self, start_date: str) -> VerificationActivityRowBuilder: ...
    def end_date(self, end_date: str) -> VerificationActivityRowBuilder: ...
    def cutoff_date(self, cutoff_date: str) -> VerificationActivityRowBuilder: ...
    def item_values(self, item_values: list[VerifActItemValue]) -> VerificationActivityRowBuilder: ...
    def prorations(self, prorations: list[VerifActProration]) -> VerificationActivityRowBuilder: ...
    def build(self) -> VerificationActivityRow: ...
