from .verif_data_source_rule import VerifDataSourceRule as VerifDataSourceRule
from .verif_filter_rule import VerifFilterRule as VerifFilterRule
from .verif_item import VerifItem as VerifItem
from lark_oapi.core.construct import init as init

class VerifDatasourceConfig:
    filter_type: int | None
    filter_rule: VerifFilterRule | None
    is_collect: bool | None
    is_proration: bool | None
    is_retro: bool | None
    items: list[VerifItem] | None
    data_source_rule: VerifDataSourceRule | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> VerifDatasourceConfigBuilder: ...

class VerifDatasourceConfigBuilder:
    def __init__(self) -> None: ...
    def filter_type(self, filter_type: int) -> VerifDatasourceConfigBuilder: ...
    def filter_rule(self, filter_rule: VerifFilterRule) -> VerifDatasourceConfigBuilder: ...
    def is_collect(self, is_collect: bool) -> VerifDatasourceConfigBuilder: ...
    def is_proration(self, is_proration: bool) -> VerifDatasourceConfigBuilder: ...
    def is_retro(self, is_retro: bool) -> VerifDatasourceConfigBuilder: ...
    def items(self, items: list[VerifItem]) -> VerifDatasourceConfigBuilder: ...
    def data_source_rule(self, data_source_rule: VerifDataSourceRule) -> VerifDatasourceConfigBuilder: ...
    def build(self) -> VerifDatasourceConfig: ...
