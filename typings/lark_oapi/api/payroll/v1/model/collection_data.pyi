from .calendar_period import CalendarPeriod as CalendarPeriod
from .collection_data_period import CollectionDataPeriod as CollectionDataPeriod
from .collection_item_value import CollectionItemValue as CollectionItemValue
from .collection_template_snapshot import CollectionTemplateSnapshot as CollectionTemplateSnapshot
from .employee_info import EmployeeInfo as EmployeeInfo
from lark_oapi.core.construct import init as init

class CollectionData:
    id: str | None
    collection_type: int | None
    data_period: CollectionDataPeriod | None
    currency_id: str | None
    currency_code: str | None
    collection_item_values: list[CollectionItemValue] | None
    template_snapshot: CollectionTemplateSnapshot | None
    created_at: str | None
    modified_at: str | None
    creator_info: EmployeeInfo | None
    modifier_info: EmployeeInfo | None
    calendar_period: CalendarPeriod | None
    effective_time: str | None
    source_activity_id: str | None
    status: int | None
    related_data_id: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> CollectionDataBuilder: ...

class CollectionDataBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> CollectionDataBuilder: ...
    def collection_type(self, collection_type: int) -> CollectionDataBuilder: ...
    def data_period(self, data_period: CollectionDataPeriod) -> CollectionDataBuilder: ...
    def currency_id(self, currency_id: str) -> CollectionDataBuilder: ...
    def currency_code(self, currency_code: str) -> CollectionDataBuilder: ...
    def collection_item_values(self, collection_item_values: list[CollectionItemValue]) -> CollectionDataBuilder: ...
    def template_snapshot(self, template_snapshot: CollectionTemplateSnapshot) -> CollectionDataBuilder: ...
    def created_at(self, created_at: str) -> CollectionDataBuilder: ...
    def modified_at(self, modified_at: str) -> CollectionDataBuilder: ...
    def creator_info(self, creator_info: EmployeeInfo) -> CollectionDataBuilder: ...
    def modifier_info(self, modifier_info: EmployeeInfo) -> CollectionDataBuilder: ...
    def calendar_period(self, calendar_period: CalendarPeriod) -> CollectionDataBuilder: ...
    def effective_time(self, effective_time: str) -> CollectionDataBuilder: ...
    def source_activity_id(self, source_activity_id: str) -> CollectionDataBuilder: ...
    def status(self, status: int) -> CollectionDataBuilder: ...
    def related_data_id(self, related_data_id: str) -> CollectionDataBuilder: ...
    def build(self) -> CollectionData: ...
