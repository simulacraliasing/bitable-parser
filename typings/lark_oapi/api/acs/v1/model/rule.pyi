from .device_external import DeviceExternal as DeviceExternal
from .opening_time_external import OpeningTimeExternal as OpeningTimeExternal
from .user_external import UserExternal as UserExternal
from lark_oapi.core.construct import init as init

class Rule:
    id: int | None
    name: str | None
    devices: list[DeviceExternal] | None
    user_count: int | None
    users: list[UserExternal] | None
    visitor_count: int | None
    visitors: list[UserExternal] | None
    remind_face: bool | None
    opening_time: OpeningTimeExternal | None
    is_temp: bool | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> RuleBuilder: ...

class RuleBuilder:
    def __init__(self) -> None: ...
    def id(self, id: int) -> RuleBuilder: ...
    def name(self, name: str) -> RuleBuilder: ...
    def devices(self, devices: list[DeviceExternal]) -> RuleBuilder: ...
    def user_count(self, user_count: int) -> RuleBuilder: ...
    def users(self, users: list[UserExternal]) -> RuleBuilder: ...
    def visitor_count(self, visitor_count: int) -> RuleBuilder: ...
    def visitors(self, visitors: list[UserExternal]) -> RuleBuilder: ...
    def remind_face(self, remind_face: bool) -> RuleBuilder: ...
    def opening_time(self, opening_time: OpeningTimeExternal) -> RuleBuilder: ...
    def is_temp(self, is_temp: bool) -> RuleBuilder: ...
    def build(self) -> Rule: ...
