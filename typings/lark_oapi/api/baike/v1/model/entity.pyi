from .outer_info import OuterInfo as OuterInfo
from .related_meta import RelatedMeta as RelatedMeta
from .statistics import Statistics as Statistics
from .term import Term as Term
from lark_oapi.core.construct import init as init

class Entity:
    id: str | None
    main_keys: list[Term] | None
    full_names: list[Term] | None
    aliases: list[Term] | None
    description: str | None
    creator: int | None
    create_time: int | None
    updater: int | None
    update_time: int | None
    related_meta: RelatedMeta | None
    statistics: Statistics | None
    outer_info: OuterInfo | None
    rich_text: str | None
    source: int | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> EntityBuilder: ...

class EntityBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> EntityBuilder: ...
    def main_keys(self, main_keys: list[Term]) -> EntityBuilder: ...
    def full_names(self, full_names: list[Term]) -> EntityBuilder: ...
    def aliases(self, aliases: list[Term]) -> EntityBuilder: ...
    def description(self, description: str) -> EntityBuilder: ...
    def creator(self, creator: int) -> EntityBuilder: ...
    def create_time(self, create_time: int) -> EntityBuilder: ...
    def updater(self, updater: int) -> EntityBuilder: ...
    def update_time(self, update_time: int) -> EntityBuilder: ...
    def related_meta(self, related_meta: RelatedMeta) -> EntityBuilder: ...
    def statistics(self, statistics: Statistics) -> EntityBuilder: ...
    def outer_info(self, outer_info: OuterInfo) -> EntityBuilder: ...
    def rich_text(self, rich_text: str) -> EntityBuilder: ...
    def source(self, source: int) -> EntityBuilder: ...
    def build(self) -> Entity: ...
