from .abbreviation import Abbreviation as Abbreviation
from .baike_image import BaikeImage as BaikeImage
from .classification import Classification as Classification
from .referer import Referer as Referer
from lark_oapi.core.construct import init as init

class RelatedMeta:
    users: list[Referer] | None
    chats: list[Referer] | None
    docs: list[Referer] | None
    oncalls: list[Referer] | None
    links: list[Referer] | None
    abbreviations: list[Abbreviation] | None
    classifications: list[Classification] | None
    images: list[BaikeImage] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> RelatedMetaBuilder: ...

class RelatedMetaBuilder:
    def __init__(self) -> None: ...
    def users(self, users: list[Referer]) -> RelatedMetaBuilder: ...
    def chats(self, chats: list[Referer]) -> RelatedMetaBuilder: ...
    def docs(self, docs: list[Referer]) -> RelatedMetaBuilder: ...
    def oncalls(self, oncalls: list[Referer]) -> RelatedMetaBuilder: ...
    def links(self, links: list[Referer]) -> RelatedMetaBuilder: ...
    def abbreviations(self, abbreviations: list[Abbreviation]) -> RelatedMetaBuilder: ...
    def classifications(self, classifications: list[Classification]) -> RelatedMetaBuilder: ...
    def images(self, images: list[BaikeImage]) -> RelatedMetaBuilder: ...
    def build(self) -> RelatedMeta: ...
