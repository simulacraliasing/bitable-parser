from .correct_error import CorrectError as CorrectError
from lark_oapi.core.construct import init as init

class CorrectInfo:
    correct_total: int | None
    eachday_correct: list[int] | None
    grammar_error: CorrectError | None
    spell_error: CorrectError | None
    noun_error: CorrectError | None
    verb_tense_error: CorrectError | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> CorrectInfoBuilder: ...

class CorrectInfoBuilder:
    def __init__(self) -> None: ...
    def correct_total(self, correct_total: int) -> CorrectInfoBuilder: ...
    def eachday_correct(self, eachday_correct: list[int]) -> CorrectInfoBuilder: ...
    def grammar_error(self, grammar_error: CorrectError) -> CorrectInfoBuilder: ...
    def spell_error(self, spell_error: CorrectError) -> CorrectInfoBuilder: ...
    def noun_error(self, noun_error: CorrectError) -> CorrectInfoBuilder: ...
    def verb_tense_error(self, verb_tense_error: CorrectError) -> CorrectInfoBuilder: ...
    def build(self) -> CorrectInfo: ...
