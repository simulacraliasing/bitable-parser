from lark_oapi.core.construct import init as init

class WordInfo:
    input_total: int | None
    dedup_input_total: int | None
    eachday_input: list[int] | None
    eachday_dedup_input: list[int] | None
    send_message_total: int | None
    send_en_message_total: int | None
    receive_message_total: int | None
    receive_en_message_total: int | None
    history_words_total: int | None
    new_words_total: int | None
    eachday_send_en_message: list[int] | None
    eachday_send_message: list[int] | None
    eachday_receive_en_message: list[int] | None
    eachday_receive_message: list[int] | None
    send_eng_message_rate_ring_growth: float | None
    send_eng_words_ring_growth: int | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> WordInfoBuilder: ...

class WordInfoBuilder:
    def __init__(self) -> None: ...
    def input_total(self, input_total: int) -> WordInfoBuilder: ...
    def dedup_input_total(self, dedup_input_total: int) -> WordInfoBuilder: ...
    def eachday_input(self, eachday_input: list[int]) -> WordInfoBuilder: ...
    def eachday_dedup_input(self, eachday_dedup_input: list[int]) -> WordInfoBuilder: ...
    def send_message_total(self, send_message_total: int) -> WordInfoBuilder: ...
    def send_en_message_total(self, send_en_message_total: int) -> WordInfoBuilder: ...
    def receive_message_total(self, receive_message_total: int) -> WordInfoBuilder: ...
    def receive_en_message_total(self, receive_en_message_total: int) -> WordInfoBuilder: ...
    def history_words_total(self, history_words_total: int) -> WordInfoBuilder: ...
    def new_words_total(self, new_words_total: int) -> WordInfoBuilder: ...
    def eachday_send_en_message(self, eachday_send_en_message: list[int]) -> WordInfoBuilder: ...
    def eachday_send_message(self, eachday_send_message: list[int]) -> WordInfoBuilder: ...
    def eachday_receive_en_message(self, eachday_receive_en_message: list[int]) -> WordInfoBuilder: ...
    def eachday_receive_message(self, eachday_receive_message: list[int]) -> WordInfoBuilder: ...
    def send_eng_message_rate_ring_growth(self, send_eng_message_rate_ring_growth: float) -> WordInfoBuilder: ...
    def send_eng_words_ring_growth(self, send_eng_words_ring_growth: int) -> WordInfoBuilder: ...
    def build(self) -> WordInfo: ...
