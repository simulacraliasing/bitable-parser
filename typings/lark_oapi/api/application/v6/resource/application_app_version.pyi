from ..model.contacts_range_suggest_application_app_version_request import ContactsRangeSuggestApplicationAppVersionRequest as ContactsRangeSuggestApplicationAppVersionRequest
from ..model.contacts_range_suggest_application_app_version_response import ContactsRangeSuggestApplicationAppVersionResponse as ContactsRangeSuggestApplicationAppVersionResponse
from ..model.get_application_app_version_request import GetApplicationAppVersionRequest as GetApplicationAppVersionRequest
from ..model.get_application_app_version_response import GetApplicationAppVersionResponse as GetApplicationAppVersionResponse
from ..model.list_application_app_version_request import ListApplicationAppVersionRequest as ListApplicationAppVersionRequest
from ..model.list_application_app_version_response import ListApplicationAppVersionResponse as ListApplicationAppVersionResponse
from ..model.patch_application_app_version_request import PatchApplicationAppVersionRequest as PatchApplicationAppVersionRequest
from ..model.patch_application_app_version_response import PatchApplicationAppVersionResponse as PatchApplicationAppVersionResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class ApplicationAppVersion:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def contacts_range_suggest(self, request: ContactsRangeSuggestApplicationAppVersionRequest, option: RequestOption | None = None) -> ContactsRangeSuggestApplicationAppVersionResponse: ...
    async def acontacts_range_suggest(self, request: ContactsRangeSuggestApplicationAppVersionRequest, option: RequestOption | None = None) -> ContactsRangeSuggestApplicationAppVersionResponse: ...
    def get(self, request: GetApplicationAppVersionRequest, option: RequestOption | None = None) -> GetApplicationAppVersionResponse: ...
    async def aget(self, request: GetApplicationAppVersionRequest, option: RequestOption | None = None) -> GetApplicationAppVersionResponse: ...
    def list(self, request: ListApplicationAppVersionRequest, option: RequestOption | None = None) -> ListApplicationAppVersionResponse: ...
    async def alist(self, request: ListApplicationAppVersionRequest, option: RequestOption | None = None) -> ListApplicationAppVersionResponse: ...
    def patch(self, request: PatchApplicationAppVersionRequest, option: RequestOption | None = None) -> PatchApplicationAppVersionResponse: ...
    async def apatch(self, request: PatchApplicationAppVersionRequest, option: RequestOption | None = None) -> PatchApplicationAppVersionResponse: ...
