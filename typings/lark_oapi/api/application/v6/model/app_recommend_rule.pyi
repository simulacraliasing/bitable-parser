from .app_recommend_rule_item_info import AppRecommendRuleItemInfo as AppRecommendRuleItemInfo
from .app_recommend_rule_visibility_info import AppRecommendRuleVisibilityInfo as AppRecommendRuleVisibilityInfo
from lark_oapi.core.construct import init as init

class AppRecommendRule:
    id: str | None
    name: str | None
    status: str | None
    visibility_info: AppRecommendRuleVisibilityInfo | None
    recommend_item_infos: list[AppRecommendRuleItemInfo] | None
    distributed_recommend_item_infos: list[AppRecommendRuleItemInfo] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> AppRecommendRuleBuilder: ...

class AppRecommendRuleBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> AppRecommendRuleBuilder: ...
    def name(self, name: str) -> AppRecommendRuleBuilder: ...
    def status(self, status: str) -> AppRecommendRuleBuilder: ...
    def visibility_info(self, visibility_info: AppRecommendRuleVisibilityInfo) -> AppRecommendRuleBuilder: ...
    def recommend_item_infos(self, recommend_item_infos: list[AppRecommendRuleItemInfo]) -> AppRecommendRuleBuilder: ...
    def distributed_recommend_item_infos(self, distributed_recommend_item_infos: list[AppRecommendRuleItemInfo]) -> AppRecommendRuleBuilder: ...
    def build(self) -> AppRecommendRule: ...
