from lark_oapi.core.construct import init as init

class ApplicationFeedback:
    feedback_id: int | None
    app_id: str | None
    feedback_time: str | None
    tenant_name: str | None
    feedback_type: int | None
    status: int | None
    fault_type: list[int] | None
    fault_time: str | None
    source: int | None
    contact: str | None
    update_time: str | None
    description: str | None
    user_id: str | None
    operator_id: str | None
    images: list[str] | None
    feedback_path: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ApplicationFeedbackBuilder: ...

class ApplicationFeedbackBuilder:
    def __init__(self) -> None: ...
    def feedback_id(self, feedback_id: int) -> ApplicationFeedbackBuilder: ...
    def app_id(self, app_id: str) -> ApplicationFeedbackBuilder: ...
    def feedback_time(self, feedback_time: str) -> ApplicationFeedbackBuilder: ...
    def tenant_name(self, tenant_name: str) -> ApplicationFeedbackBuilder: ...
    def feedback_type(self, feedback_type: int) -> ApplicationFeedbackBuilder: ...
    def status(self, status: int) -> ApplicationFeedbackBuilder: ...
    def fault_type(self, fault_type: list[int]) -> ApplicationFeedbackBuilder: ...
    def fault_time(self, fault_time: str) -> ApplicationFeedbackBuilder: ...
    def source(self, source: int) -> ApplicationFeedbackBuilder: ...
    def contact(self, contact: str) -> ApplicationFeedbackBuilder: ...
    def update_time(self, update_time: str) -> ApplicationFeedbackBuilder: ...
    def description(self, description: str) -> ApplicationFeedbackBuilder: ...
    def user_id(self, user_id: str) -> ApplicationFeedbackBuilder: ...
    def operator_id(self, operator_id: str) -> ApplicationFeedbackBuilder: ...
    def images(self, images: list[str]) -> ApplicationFeedbackBuilder: ...
    def feedback_path(self, feedback_path: str) -> ApplicationFeedbackBuilder: ...
    def build(self) -> ApplicationFeedback: ...
