from .bot import Bot as Bot
from .cloud_doc import CloudDoc as CloudDoc
from .docs_block import DocsBlock as DocsBlock
from .gadget import Gadget as Gadget
from .message_action import MessageAction as MessageAction
from .navigate import Navigate as Navigate
from .plus_menu import PlusMenu as PlusMenu
from .web_app import WebApp as WebApp
from .workplace_widget import WorkplaceWidget as WorkplaceWidget
from lark_oapi.core.construct import init as init

class AppAbility:
    gadget: Gadget | None
    web_app: WebApp | None
    bot: Bot | None
    workplace_widgets: list[WorkplaceWidget] | None
    navigate: Navigate | None
    cloud_doc: CloudDoc | None
    docs_blocks: list[DocsBlock] | None
    message_action: MessageAction | None
    plus_menu: PlusMenu | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> AppAbilityBuilder: ...

class AppAbilityBuilder:
    def __init__(self) -> None: ...
    def gadget(self, gadget: Gadget) -> AppAbilityBuilder: ...
    def web_app(self, web_app: WebApp) -> AppAbilityBuilder: ...
    def bot(self, bot: Bot) -> AppAbilityBuilder: ...
    def workplace_widgets(self, workplace_widgets: list[WorkplaceWidget]) -> AppAbilityBuilder: ...
    def navigate(self, navigate: Navigate) -> AppAbilityBuilder: ...
    def cloud_doc(self, cloud_doc: CloudDoc) -> AppAbilityBuilder: ...
    def docs_blocks(self, docs_blocks: list[DocsBlock]) -> AppAbilityBuilder: ...
    def message_action(self, message_action: MessageAction) -> AppAbilityBuilder: ...
    def plus_menu(self, plus_menu: PlusMenu) -> AppAbilityBuilder: ...
    def build(self) -> AppAbility: ...
