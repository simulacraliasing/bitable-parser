from .app_config_security_item import AppConfigSecurityItem as AppConfigSecurityItem
from .app_i18n_info import AppI18nInfo as AppI18nInfo
from .app_scope import AppScope as AppScope
from .application_owner import ApplicationOwner as ApplicationOwner
from .callback import Callback as Callback
from .event_and_callback_encrypt_strategy import EventAndCallbackEncryptStrategy as EventAndCallbackEncryptStrategy
from .subscribed_event import SubscribedEvent as SubscribedEvent
from lark_oapi.core.construct import init as init

class Application:
    app_id: str | None
    creator_id: int | None
    status: int | None
    scene_type: int | None
    payment_type: int | None
    create_source: str | None
    redirect_urls: list[str] | None
    online_version_id: int | None
    unaudit_version_id: int | None
    app_name: str | None
    avatar_url: str | None
    description: str | None
    scopes: list[AppScope] | None
    back_home_url: str | None
    i18n: list[AppI18nInfo] | None
    primary_language: str | None
    common_categories: list[str] | None
    owner: ApplicationOwner | None
    mobile_default_ability: str | None
    pc_default_ability: str | None
    secret: str | None
    event: SubscribedEvent | None
    callback: Callback | None
    encryption: EventAndCallbackEncryptStrategy | None
    security: AppConfigSecurityItem | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ApplicationBuilder: ...

class ApplicationBuilder:
    def __init__(self) -> None: ...
    def app_id(self, app_id: str) -> ApplicationBuilder: ...
    def creator_id(self, creator_id: int) -> ApplicationBuilder: ...
    def status(self, status: int) -> ApplicationBuilder: ...
    def scene_type(self, scene_type: int) -> ApplicationBuilder: ...
    def payment_type(self, payment_type: int) -> ApplicationBuilder: ...
    def create_source(self, create_source: str) -> ApplicationBuilder: ...
    def redirect_urls(self, redirect_urls: list[str]) -> ApplicationBuilder: ...
    def online_version_id(self, online_version_id: int) -> ApplicationBuilder: ...
    def unaudit_version_id(self, unaudit_version_id: int) -> ApplicationBuilder: ...
    def app_name(self, app_name: str) -> ApplicationBuilder: ...
    def avatar_url(self, avatar_url: str) -> ApplicationBuilder: ...
    def description(self, description: str) -> ApplicationBuilder: ...
    def scopes(self, scopes: list[AppScope]) -> ApplicationBuilder: ...
    def back_home_url(self, back_home_url: str) -> ApplicationBuilder: ...
    def i18n(self, i18n: list[AppI18nInfo]) -> ApplicationBuilder: ...
    def primary_language(self, primary_language: str) -> ApplicationBuilder: ...
    def common_categories(self, common_categories: list[str]) -> ApplicationBuilder: ...
    def owner(self, owner: ApplicationOwner) -> ApplicationBuilder: ...
    def mobile_default_ability(self, mobile_default_ability: str) -> ApplicationBuilder: ...
    def pc_default_ability(self, pc_default_ability: str) -> ApplicationBuilder: ...
    def secret(self, secret: str) -> ApplicationBuilder: ...
    def event(self, event: SubscribedEvent) -> ApplicationBuilder: ...
    def callback(self, callback: Callback) -> ApplicationBuilder: ...
    def encryption(self, encryption: EventAndCallbackEncryptStrategy) -> ApplicationBuilder: ...
    def security(self, security: AppConfigSecurityItem) -> ApplicationBuilder: ...
    def build(self) -> Application: ...
