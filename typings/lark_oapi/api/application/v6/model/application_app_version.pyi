from .app_ability import AppAbility as AppAbility
from .app_i18n_info import AppI18nInfo as AppI18nInfo
from .app_scope import AppScope as AppScope
from .app_version_remark import AppVersionRemark as AppVersionRemark
from .event import Event as Event
from lark_oapi.core.construct import init as init

class ApplicationAppVersion:
    app_id: str | None
    version: str | None
    version_id: int | None
    app_name: str | None
    avatar_url: str | None
    description: str | None
    scopes: list[AppScope] | None
    back_home_url: str | None
    i18n: list[AppI18nInfo] | None
    common_categories: list[str] | None
    events: list[str] | None
    status: int | None
    create_time: int | None
    publish_time: int | None
    ability: AppAbility | None
    remark: AppVersionRemark | None
    event_infos: list[Event] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ApplicationAppVersionBuilder: ...

class ApplicationAppVersionBuilder:
    def __init__(self) -> None: ...
    def app_id(self, app_id: str) -> ApplicationAppVersionBuilder: ...
    def version(self, version: str) -> ApplicationAppVersionBuilder: ...
    def version_id(self, version_id: int) -> ApplicationAppVersionBuilder: ...
    def app_name(self, app_name: str) -> ApplicationAppVersionBuilder: ...
    def avatar_url(self, avatar_url: str) -> ApplicationAppVersionBuilder: ...
    def description(self, description: str) -> ApplicationAppVersionBuilder: ...
    def scopes(self, scopes: list[AppScope]) -> ApplicationAppVersionBuilder: ...
    def back_home_url(self, back_home_url: str) -> ApplicationAppVersionBuilder: ...
    def i18n(self, i18n: list[AppI18nInfo]) -> ApplicationAppVersionBuilder: ...
    def common_categories(self, common_categories: list[str]) -> ApplicationAppVersionBuilder: ...
    def events(self, events: list[str]) -> ApplicationAppVersionBuilder: ...
    def status(self, status: int) -> ApplicationAppVersionBuilder: ...
    def create_time(self, create_time: int) -> ApplicationAppVersionBuilder: ...
    def publish_time(self, publish_time: int) -> ApplicationAppVersionBuilder: ...
    def ability(self, ability: AppAbility) -> ApplicationAppVersionBuilder: ...
    def remark(self, remark: AppVersionRemark) -> ApplicationAppVersionBuilder: ...
    def event_infos(self, event_infos: list[Event]) -> ApplicationAppVersionBuilder: ...
    def build(self) -> ApplicationAppVersion: ...
