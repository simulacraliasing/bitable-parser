from .attachment import Attachment as Attachment
from .id_name_object import IdNameObject as IdNameObject
from .module_assessment import ModuleAssessment as ModuleAssessment
from .record_score import RecordScore as RecordScore
from lark_oapi.core.construct import init as init

class InterviewRecord:
    id: str | None
    feedback_form_id: str | None
    commit_status: int | None
    submit_time: str | None
    record_score: RecordScore | None
    interviewer: IdNameObject | None
    attachments: list[Attachment] | None
    module_assessments: list[ModuleAssessment] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> InterviewRecordBuilder: ...

class InterviewRecordBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> InterviewRecordBuilder: ...
    def feedback_form_id(self, feedback_form_id: str) -> InterviewRecordBuilder: ...
    def commit_status(self, commit_status: int) -> InterviewRecordBuilder: ...
    def submit_time(self, submit_time: str) -> InterviewRecordBuilder: ...
    def record_score(self, record_score: RecordScore) -> InterviewRecordBuilder: ...
    def interviewer(self, interviewer: IdNameObject) -> InterviewRecordBuilder: ...
    def attachments(self, attachments: list[Attachment]) -> InterviewRecordBuilder: ...
    def module_assessments(self, module_assessments: list[ModuleAssessment]) -> InterviewRecordBuilder: ...
    def build(self) -> InterviewRecord: ...
