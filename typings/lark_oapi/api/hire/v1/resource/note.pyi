from ..model.create_note_request import CreateNoteRequest as CreateNoteRequest
from ..model.create_note_response import CreateNoteResponse as CreateNoteResponse
from ..model.delete_note_request import DeleteNoteRequest as DeleteNoteRequest
from ..model.delete_note_response import DeleteNoteResponse as DeleteNoteResponse
from ..model.get_note_request import GetNoteRequest as GetNoteRequest
from ..model.get_note_response import GetNoteResponse as GetNoteResponse
from ..model.list_note_request import ListNoteRequest as ListNoteRequest
from ..model.list_note_response import ListNoteResponse as ListNoteResponse
from ..model.patch_note_request import PatchNoteRequest as PatchNoteRequest
from ..model.patch_note_response import PatchNoteResponse as PatchNoteResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Note:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateNoteRequest, option: RequestOption | None = None) -> CreateNoteResponse: ...
    async def acreate(self, request: CreateNoteRequest, option: RequestOption | None = None) -> CreateNoteResponse: ...
    def delete(self, request: DeleteNoteRequest, option: RequestOption | None = None) -> DeleteNoteResponse: ...
    async def adelete(self, request: DeleteNoteRequest, option: RequestOption | None = None) -> DeleteNoteResponse: ...
    def get(self, request: GetNoteRequest, option: RequestOption | None = None) -> GetNoteResponse: ...
    async def aget(self, request: GetNoteRequest, option: RequestOption | None = None) -> GetNoteResponse: ...
    def list(self, request: ListNoteRequest, option: RequestOption | None = None) -> ListNoteResponse: ...
    async def alist(self, request: ListNoteRequest, option: RequestOption | None = None) -> ListNoteResponse: ...
    def patch(self, request: PatchNoteRequest, option: RequestOption | None = None) -> PatchNoteResponse: ...
    async def apatch(self, request: PatchNoteRequest, option: RequestOption | None = None) -> PatchNoteResponse: ...
