from ..model.close_job_request import CloseJobRequest as CloseJobRequest
from ..model.close_job_response import CloseJobResponse as CloseJobResponse
from ..model.combined_create_job_request import CombinedCreateJobRequest as CombinedCreateJobRequest
from ..model.combined_create_job_response import CombinedCreateJobResponse as CombinedCreateJobResponse
from ..model.combined_update_job_request import CombinedUpdateJobRequest as CombinedUpdateJobRequest
from ..model.combined_update_job_response import CombinedUpdateJobResponse as CombinedUpdateJobResponse
from ..model.config_job_request import ConfigJobRequest as ConfigJobRequest
from ..model.config_job_response import ConfigJobResponse as ConfigJobResponse
from ..model.get_detail_job_request import GetDetailJobRequest as GetDetailJobRequest
from ..model.get_detail_job_response import GetDetailJobResponse as GetDetailJobResponse
from ..model.get_job_request import GetJobRequest as GetJobRequest
from ..model.get_job_response import GetJobResponse as GetJobResponse
from ..model.list_job_request import ListJobRequest as ListJobRequest
from ..model.list_job_response import ListJobResponse as ListJobResponse
from ..model.open_job_request import OpenJobRequest as OpenJobRequest
from ..model.open_job_response import OpenJobResponse as OpenJobResponse
from ..model.recruiter_job_request import RecruiterJobRequest as RecruiterJobRequest
from ..model.recruiter_job_response import RecruiterJobResponse as RecruiterJobResponse
from ..model.update_config_job_request import UpdateConfigJobRequest as UpdateConfigJobRequest
from ..model.update_config_job_response import UpdateConfigJobResponse as UpdateConfigJobResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class Job:
    def __init__(self, config: Config) -> None: ...
    def close(self, request: CloseJobRequest, option: RequestOption | None = None) -> CloseJobResponse: ...
    async def aclose(self, request: CloseJobRequest, option: RequestOption | None = None) -> CloseJobResponse: ...
    def combined_create(self, request: CombinedCreateJobRequest, option: RequestOption | None = None) -> CombinedCreateJobResponse: ...
    async def acombined_create(self, request: CombinedCreateJobRequest, option: RequestOption | None = None) -> CombinedCreateJobResponse: ...
    def combined_update(self, request: CombinedUpdateJobRequest, option: RequestOption | None = None) -> CombinedUpdateJobResponse: ...
    async def acombined_update(self, request: CombinedUpdateJobRequest, option: RequestOption | None = None) -> CombinedUpdateJobResponse: ...
    def config(self, request: ConfigJobRequest, option: RequestOption | None = None) -> ConfigJobResponse: ...
    async def aconfig(self, request: ConfigJobRequest, option: RequestOption | None = None) -> ConfigJobResponse: ...
    def get(self, request: GetJobRequest, option: RequestOption | None = None) -> GetJobResponse: ...
    async def aget(self, request: GetJobRequest, option: RequestOption | None = None) -> GetJobResponse: ...
    def get_detail(self, request: GetDetailJobRequest, option: RequestOption | None = None) -> GetDetailJobResponse: ...
    async def aget_detail(self, request: GetDetailJobRequest, option: RequestOption | None = None) -> GetDetailJobResponse: ...
    def list(self, request: ListJobRequest, option: RequestOption | None = None) -> ListJobResponse: ...
    async def alist(self, request: ListJobRequest, option: RequestOption | None = None) -> ListJobResponse: ...
    def open(self, request: OpenJobRequest, option: RequestOption | None = None) -> OpenJobResponse: ...
    async def aopen(self, request: OpenJobRequest, option: RequestOption | None = None) -> OpenJobResponse: ...
    def recruiter(self, request: RecruiterJobRequest, option: RequestOption | None = None) -> RecruiterJobResponse: ...
    async def arecruiter(self, request: RecruiterJobRequest, option: RequestOption | None = None) -> RecruiterJobResponse: ...
    def update_config(self, request: UpdateConfigJobRequest, option: RequestOption | None = None) -> UpdateConfigJobResponse: ...
    async def aupdate_config(self, request: UpdateConfigJobRequest, option: RequestOption | None = None) -> UpdateConfigJobResponse: ...
