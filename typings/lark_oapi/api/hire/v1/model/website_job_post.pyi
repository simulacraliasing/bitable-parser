from .common_address import CommonAddress as CommonAddress
from .id_name_object import IdNameObject as IdNameObject
from .website_job_post_customized_data import WebsiteJobPostCustomizedData as WebsiteJobPostCustomizedData
from lark_oapi.core.construct import init as init

class WebsiteJobPost:
    id: str | None
    title: str | None
    job_id: str | None
    job_code: str | None
    job_expire_time: str | None
    job_active_status: int | None
    job_process_type: int | None
    job_recruitment_type: IdNameObject | None
    job_department: IdNameObject | None
    job_type: IdNameObject | None
    min_job_level: IdNameObject | None
    max_job_level: IdNameObject | None
    address: CommonAddress | None
    min_salary: str | None
    max_salary: str | None
    required_degree: int | None
    experience: int | None
    headcount: int | None
    high_light_list: list[IdNameObject] | None
    description: str | None
    requirement: str | None
    creator: IdNameObject | None
    create_time: str | None
    modify_time: str | None
    customized_data_list: list[WebsiteJobPostCustomizedData] | None
    job_function: IdNameObject | None
    subject: IdNameObject | None
    address_list: list[CommonAddress] | None
    job_sequence_info: IdNameObject | None
    currency: int | None
    target_major_list: list[IdNameObject] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> WebsiteJobPostBuilder: ...

class WebsiteJobPostBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> WebsiteJobPostBuilder: ...
    def title(self, title: str) -> WebsiteJobPostBuilder: ...
    def job_id(self, job_id: str) -> WebsiteJobPostBuilder: ...
    def job_code(self, job_code: str) -> WebsiteJobPostBuilder: ...
    def job_expire_time(self, job_expire_time: str) -> WebsiteJobPostBuilder: ...
    def job_active_status(self, job_active_status: int) -> WebsiteJobPostBuilder: ...
    def job_process_type(self, job_process_type: int) -> WebsiteJobPostBuilder: ...
    def job_recruitment_type(self, job_recruitment_type: IdNameObject) -> WebsiteJobPostBuilder: ...
    def job_department(self, job_department: IdNameObject) -> WebsiteJobPostBuilder: ...
    def job_type(self, job_type: IdNameObject) -> WebsiteJobPostBuilder: ...
    def min_job_level(self, min_job_level: IdNameObject) -> WebsiteJobPostBuilder: ...
    def max_job_level(self, max_job_level: IdNameObject) -> WebsiteJobPostBuilder: ...
    def address(self, address: CommonAddress) -> WebsiteJobPostBuilder: ...
    def min_salary(self, min_salary: str) -> WebsiteJobPostBuilder: ...
    def max_salary(self, max_salary: str) -> WebsiteJobPostBuilder: ...
    def required_degree(self, required_degree: int) -> WebsiteJobPostBuilder: ...
    def experience(self, experience: int) -> WebsiteJobPostBuilder: ...
    def headcount(self, headcount: int) -> WebsiteJobPostBuilder: ...
    def high_light_list(self, high_light_list: list[IdNameObject]) -> WebsiteJobPostBuilder: ...
    def description(self, description: str) -> WebsiteJobPostBuilder: ...
    def requirement(self, requirement: str) -> WebsiteJobPostBuilder: ...
    def creator(self, creator: IdNameObject) -> WebsiteJobPostBuilder: ...
    def create_time(self, create_time: str) -> WebsiteJobPostBuilder: ...
    def modify_time(self, modify_time: str) -> WebsiteJobPostBuilder: ...
    def customized_data_list(self, customized_data_list: list[WebsiteJobPostCustomizedData]) -> WebsiteJobPostBuilder: ...
    def job_function(self, job_function: IdNameObject) -> WebsiteJobPostBuilder: ...
    def subject(self, subject: IdNameObject) -> WebsiteJobPostBuilder: ...
    def address_list(self, address_list: list[CommonAddress]) -> WebsiteJobPostBuilder: ...
    def job_sequence_info(self, job_sequence_info: IdNameObject) -> WebsiteJobPostBuilder: ...
    def currency(self, currency: int) -> WebsiteJobPostBuilder: ...
    def target_major_list(self, target_major_list: list[IdNameObject]) -> WebsiteJobPostBuilder: ...
    def build(self) -> WebsiteJobPost: ...
