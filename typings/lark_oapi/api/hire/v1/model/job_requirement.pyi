from .job_requirement_customized_data import JobRequirementCustomizedData as JobRequirementCustomizedData
from .job_requirement_update_option import JobRequirementUpdateOption as JobRequirementUpdateOption
from lark_oapi.core.construct import init as init

class JobRequirement:
    short_code: str | None
    name: str | None
    display_progress: int | None
    head_count: int | None
    recruitment_type_id: str | None
    employee_type_id: str | None
    max_level_id: str | None
    min_level_id: str | None
    sequence_id: str | None
    category: int | None
    department_id: str | None
    recruiter_id_list: list[str] | None
    jr_hiring_manager_id_list: list[str] | None
    direct_leader_id_list: list[str] | None
    start_time: str | None
    deadline: str | None
    priority: int | None
    required_degree: int | None
    max_salary: str | None
    min_salary: str | None
    address_id: str | None
    description: str | None
    customized_data_list: list[JobRequirementCustomizedData] | None
    process_type: int | None
    job_type_id: str | None
    job_id_list: list[str] | None
    employment_job_id: str | None
    position_id: str | None
    update_option: JobRequirementUpdateOption | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> JobRequirementBuilder: ...

class JobRequirementBuilder:
    def __init__(self) -> None: ...
    def short_code(self, short_code: str) -> JobRequirementBuilder: ...
    def name(self, name: str) -> JobRequirementBuilder: ...
    def display_progress(self, display_progress: int) -> JobRequirementBuilder: ...
    def head_count(self, head_count: int) -> JobRequirementBuilder: ...
    def recruitment_type_id(self, recruitment_type_id: str) -> JobRequirementBuilder: ...
    def employee_type_id(self, employee_type_id: str) -> JobRequirementBuilder: ...
    def max_level_id(self, max_level_id: str) -> JobRequirementBuilder: ...
    def min_level_id(self, min_level_id: str) -> JobRequirementBuilder: ...
    def sequence_id(self, sequence_id: str) -> JobRequirementBuilder: ...
    def category(self, category: int) -> JobRequirementBuilder: ...
    def department_id(self, department_id: str) -> JobRequirementBuilder: ...
    def recruiter_id_list(self, recruiter_id_list: list[str]) -> JobRequirementBuilder: ...
    def jr_hiring_manager_id_list(self, jr_hiring_manager_id_list: list[str]) -> JobRequirementBuilder: ...
    def direct_leader_id_list(self, direct_leader_id_list: list[str]) -> JobRequirementBuilder: ...
    def start_time(self, start_time: str) -> JobRequirementBuilder: ...
    def deadline(self, deadline: str) -> JobRequirementBuilder: ...
    def priority(self, priority: int) -> JobRequirementBuilder: ...
    def required_degree(self, required_degree: int) -> JobRequirementBuilder: ...
    def max_salary(self, max_salary: str) -> JobRequirementBuilder: ...
    def min_salary(self, min_salary: str) -> JobRequirementBuilder: ...
    def address_id(self, address_id: str) -> JobRequirementBuilder: ...
    def description(self, description: str) -> JobRequirementBuilder: ...
    def customized_data_list(self, customized_data_list: list[JobRequirementCustomizedData]) -> JobRequirementBuilder: ...
    def process_type(self, process_type: int) -> JobRequirementBuilder: ...
    def job_type_id(self, job_type_id: str) -> JobRequirementBuilder: ...
    def job_id_list(self, job_id_list: list[str]) -> JobRequirementBuilder: ...
    def employment_job_id(self, employment_job_id: str) -> JobRequirementBuilder: ...
    def position_id(self, position_id: str) -> JobRequirementBuilder: ...
    def update_option(self, update_option: JobRequirementUpdateOption) -> JobRequirementBuilder: ...
    def build(self) -> JobRequirement: ...
