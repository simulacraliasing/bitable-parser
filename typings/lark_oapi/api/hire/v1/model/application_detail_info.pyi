from .agency_info import AgencyInfo as AgencyInfo
from .application_detail_basic_info import ApplicationDetailBasicInfo as ApplicationDetailBasicInfo
from .application_detail_portal_info import ApplicationDetailPortalInfo as ApplicationDetailPortalInfo
from .employee_v2 import EmployeeV2 as EmployeeV2
from .evaluation import Evaluation as Evaluation
from .interview_aggregation import InterviewAggregation as InterviewAggregation
from .job_basic_info import JobBasicInfo as JobBasicInfo
from .offer_info_v2 import OfferInfoV2 as OfferInfoV2
from .referral_info_v2 import ReferralInfoV2 as ReferralInfoV2
from .talent_basic_info_v2 import TalentBasicInfoV2 as TalentBasicInfoV2
from lark_oapi.core.construct import init as init

class ApplicationDetailInfo:
    basic_info: ApplicationDetailBasicInfo | None
    job: JobBasicInfo | None
    talent: TalentBasicInfoV2 | None
    evaluations: list[Evaluation] | None
    interview_aggregation: InterviewAggregation | None
    offer: OfferInfoV2 | None
    employee: EmployeeV2 | None
    agency: AgencyInfo | None
    portal: ApplicationDetailPortalInfo | None
    referral: ReferralInfoV2 | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ApplicationDetailInfoBuilder: ...

class ApplicationDetailInfoBuilder:
    def __init__(self) -> None: ...
    def basic_info(self, basic_info: ApplicationDetailBasicInfo) -> ApplicationDetailInfoBuilder: ...
    def job(self, job: JobBasicInfo) -> ApplicationDetailInfoBuilder: ...
    def talent(self, talent: TalentBasicInfoV2) -> ApplicationDetailInfoBuilder: ...
    def evaluations(self, evaluations: list[Evaluation]) -> ApplicationDetailInfoBuilder: ...
    def interview_aggregation(self, interview_aggregation: InterviewAggregation) -> ApplicationDetailInfoBuilder: ...
    def offer(self, offer: OfferInfoV2) -> ApplicationDetailInfoBuilder: ...
    def employee(self, employee: EmployeeV2) -> ApplicationDetailInfoBuilder: ...
    def agency(self, agency: AgencyInfo) -> ApplicationDetailInfoBuilder: ...
    def portal(self, portal: ApplicationDetailPortalInfo) -> ApplicationDetailInfoBuilder: ...
    def referral(self, referral: ReferralInfoV2) -> ApplicationDetailInfoBuilder: ...
    def build(self) -> ApplicationDetailInfo: ...
