from .talent_customized_data_object_value import TalentCustomizedDataObjectValue as TalentCustomizedDataObjectValue
from .talent_identification_info import TalentIdentificationInfo as TalentIdentificationInfo
from lark_oapi.core.construct import init as init

class TalentCombinedBasicInfo:
    name: str | None
    mobile: str | None
    mobile_country_code: str | None
    email: str | None
    identification_type: int | None
    identification_number: str | None
    identification: TalentIdentificationInfo | None
    start_work_time: str | None
    birthday: str | None
    gender: int | None
    nationality_id: str | None
    current_city_code: str | None
    hometown_city_code: str | None
    customized_data: list[TalentCustomizedDataObjectValue] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> TalentCombinedBasicInfoBuilder: ...

class TalentCombinedBasicInfoBuilder:
    def __init__(self) -> None: ...
    def name(self, name: str) -> TalentCombinedBasicInfoBuilder: ...
    def mobile(self, mobile: str) -> TalentCombinedBasicInfoBuilder: ...
    def mobile_country_code(self, mobile_country_code: str) -> TalentCombinedBasicInfoBuilder: ...
    def email(self, email: str) -> TalentCombinedBasicInfoBuilder: ...
    def identification_type(self, identification_type: int) -> TalentCombinedBasicInfoBuilder: ...
    def identification_number(self, identification_number: str) -> TalentCombinedBasicInfoBuilder: ...
    def identification(self, identification: TalentIdentificationInfo) -> TalentCombinedBasicInfoBuilder: ...
    def start_work_time(self, start_work_time: str) -> TalentCombinedBasicInfoBuilder: ...
    def birthday(self, birthday: str) -> TalentCombinedBasicInfoBuilder: ...
    def gender(self, gender: int) -> TalentCombinedBasicInfoBuilder: ...
    def nationality_id(self, nationality_id: str) -> TalentCombinedBasicInfoBuilder: ...
    def current_city_code(self, current_city_code: str) -> TalentCombinedBasicInfoBuilder: ...
    def hometown_city_code(self, hometown_city_code: str) -> TalentCombinedBasicInfoBuilder: ...
    def customized_data(self, customized_data: list[TalentCustomizedDataObjectValue]) -> TalentCombinedBasicInfoBuilder: ...
    def build(self) -> TalentCombinedBasicInfo: ...
