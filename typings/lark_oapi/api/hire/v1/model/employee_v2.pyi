from lark_oapi.core.construct import init as init

class EmployeeV2:
    id: str | None
    application_id: str | None
    onboard_status: int | None
    conversion_status: int | None
    onboard_time: str | None
    expected_conversion_time: str | None
    actual_conversion_time: str | None
    overboard_time: str | None
    overboard_note: str | None
    onboard_city_code: str | None
    department_id: str | None
    leader_id: str | None
    sequence_id: str | None
    level_id: str | None
    employee_type: str | None
    job_requirement_id: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> EmployeeV2Builder: ...

class EmployeeV2Builder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> EmployeeV2Builder: ...
    def application_id(self, application_id: str) -> EmployeeV2Builder: ...
    def onboard_status(self, onboard_status: int) -> EmployeeV2Builder: ...
    def conversion_status(self, conversion_status: int) -> EmployeeV2Builder: ...
    def onboard_time(self, onboard_time: str) -> EmployeeV2Builder: ...
    def expected_conversion_time(self, expected_conversion_time: str) -> EmployeeV2Builder: ...
    def actual_conversion_time(self, actual_conversion_time: str) -> EmployeeV2Builder: ...
    def overboard_time(self, overboard_time: str) -> EmployeeV2Builder: ...
    def overboard_note(self, overboard_note: str) -> EmployeeV2Builder: ...
    def onboard_city_code(self, onboard_city_code: str) -> EmployeeV2Builder: ...
    def department_id(self, department_id: str) -> EmployeeV2Builder: ...
    def leader_id(self, leader_id: str) -> EmployeeV2Builder: ...
    def sequence_id(self, sequence_id: str) -> EmployeeV2Builder: ...
    def level_id(self, level_id: str) -> EmployeeV2Builder: ...
    def employee_type(self, employee_type: str) -> EmployeeV2Builder: ...
    def job_requirement_id(self, job_requirement_id: str) -> EmployeeV2Builder: ...
    def build(self) -> EmployeeV2: ...
