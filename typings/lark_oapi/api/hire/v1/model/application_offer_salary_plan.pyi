from .application_offer_custom_value import ApplicationOfferCustomValue as ApplicationOfferCustomValue
from lark_oapi.core.construct import init as init

class ApplicationOfferSalaryPlan:
    currency: str | None
    basic_salary: str | None
    probation_salary_percentage: str | None
    award_salary_multiple: str | None
    option_shares: str | None
    quarterly_bonus: str | None
    half_year_bonus: str | None
    total_annual_cash: str | None
    customize_info_list: list[ApplicationOfferCustomValue] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ApplicationOfferSalaryPlanBuilder: ...

class ApplicationOfferSalaryPlanBuilder:
    def __init__(self) -> None: ...
    def currency(self, currency: str) -> ApplicationOfferSalaryPlanBuilder: ...
    def basic_salary(self, basic_salary: str) -> ApplicationOfferSalaryPlanBuilder: ...
    def probation_salary_percentage(self, probation_salary_percentage: str) -> ApplicationOfferSalaryPlanBuilder: ...
    def award_salary_multiple(self, award_salary_multiple: str) -> ApplicationOfferSalaryPlanBuilder: ...
    def option_shares(self, option_shares: str) -> ApplicationOfferSalaryPlanBuilder: ...
    def quarterly_bonus(self, quarterly_bonus: str) -> ApplicationOfferSalaryPlanBuilder: ...
    def half_year_bonus(self, half_year_bonus: str) -> ApplicationOfferSalaryPlanBuilder: ...
    def total_annual_cash(self, total_annual_cash: str) -> ApplicationOfferSalaryPlanBuilder: ...
    def customize_info_list(self, customize_info_list: list[ApplicationOfferCustomValue]) -> ApplicationOfferSalaryPlanBuilder: ...
    def build(self) -> ApplicationOfferSalaryPlan: ...
