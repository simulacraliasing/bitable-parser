from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class ListJobRequirementRequest(BaseRequest):
    page_token: str | None
    page_size: int | None
    job_id: str | None
    create_time_begin: str | None
    create_time_end: str | None
    update_time_begin: str | None
    update_time_end: str | None
    user_id_type: str | None
    department_id_type: str | None
    job_level_id_type: str | None
    job_family_id_type: str | None
    employee_type_id_type: str | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> ListJobRequirementRequestBuilder: ...

class ListJobRequirementRequestBuilder:
    def __init__(self) -> None: ...
    def page_token(self, page_token: str) -> ListJobRequirementRequestBuilder: ...
    def page_size(self, page_size: int) -> ListJobRequirementRequestBuilder: ...
    def job_id(self, job_id: str) -> ListJobRequirementRequestBuilder: ...
    def create_time_begin(self, create_time_begin: str) -> ListJobRequirementRequestBuilder: ...
    def create_time_end(self, create_time_end: str) -> ListJobRequirementRequestBuilder: ...
    def update_time_begin(self, update_time_begin: str) -> ListJobRequirementRequestBuilder: ...
    def update_time_end(self, update_time_end: str) -> ListJobRequirementRequestBuilder: ...
    def user_id_type(self, user_id_type: str) -> ListJobRequirementRequestBuilder: ...
    def department_id_type(self, department_id_type: str) -> ListJobRequirementRequestBuilder: ...
    def job_level_id_type(self, job_level_id_type: str) -> ListJobRequirementRequestBuilder: ...
    def job_family_id_type(self, job_family_id_type: str) -> ListJobRequirementRequestBuilder: ...
    def employee_type_id_type(self, employee_type_id_type: str) -> ListJobRequirementRequestBuilder: ...
    def build(self) -> ListJobRequirementRequest: ...
