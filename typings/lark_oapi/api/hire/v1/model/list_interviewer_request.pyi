from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class ListInterviewerRequest(BaseRequest):
    page_size: int | None
    page_token: str | None
    user_ids: list[str] | None
    verify_status: int | None
    earliest_update_time: str | None
    latest_update_time: str | None
    user_id_type: str | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> ListInterviewerRequestBuilder: ...

class ListInterviewerRequestBuilder:
    def __init__(self) -> None: ...
    def page_size(self, page_size: int) -> ListInterviewerRequestBuilder: ...
    def page_token(self, page_token: str) -> ListInterviewerRequestBuilder: ...
    def user_ids(self, user_ids: list[str]) -> ListInterviewerRequestBuilder: ...
    def verify_status(self, verify_status: int) -> ListInterviewerRequestBuilder: ...
    def earliest_update_time(self, earliest_update_time: str) -> ListInterviewerRequestBuilder: ...
    def latest_update_time(self, latest_update_time: str) -> ListInterviewerRequestBuilder: ...
    def user_id_type(self, user_id_type: str) -> ListInterviewerRequestBuilder: ...
    def build(self) -> ListInterviewerRequest: ...
