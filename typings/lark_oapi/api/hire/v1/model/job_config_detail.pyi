from .id_name_object import IdNameObject as IdNameObject
from .interview_appointment_config import InterviewAppointmentConfig as InterviewAppointmentConfig
from .job_config_interview_round import JobConfigInterviewRound as JobConfigInterviewRound
from .job_config_round_type_result import JobConfigRoundTypeResult as JobConfigRoundTypeResult
from .registration_info import RegistrationInfo as RegistrationInfo
from lark_oapi.core.construct import init as init

class JobConfigDetail:
    offer_apply_schema: IdNameObject | None
    offer_process_conf: IdNameObject | None
    recommended_evaluator_list: list[IdNameObject] | None
    assessment_template: IdNameObject | None
    id: str | None
    interview_round_list: list[JobConfigInterviewRound] | None
    interview_registration: RegistrationInfo | None
    onboard_registration: RegistrationInfo | None
    interview_round_type_list: list[JobConfigRoundTypeResult] | None
    related_job_list: list[IdNameObject] | None
    job_attribute: int | None
    interview_appointment_config: InterviewAppointmentConfig | None
    internship_offer_apply_schema: IdNameObject | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> JobConfigDetailBuilder: ...

class JobConfigDetailBuilder:
    def __init__(self) -> None: ...
    def offer_apply_schema(self, offer_apply_schema: IdNameObject) -> JobConfigDetailBuilder: ...
    def offer_process_conf(self, offer_process_conf: IdNameObject) -> JobConfigDetailBuilder: ...
    def recommended_evaluator_list(self, recommended_evaluator_list: list[IdNameObject]) -> JobConfigDetailBuilder: ...
    def assessment_template(self, assessment_template: IdNameObject) -> JobConfigDetailBuilder: ...
    def id(self, id: str) -> JobConfigDetailBuilder: ...
    def interview_round_list(self, interview_round_list: list[JobConfigInterviewRound]) -> JobConfigDetailBuilder: ...
    def interview_registration(self, interview_registration: RegistrationInfo) -> JobConfigDetailBuilder: ...
    def onboard_registration(self, onboard_registration: RegistrationInfo) -> JobConfigDetailBuilder: ...
    def interview_round_type_list(self, interview_round_type_list: list[JobConfigRoundTypeResult]) -> JobConfigDetailBuilder: ...
    def related_job_list(self, related_job_list: list[IdNameObject]) -> JobConfigDetailBuilder: ...
    def job_attribute(self, job_attribute: int) -> JobConfigDetailBuilder: ...
    def interview_appointment_config(self, interview_appointment_config: InterviewAppointmentConfig) -> JobConfigDetailBuilder: ...
    def internship_offer_apply_schema(self, internship_offer_apply_schema: IdNameObject) -> JobConfigDetailBuilder: ...
    def build(self) -> JobConfigDetail: ...
