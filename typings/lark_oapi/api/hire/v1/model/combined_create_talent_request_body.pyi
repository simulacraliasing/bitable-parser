from .talent_combined_award_info import TalentCombinedAwardInfo as TalentCombinedAwardInfo
from .talent_combined_basic_info import TalentCombinedBasicInfo as TalentCombinedBasicInfo
from .talent_combined_career_info import TalentCombinedCareerInfo as TalentCombinedCareerInfo
from .talent_combined_education_info import TalentCombinedEducationInfo as TalentCombinedEducationInfo
from .talent_combined_language_info import TalentCombinedLanguageInfo as TalentCombinedLanguageInfo
from .talent_combined_project_info import TalentCombinedProjectInfo as TalentCombinedProjectInfo
from .talent_combined_sns_info import TalentCombinedSnsInfo as TalentCombinedSnsInfo
from .talent_combined_work_info import TalentCombinedWorkInfo as TalentCombinedWorkInfo
from .talent_customized_data_object_value import TalentCustomizedDataObjectValue as TalentCustomizedDataObjectValue
from .talent_self_evaluation import TalentSelfEvaluation as TalentSelfEvaluation
from lark_oapi.core.construct import init as init

class CombinedCreateTalentRequestBody:
    init_source_id: str | None
    resume_source_id: str | None
    folder_id_list: list[str] | None
    creator_id: str | None
    creator_account_type: int | None
    resume_attachment_id: str | None
    basic_info: TalentCombinedBasicInfo | None
    education_list: list[TalentCombinedEducationInfo] | None
    career_list: list[TalentCombinedCareerInfo] | None
    project_list: list[TalentCombinedProjectInfo] | None
    works_list: list[TalentCombinedWorkInfo] | None
    award_list: list[TalentCombinedAwardInfo] | None
    language_list: list[TalentCombinedLanguageInfo] | None
    sns_list: list[TalentCombinedSnsInfo] | None
    preferred_city_code_list: list[str] | None
    self_evaluation: TalentSelfEvaluation | None
    customized_data: list[TalentCustomizedDataObjectValue] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> CombinedCreateTalentRequestBodyBuilder: ...

class CombinedCreateTalentRequestBodyBuilder:
    def __init__(self) -> None: ...
    def init_source_id(self, init_source_id: str) -> CombinedCreateTalentRequestBodyBuilder: ...
    def resume_source_id(self, resume_source_id: str) -> CombinedCreateTalentRequestBodyBuilder: ...
    def folder_id_list(self, folder_id_list: list[str]) -> CombinedCreateTalentRequestBodyBuilder: ...
    def creator_id(self, creator_id: str) -> CombinedCreateTalentRequestBodyBuilder: ...
    def creator_account_type(self, creator_account_type: int) -> CombinedCreateTalentRequestBodyBuilder: ...
    def resume_attachment_id(self, resume_attachment_id: str) -> CombinedCreateTalentRequestBodyBuilder: ...
    def basic_info(self, basic_info: TalentCombinedBasicInfo) -> CombinedCreateTalentRequestBodyBuilder: ...
    def education_list(self, education_list: list[TalentCombinedEducationInfo]) -> CombinedCreateTalentRequestBodyBuilder: ...
    def career_list(self, career_list: list[TalentCombinedCareerInfo]) -> CombinedCreateTalentRequestBodyBuilder: ...
    def project_list(self, project_list: list[TalentCombinedProjectInfo]) -> CombinedCreateTalentRequestBodyBuilder: ...
    def works_list(self, works_list: list[TalentCombinedWorkInfo]) -> CombinedCreateTalentRequestBodyBuilder: ...
    def award_list(self, award_list: list[TalentCombinedAwardInfo]) -> CombinedCreateTalentRequestBodyBuilder: ...
    def language_list(self, language_list: list[TalentCombinedLanguageInfo]) -> CombinedCreateTalentRequestBodyBuilder: ...
    def sns_list(self, sns_list: list[TalentCombinedSnsInfo]) -> CombinedCreateTalentRequestBodyBuilder: ...
    def preferred_city_code_list(self, preferred_city_code_list: list[str]) -> CombinedCreateTalentRequestBodyBuilder: ...
    def self_evaluation(self, self_evaluation: TalentSelfEvaluation) -> CombinedCreateTalentRequestBodyBuilder: ...
    def customized_data(self, customized_data: list[TalentCustomizedDataObjectValue]) -> CombinedCreateTalentRequestBodyBuilder: ...
    def build(self) -> CombinedCreateTalentRequestBody: ...
