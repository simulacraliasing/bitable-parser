from .five_start_scoring_result import FiveStartScoringResult as FiveStartScoringResult
from .select_option_result import SelectOptionResult as SelectOptionResult
from lark_oapi.core.construct import init as init

class Question:
    question_id: str | None
    question_name: str | None
    question_en_name: str | None
    question_desc: str | None
    question_en_desc: str | None
    question_type: int | None
    is_required: bool | None
    select_option_result_list: list[SelectOptionResult] | None
    five_start_scoring_result: FiveStartScoringResult | None
    description_result: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> QuestionBuilder: ...

class QuestionBuilder:
    def __init__(self) -> None: ...
    def question_id(self, question_id: str) -> QuestionBuilder: ...
    def question_name(self, question_name: str) -> QuestionBuilder: ...
    def question_en_name(self, question_en_name: str) -> QuestionBuilder: ...
    def question_desc(self, question_desc: str) -> QuestionBuilder: ...
    def question_en_desc(self, question_en_desc: str) -> QuestionBuilder: ...
    def question_type(self, question_type: int) -> QuestionBuilder: ...
    def is_required(self, is_required: bool) -> QuestionBuilder: ...
    def select_option_result_list(self, select_option_result_list: list[SelectOptionResult]) -> QuestionBuilder: ...
    def five_start_scoring_result(self, five_start_scoring_result: FiveStartScoringResult) -> QuestionBuilder: ...
    def description_result(self, description_result: str) -> QuestionBuilder: ...
    def build(self) -> Question: ...
