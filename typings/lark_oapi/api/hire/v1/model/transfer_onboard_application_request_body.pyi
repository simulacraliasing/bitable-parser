from lark_oapi.core.construct import init as init

class TransferOnboardApplicationRequestBody:
    actual_onboard_time: int | None
    expected_conversion_time: int | None
    job_requirement_id: str | None
    operator_id: str | None
    onboard_city_code: str | None
    department: str | None
    leader: str | None
    sequence: str | None
    level: str | None
    employee_type: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> TransferOnboardApplicationRequestBodyBuilder: ...

class TransferOnboardApplicationRequestBodyBuilder:
    def __init__(self) -> None: ...
    def actual_onboard_time(self, actual_onboard_time: int) -> TransferOnboardApplicationRequestBodyBuilder: ...
    def expected_conversion_time(self, expected_conversion_time: int) -> TransferOnboardApplicationRequestBodyBuilder: ...
    def job_requirement_id(self, job_requirement_id: str) -> TransferOnboardApplicationRequestBodyBuilder: ...
    def operator_id(self, operator_id: str) -> TransferOnboardApplicationRequestBodyBuilder: ...
    def onboard_city_code(self, onboard_city_code: str) -> TransferOnboardApplicationRequestBodyBuilder: ...
    def department(self, department: str) -> TransferOnboardApplicationRequestBodyBuilder: ...
    def leader(self, leader: str) -> TransferOnboardApplicationRequestBodyBuilder: ...
    def sequence(self, sequence: str) -> TransferOnboardApplicationRequestBodyBuilder: ...
    def level(self, level: str) -> TransferOnboardApplicationRequestBodyBuilder: ...
    def employee_type(self, employee_type: str) -> TransferOnboardApplicationRequestBodyBuilder: ...
    def build(self) -> TransferOnboardApplicationRequestBody: ...
