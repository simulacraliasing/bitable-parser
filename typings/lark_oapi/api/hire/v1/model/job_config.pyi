from .interview_appointment_config import InterviewAppointmentConfig as InterviewAppointmentConfig
from .job_config_interview_round_conf import JobConfigInterviewRoundConf as JobConfigInterviewRoundConf
from .job_config_round_type import JobConfigRoundType as JobConfigRoundType
from lark_oapi.core.construct import init as init

class JobConfig:
    offer_apply_schema_id: str | None
    offer_process_conf: str | None
    recommended_evaluator_id_list: list[str] | None
    update_option_list: list[int] | None
    assessment_template_biz_id: str | None
    interview_round_conf_list: list[JobConfigInterviewRoundConf] | None
    jr_id_list: list[str] | None
    interview_registration_schema_id: str | None
    onboard_registration_schema_id: str | None
    interview_round_type_conf_list: list[JobConfigRoundType] | None
    related_job_id_list: list[str] | None
    interview_appointment_config: InterviewAppointmentConfig | None
    portal_website_apply_form_schema_id: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> JobConfigBuilder: ...

class JobConfigBuilder:
    def __init__(self) -> None: ...
    def offer_apply_schema_id(self, offer_apply_schema_id: str) -> JobConfigBuilder: ...
    def offer_process_conf(self, offer_process_conf: str) -> JobConfigBuilder: ...
    def recommended_evaluator_id_list(self, recommended_evaluator_id_list: list[str]) -> JobConfigBuilder: ...
    def update_option_list(self, update_option_list: list[int]) -> JobConfigBuilder: ...
    def assessment_template_biz_id(self, assessment_template_biz_id: str) -> JobConfigBuilder: ...
    def interview_round_conf_list(self, interview_round_conf_list: list[JobConfigInterviewRoundConf]) -> JobConfigBuilder: ...
    def jr_id_list(self, jr_id_list: list[str]) -> JobConfigBuilder: ...
    def interview_registration_schema_id(self, interview_registration_schema_id: str) -> JobConfigBuilder: ...
    def onboard_registration_schema_id(self, onboard_registration_schema_id: str) -> JobConfigBuilder: ...
    def interview_round_type_conf_list(self, interview_round_type_conf_list: list[JobConfigRoundType]) -> JobConfigBuilder: ...
    def related_job_id_list(self, related_job_id_list: list[str]) -> JobConfigBuilder: ...
    def interview_appointment_config(self, interview_appointment_config: InterviewAppointmentConfig) -> JobConfigBuilder: ...
    def portal_website_apply_form_schema_id(self, portal_website_apply_form_schema_id: str) -> JobConfigBuilder: ...
    def build(self) -> JobConfig: ...
