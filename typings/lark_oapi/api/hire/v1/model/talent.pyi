from .registration_basic_info import RegistrationBasicInfo as RegistrationBasicInfo
from .talent_award_info import TalentAwardInfo as TalentAwardInfo
from .talent_basic_info import TalentBasicInfo as TalentBasicInfo
from .talent_career_info import TalentCareerInfo as TalentCareerInfo
from .talent_customized_data import TalentCustomizedData as TalentCustomizedData
from .talent_education_info import TalentEducationInfo as TalentEducationInfo
from .talent_interview_registration_simple import TalentInterviewRegistrationSimple as TalentInterviewRegistrationSimple
from .talent_language_info import TalentLanguageInfo as TalentLanguageInfo
from .talent_project_info import TalentProjectInfo as TalentProjectInfo
from .talent_resume_source import TalentResumeSource as TalentResumeSource
from .talent_sns_info import TalentSnsInfo as TalentSnsInfo
from .talent_works_info import TalentWorksInfo as TalentWorksInfo
from lark_oapi.core.construct import init as init

class Talent:
    id: str | None
    is_in_agency_period: bool | None
    is_onboarded: bool | None
    basic_info: TalentBasicInfo | None
    education_list: list[TalentEducationInfo] | None
    career_list: list[TalentCareerInfo] | None
    project_list: list[TalentProjectInfo] | None
    works_list: list[TalentWorksInfo] | None
    award_list: list[TalentAwardInfo] | None
    language_list: list[TalentLanguageInfo] | None
    sns_list: list[TalentSnsInfo] | None
    resume_source_list: list[TalentResumeSource] | None
    interview_registration_list: list[TalentInterviewRegistrationSimple] | None
    registration_list: list[RegistrationBasicInfo] | None
    resume_attachment_id_list: list[str] | None
    customized_data_list: list[TalentCustomizedData] | None
    top_degree: int | None
    first_degree: int | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> TalentBuilder: ...

class TalentBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> TalentBuilder: ...
    def is_in_agency_period(self, is_in_agency_period: bool) -> TalentBuilder: ...
    def is_onboarded(self, is_onboarded: bool) -> TalentBuilder: ...
    def basic_info(self, basic_info: TalentBasicInfo) -> TalentBuilder: ...
    def education_list(self, education_list: list[TalentEducationInfo]) -> TalentBuilder: ...
    def career_list(self, career_list: list[TalentCareerInfo]) -> TalentBuilder: ...
    def project_list(self, project_list: list[TalentProjectInfo]) -> TalentBuilder: ...
    def works_list(self, works_list: list[TalentWorksInfo]) -> TalentBuilder: ...
    def award_list(self, award_list: list[TalentAwardInfo]) -> TalentBuilder: ...
    def language_list(self, language_list: list[TalentLanguageInfo]) -> TalentBuilder: ...
    def sns_list(self, sns_list: list[TalentSnsInfo]) -> TalentBuilder: ...
    def resume_source_list(self, resume_source_list: list[TalentResumeSource]) -> TalentBuilder: ...
    def interview_registration_list(self, interview_registration_list: list[TalentInterviewRegistrationSimple]) -> TalentBuilder: ...
    def registration_list(self, registration_list: list[RegistrationBasicInfo]) -> TalentBuilder: ...
    def resume_attachment_id_list(self, resume_attachment_id_list: list[str]) -> TalentBuilder: ...
    def customized_data_list(self, customized_data_list: list[TalentCustomizedData]) -> TalentBuilder: ...
    def top_degree(self, top_degree: int) -> TalentBuilder: ...
    def first_degree(self, first_degree: int) -> TalentBuilder: ...
    def build(self) -> Talent: ...
