from .external_interview_assessment import ExternalInterviewAssessment as ExternalInterviewAssessment
from lark_oapi.core.construct import init as init

class ExternalInterview:
    external_id: str | None
    external_application_id: str | None
    id: str | None
    participate_status: int | None
    begin_time: int | None
    end_time: int | None
    interview_assessments: list[ExternalInterviewAssessment] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> ExternalInterviewBuilder: ...

class ExternalInterviewBuilder:
    def __init__(self) -> None: ...
    def external_id(self, external_id: str) -> ExternalInterviewBuilder: ...
    def external_application_id(self, external_application_id: str) -> ExternalInterviewBuilder: ...
    def id(self, id: str) -> ExternalInterviewBuilder: ...
    def participate_status(self, participate_status: int) -> ExternalInterviewBuilder: ...
    def begin_time(self, begin_time: int) -> ExternalInterviewBuilder: ...
    def end_time(self, end_time: int) -> ExternalInterviewBuilder: ...
    def interview_assessments(self, interview_assessments: list[ExternalInterviewAssessment]) -> ExternalInterviewBuilder: ...
    def build(self) -> ExternalInterview: ...
