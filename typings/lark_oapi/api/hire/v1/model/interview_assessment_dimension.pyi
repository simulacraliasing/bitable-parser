from .i18n import I18n as I18n
from .interview_assessment_dimension_args import InterviewAssessmentDimensionArgs as InterviewAssessmentDimensionArgs
from lark_oapi.core.construct import init as init

class InterviewAssessmentDimension:
    id: str | None
    name: I18n | None
    description: I18n | None
    enabled: bool | None
    seq: int | None
    required: bool | None
    dimension_type: int | None
    args: InterviewAssessmentDimensionArgs | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> InterviewAssessmentDimensionBuilder: ...

class InterviewAssessmentDimensionBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> InterviewAssessmentDimensionBuilder: ...
    def name(self, name: I18n) -> InterviewAssessmentDimensionBuilder: ...
    def description(self, description: I18n) -> InterviewAssessmentDimensionBuilder: ...
    def enabled(self, enabled: bool) -> InterviewAssessmentDimensionBuilder: ...
    def seq(self, seq: int) -> InterviewAssessmentDimensionBuilder: ...
    def required(self, required: bool) -> InterviewAssessmentDimensionBuilder: ...
    def dimension_type(self, dimension_type: int) -> InterviewAssessmentDimensionBuilder: ...
    def args(self, args: InterviewAssessmentDimensionArgs) -> InterviewAssessmentDimensionBuilder: ...
    def build(self) -> InterviewAssessmentDimension: ...
