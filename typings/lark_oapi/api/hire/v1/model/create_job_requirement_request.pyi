from .job_requirement import JobRequirement as JobRequirement
from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class CreateJobRequirementRequest(BaseRequest):
    user_id_type: str | None
    department_id_type: str | None
    job_level_id_type: str | None
    job_family_id_type: str | None
    employee_type_id_type: str | None
    request_body: JobRequirement | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> CreateJobRequirementRequestBuilder: ...

class CreateJobRequirementRequestBuilder:
    def __init__(self) -> None: ...
    def user_id_type(self, user_id_type: str) -> CreateJobRequirementRequestBuilder: ...
    def department_id_type(self, department_id_type: str) -> CreateJobRequirementRequestBuilder: ...
    def job_level_id_type(self, job_level_id_type: str) -> CreateJobRequirementRequestBuilder: ...
    def job_family_id_type(self, job_family_id_type: str) -> CreateJobRequirementRequestBuilder: ...
    def employee_type_id_type(self, employee_type_id_type: str) -> CreateJobRequirementRequestBuilder: ...
    def request_body(self, request_body: JobRequirement) -> CreateJobRequirementRequestBuilder: ...
    def build(self) -> CreateJobRequirementRequest: ...
