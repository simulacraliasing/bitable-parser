from .application_offer_basic_info import ApplicationOfferBasicInfo as ApplicationOfferBasicInfo
from .application_offer_custom_module import ApplicationOfferCustomModule as ApplicationOfferCustomModule
from .application_offer_salary_plan import ApplicationOfferSalaryPlan as ApplicationOfferSalaryPlan
from .offer_job_info import OfferJobInfo as OfferJobInfo
from .offer_send_record import OfferSendRecord as OfferSendRecord
from lark_oapi.core.construct import init as init

class Offer:
    id: str | None
    application_id: str | None
    basic_info: ApplicationOfferBasicInfo | None
    salary_plan: ApplicationOfferSalaryPlan | None
    schema_id: str | None
    offer_status: int | None
    offer_type: int | None
    job_info: OfferJobInfo | None
    customized_module_list: list[ApplicationOfferCustomModule] | None
    job_requirement_id: str | None
    offer_send_record_list: list[OfferSendRecord] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> OfferBuilder: ...

class OfferBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> OfferBuilder: ...
    def application_id(self, application_id: str) -> OfferBuilder: ...
    def basic_info(self, basic_info: ApplicationOfferBasicInfo) -> OfferBuilder: ...
    def salary_plan(self, salary_plan: ApplicationOfferSalaryPlan) -> OfferBuilder: ...
    def schema_id(self, schema_id: str) -> OfferBuilder: ...
    def offer_status(self, offer_status: int) -> OfferBuilder: ...
    def offer_type(self, offer_type: int) -> OfferBuilder: ...
    def job_info(self, job_info: OfferJobInfo) -> OfferBuilder: ...
    def customized_module_list(self, customized_module_list: list[ApplicationOfferCustomModule]) -> OfferBuilder: ...
    def job_requirement_id(self, job_requirement_id: str) -> OfferBuilder: ...
    def offer_send_record_list(self, offer_send_record_list: list[OfferSendRecord]) -> OfferBuilder: ...
    def build(self) -> Offer: ...
