from .common_address import CommonAddress as CommonAddress
from .job_config_detail import JobConfigDetail as JobConfigDetail
from .job_detail_basic_info import JobDetailBasicInfo as JobDetailBasicInfo
from .job_detail_tag import JobDetailTag as JobDetailTag
from .job_requirement_simple import JobRequirementSimple as JobRequirementSimple
from .job_storefront import JobStorefront as JobStorefront
from .job_user_info import JobUserInfo as JobUserInfo
from lark_oapi.core.construct import init as init

class JobDetail:
    basic_info: JobDetailBasicInfo | None
    recruiter: JobUserInfo | None
    assistant_list: list[JobUserInfo] | None
    hiring_manager_list: list[JobUserInfo] | None
    job_requirement_list: list[JobRequirementSimple] | None
    address_list: list[CommonAddress] | None
    job_config: JobConfigDetail | None
    storefront_list: list[JobStorefront] | None
    tag_list: list[JobDetailTag] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> JobDetailBuilder: ...

class JobDetailBuilder:
    def __init__(self) -> None: ...
    def basic_info(self, basic_info: JobDetailBasicInfo) -> JobDetailBuilder: ...
    def recruiter(self, recruiter: JobUserInfo) -> JobDetailBuilder: ...
    def assistant_list(self, assistant_list: list[JobUserInfo]) -> JobDetailBuilder: ...
    def hiring_manager_list(self, hiring_manager_list: list[JobUserInfo]) -> JobDetailBuilder: ...
    def job_requirement_list(self, job_requirement_list: list[JobRequirementSimple]) -> JobDetailBuilder: ...
    def address_list(self, address_list: list[CommonAddress]) -> JobDetailBuilder: ...
    def job_config(self, job_config: JobConfigDetail) -> JobDetailBuilder: ...
    def storefront_list(self, storefront_list: list[JobStorefront]) -> JobDetailBuilder: ...
    def tag_list(self, tag_list: list[JobDetailTag]) -> JobDetailBuilder: ...
    def build(self) -> JobDetail: ...
