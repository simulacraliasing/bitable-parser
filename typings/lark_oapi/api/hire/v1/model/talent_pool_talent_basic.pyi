from .common_city_info import CommonCityInfo as CommonCityInfo
from .talent_detail_talent_nationality import TalentDetailTalentNationality as TalentDetailTalentNationality
from lark_oapi.core.construct import init as init

class TalentPoolTalentBasic:
    id: str | None
    name: str | None
    mobile: str | None
    mobile_code: str | None
    mobile_country_code: str | None
    email: str | None
    experience_years: int | None
    age: int | None
    nationality: TalentDetailTalentNationality | None
    gender: int | None
    current_city: CommonCityInfo | None
    hometown_city: CommonCityInfo | None
    preferred_city_list: list[CommonCityInfo] | None
    identification_type: int | None
    identification_number: str | None
    birthday: int | None
    creator_id: str | None
    marital_status: int | None
    update_time: str | None
    create_time: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> TalentPoolTalentBasicBuilder: ...

class TalentPoolTalentBasicBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> TalentPoolTalentBasicBuilder: ...
    def name(self, name: str) -> TalentPoolTalentBasicBuilder: ...
    def mobile(self, mobile: str) -> TalentPoolTalentBasicBuilder: ...
    def mobile_code(self, mobile_code: str) -> TalentPoolTalentBasicBuilder: ...
    def mobile_country_code(self, mobile_country_code: str) -> TalentPoolTalentBasicBuilder: ...
    def email(self, email: str) -> TalentPoolTalentBasicBuilder: ...
    def experience_years(self, experience_years: int) -> TalentPoolTalentBasicBuilder: ...
    def age(self, age: int) -> TalentPoolTalentBasicBuilder: ...
    def nationality(self, nationality: TalentDetailTalentNationality) -> TalentPoolTalentBasicBuilder: ...
    def gender(self, gender: int) -> TalentPoolTalentBasicBuilder: ...
    def current_city(self, current_city: CommonCityInfo) -> TalentPoolTalentBasicBuilder: ...
    def hometown_city(self, hometown_city: CommonCityInfo) -> TalentPoolTalentBasicBuilder: ...
    def preferred_city_list(self, preferred_city_list: list[CommonCityInfo]) -> TalentPoolTalentBasicBuilder: ...
    def identification_type(self, identification_type: int) -> TalentPoolTalentBasicBuilder: ...
    def identification_number(self, identification_number: str) -> TalentPoolTalentBasicBuilder: ...
    def birthday(self, birthday: int) -> TalentPoolTalentBasicBuilder: ...
    def creator_id(self, creator_id: str) -> TalentPoolTalentBasicBuilder: ...
    def marital_status(self, marital_status: int) -> TalentPoolTalentBasicBuilder: ...
    def update_time(self, update_time: str) -> TalentPoolTalentBasicBuilder: ...
    def create_time(self, create_time: str) -> TalentPoolTalentBasicBuilder: ...
    def build(self) -> TalentPoolTalentBasic: ...
