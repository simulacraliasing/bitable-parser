from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class ListApplicationRequest(BaseRequest):
    process_id: str | None
    stage_id: str | None
    talent_id: str | None
    active_status: str | None
    job_id: str | None
    lock_status: list[int] | None
    page_token: str | None
    page_size: int | None
    update_start_time: int | None
    update_end_time: int | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> ListApplicationRequestBuilder: ...

class ListApplicationRequestBuilder:
    def __init__(self) -> None: ...
    def process_id(self, process_id: str) -> ListApplicationRequestBuilder: ...
    def stage_id(self, stage_id: str) -> ListApplicationRequestBuilder: ...
    def talent_id(self, talent_id: str) -> ListApplicationRequestBuilder: ...
    def active_status(self, active_status: str) -> ListApplicationRequestBuilder: ...
    def job_id(self, job_id: str) -> ListApplicationRequestBuilder: ...
    def lock_status(self, lock_status: list[int]) -> ListApplicationRequestBuilder: ...
    def page_token(self, page_token: str) -> ListApplicationRequestBuilder: ...
    def page_size(self, page_size: int) -> ListApplicationRequestBuilder: ...
    def update_start_time(self, update_start_time: int) -> ListApplicationRequestBuilder: ...
    def update_end_time(self, update_end_time: int) -> ListApplicationRequestBuilder: ...
    def build(self) -> ListApplicationRequest: ...
