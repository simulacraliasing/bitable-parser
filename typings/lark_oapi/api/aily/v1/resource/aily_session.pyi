from ..model.create_aily_session_request import CreateAilySessionRequest as CreateAilySessionRequest
from ..model.create_aily_session_response import CreateAilySessionResponse as CreateAilySessionResponse
from ..model.delete_aily_session_request import DeleteAilySessionRequest as DeleteAilySessionRequest
from ..model.delete_aily_session_response import DeleteAilySessionResponse as DeleteAilySessionResponse
from ..model.get_aily_session_request import GetAilySessionRequest as GetAilySessionRequest
from ..model.get_aily_session_response import GetAilySessionResponse as GetAilySessionResponse
from ..model.update_aily_session_request import UpdateAilySessionRequest as UpdateAilySessionRequest
from ..model.update_aily_session_response import UpdateAilySessionResponse as UpdateAilySessionResponse
from lark_oapi.core import JSON as JSON
from lark_oapi.core.const import APPLICATION_JSON as APPLICATION_JSON, CONTENT_TYPE as CONTENT_TYPE, UTF_8 as UTF_8
from lark_oapi.core.http import Transport as Transport
from lark_oapi.core.model import Config as Config, RawResponse as RawResponse, RequestOption as RequestOption
from lark_oapi.core.token import verify as verify
from lark_oapi.core.utils import Files as Files
from requests_toolbelt import MultipartEncoder as MultipartEncoder

class AilySession:
    config: Config
    def __init__(self, config: Config) -> None: ...
    def create(self, request: CreateAilySessionRequest, option: RequestOption | None = None) -> CreateAilySessionResponse: ...
    async def acreate(self, request: CreateAilySessionRequest, option: RequestOption | None = None) -> CreateAilySessionResponse: ...
    def delete(self, request: DeleteAilySessionRequest, option: RequestOption | None = None) -> DeleteAilySessionResponse: ...
    async def adelete(self, request: DeleteAilySessionRequest, option: RequestOption | None = None) -> DeleteAilySessionResponse: ...
    def get(self, request: GetAilySessionRequest, option: RequestOption | None = None) -> GetAilySessionResponse: ...
    async def aget(self, request: GetAilySessionRequest, option: RequestOption | None = None) -> GetAilySessionResponse: ...
    def update(self, request: UpdateAilySessionRequest, option: RequestOption | None = None) -> UpdateAilySessionResponse: ...
    async def aupdate(self, request: UpdateAilySessionRequest, option: RequestOption | None = None) -> UpdateAilySessionResponse: ...
