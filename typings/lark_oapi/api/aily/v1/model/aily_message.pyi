from .aily_mention import AilyMention as AilyMention
from .aily_message_file import AilyMessageFile as AilyMessageFile
from .aily_sender import AilySender as AilySender
from lark_oapi.core.construct import init as init

class AilyMessage:
    id: str | None
    session_id: str | None
    run_id: str | None
    content_type: str | None
    content: str | None
    files: list[AilyMessageFile] | None
    quote_message_id: str | None
    sender: AilySender | None
    mentions: list[AilyMention] | None
    plain_text: str | None
    created_at: int | None
    status: str | None
    reasoning_content: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> AilyMessageBuilder: ...

class AilyMessageBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> AilyMessageBuilder: ...
    def session_id(self, session_id: str) -> AilyMessageBuilder: ...
    def run_id(self, run_id: str) -> AilyMessageBuilder: ...
    def content_type(self, content_type: str) -> AilyMessageBuilder: ...
    def content(self, content: str) -> AilyMessageBuilder: ...
    def files(self, files: list[AilyMessageFile]) -> AilyMessageBuilder: ...
    def quote_message_id(self, quote_message_id: str) -> AilyMessageBuilder: ...
    def sender(self, sender: AilySender) -> AilyMessageBuilder: ...
    def mentions(self, mentions: list[AilyMention]) -> AilyMessageBuilder: ...
    def plain_text(self, plain_text: str) -> AilyMessageBuilder: ...
    def created_at(self, created_at: int) -> AilyMessageBuilder: ...
    def status(self, status: str) -> AilyMessageBuilder: ...
    def reasoning_content(self, reasoning_content: str) -> AilyMessageBuilder: ...
    def build(self) -> AilyMessage: ...
