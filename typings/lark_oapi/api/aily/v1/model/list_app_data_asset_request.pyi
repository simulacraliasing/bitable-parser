from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class ListAppDataAssetRequest(BaseRequest):
    page_size: int | None
    page_token: str | None
    keyword: str | None
    data_asset_ids: list[str] | None
    data_asset_tag_ids: list[str] | None
    with_data_asset_item: bool | None
    with_connect_status: bool | None
    app_id: str | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> ListAppDataAssetRequestBuilder: ...

class ListAppDataAssetRequestBuilder:
    def __init__(self) -> None: ...
    def page_size(self, page_size: int) -> ListAppDataAssetRequestBuilder: ...
    def page_token(self, page_token: str) -> ListAppDataAssetRequestBuilder: ...
    def keyword(self, keyword: str) -> ListAppDataAssetRequestBuilder: ...
    def data_asset_ids(self, data_asset_ids: list[str]) -> ListAppDataAssetRequestBuilder: ...
    def data_asset_tag_ids(self, data_asset_tag_ids: list[str]) -> ListAppDataAssetRequestBuilder: ...
    def with_data_asset_item(self, with_data_asset_item: bool) -> ListAppDataAssetRequestBuilder: ...
    def with_connect_status(self, with_connect_status: bool) -> ListAppDataAssetRequestBuilder: ...
    def app_id(self, app_id: str) -> ListAppDataAssetRequestBuilder: ...
    def build(self) -> ListAppDataAssetRequest: ...
