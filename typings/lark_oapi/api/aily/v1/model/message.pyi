from .builtin_action import BuiltinAction as BuiltinAction
from .message_error import MessageError as MessageError
from .message_progress import MessageProgress as MessageProgress
from .sender import Sender as Sender
from .skill_base_info import SkillBaseInfo as SkillBaseInfo
from lark_oapi.core.construct import init as init

class Message:
    id: int | None
    title: str | None
    content: str | None
    message_status: str | None
    builtin_actions: list[BuiltinAction] | None
    skill_base_infos: list[SkillBaseInfo] | None
    message_progress: MessageProgress | None
    sender: Sender | None
    error: MessageError | None
    trigger_type: str | None
    visibility: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> MessageBuilder: ...

class MessageBuilder:
    def __init__(self) -> None: ...
    def id(self, id: int) -> MessageBuilder: ...
    def title(self, title: str) -> MessageBuilder: ...
    def content(self, content: str) -> MessageBuilder: ...
    def message_status(self, message_status: str) -> MessageBuilder: ...
    def builtin_actions(self, builtin_actions: list[BuiltinAction]) -> MessageBuilder: ...
    def skill_base_infos(self, skill_base_infos: list[SkillBaseInfo]) -> MessageBuilder: ...
    def message_progress(self, message_progress: MessageProgress) -> MessageBuilder: ...
    def sender(self, sender: Sender) -> MessageBuilder: ...
    def error(self, error: MessageError) -> MessageBuilder: ...
    def trigger_type(self, trigger_type: str) -> MessageBuilder: ...
    def visibility(self, visibility: str) -> MessageBuilder: ...
    def build(self) -> Message: ...
