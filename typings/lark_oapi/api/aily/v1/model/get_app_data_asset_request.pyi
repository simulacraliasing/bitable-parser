from lark_oapi.core.enum import AccessTokenType as AccessTokenType, HttpMethod as HttpMethod
from lark_oapi.core.model import BaseRequest as BaseRequest

class GetAppDataAssetRequest(BaseRequest):
    with_data_asset_item: bool | None
    with_connect_status: bool | None
    tenant_type: str | None
    app_id: str | None
    data_asset_id: str | None
    def __init__(self) -> None: ...
    @staticmethod
    def builder() -> GetAppDataAssetRequestBuilder: ...

class GetAppDataAssetRequestBuilder:
    def __init__(self) -> None: ...
    def with_data_asset_item(self, with_data_asset_item: bool) -> GetAppDataAssetRequestBuilder: ...
    def with_connect_status(self, with_connect_status: bool) -> GetAppDataAssetRequestBuilder: ...
    def tenant_type(self, tenant_type: str) -> GetAppDataAssetRequestBuilder: ...
    def app_id(self, app_id: str) -> GetAppDataAssetRequestBuilder: ...
    def data_asset_id(self, data_asset_id: str) -> GetAppDataAssetRequestBuilder: ...
    def build(self) -> GetAppDataAssetRequest: ...
