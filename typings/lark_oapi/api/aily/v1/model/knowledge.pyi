from .aily_knowledge_dataset import AilyKnowledgeDataset as AilyKnowledgeDataset
from .aily_knowledge_datatable import AilyKnowledgeDatatable as AilyKnowledgeDatatable
from .aily_knowledge_docs import AilyKnowledgeDocs as AilyKnowledgeDocs
from .aily_knowledge_file import AilyKnowledgeFile as AilyKnowledgeFile
from .aily_knowledge_folder import AilyKnowledgeFolder as AilyKnowledgeFolder
from .aily_knowledge_helpdesk import AilyKnowledgeHelpdesk as AilyKnowledgeHelpdesk
from .aily_knowledge_web import AilyKnowledgeWeb as AilyKnowledgeWeb
from .aily_knowledge_wiki_space import AilyKnowledgeWikiSpace as AilyKnowledgeWikiSpace
from lark_oapi.core.construct import init as init

class Knowledge:
    id: str | None
    knowledge_base_id: str | None
    status: str | None
    title: str | None
    type: str | None
    file: AilyKnowledgeFile | None
    docs: AilyKnowledgeDocs | None
    wiki_space: AilyKnowledgeWikiSpace | None
    folder: AilyKnowledgeFolder | None
    helpdesk: AilyKnowledgeHelpdesk | None
    datatable: AilyKnowledgeDatatable | None
    dataset: AilyKnowledgeDataset | None
    web: AilyKnowledgeWeb | None
    chunk_count: int | None
    create_time: int | None
    update_time: int | None
    fail_message: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> KnowledgeBuilder: ...

class KnowledgeBuilder:
    def __init__(self) -> None: ...
    def id(self, id: str) -> KnowledgeBuilder: ...
    def knowledge_base_id(self, knowledge_base_id: str) -> KnowledgeBuilder: ...
    def status(self, status: str) -> KnowledgeBuilder: ...
    def title(self, title: str) -> KnowledgeBuilder: ...
    def type(self, type: str) -> KnowledgeBuilder: ...
    def file(self, file: AilyKnowledgeFile) -> KnowledgeBuilder: ...
    def docs(self, docs: AilyKnowledgeDocs) -> KnowledgeBuilder: ...
    def wiki_space(self, wiki_space: AilyKnowledgeWikiSpace) -> KnowledgeBuilder: ...
    def folder(self, folder: AilyKnowledgeFolder) -> KnowledgeBuilder: ...
    def helpdesk(self, helpdesk: AilyKnowledgeHelpdesk) -> KnowledgeBuilder: ...
    def datatable(self, datatable: AilyKnowledgeDatatable) -> KnowledgeBuilder: ...
    def dataset(self, dataset: AilyKnowledgeDataset) -> KnowledgeBuilder: ...
    def web(self, web: AilyKnowledgeWeb) -> KnowledgeBuilder: ...
    def chunk_count(self, chunk_count: int) -> KnowledgeBuilder: ...
    def create_time(self, create_time: int) -> KnowledgeBuilder: ...
    def update_time(self, update_time: int) -> KnowledgeBuilder: ...
    def fail_message(self, fail_message: str) -> KnowledgeBuilder: ...
    def build(self) -> Knowledge: ...
