from lark_oapi.core.construct import init as init

class SourceSetting:
    api_id: str | None
    api_name: str | None
    label: dict[str, str] | None
    from_type: str | None
    auth_key: str | None
    auth_name: dict[str, str] | None
    data_source_integration_type: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> SourceSettingBuilder: ...

class SourceSettingBuilder:
    def __init__(self) -> None: ...
    def api_id(self, api_id: str) -> SourceSettingBuilder: ...
    def api_name(self, api_name: str) -> SourceSettingBuilder: ...
    def label(self, label: dict[str, str]) -> SourceSettingBuilder: ...
    def from_type(self, from_type: str) -> SourceSettingBuilder: ...
    def auth_key(self, auth_key: str) -> SourceSettingBuilder: ...
    def auth_name(self, auth_name: dict[str, str]) -> SourceSettingBuilder: ...
    def data_source_integration_type(self, data_source_integration_type: str) -> SourceSettingBuilder: ...
    def build(self) -> SourceSetting: ...
