from .aily_knowledge_ask_process_data import AilyKnowledgeAskProcessData as AilyKnowledgeAskProcessData
from .aily_knowledge_faq import AilyKnowledgeFaq as AilyKnowledgeFaq
from .aily_knowledge_message import AilyKnowledgeMessage as AilyKnowledgeMessage
from lark_oapi.core.construct import init as init

class AskAppKnowledgeResponseBody:
    status: str | None
    finish_type: str | None
    message: AilyKnowledgeMessage | None
    process_data: AilyKnowledgeAskProcessData | None
    faq_result: AilyKnowledgeFaq | None
    has_answer: bool | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> AskAppKnowledgeResponseBodyBuilder: ...

class AskAppKnowledgeResponseBodyBuilder:
    def __init__(self) -> None: ...
    def status(self, status: str) -> AskAppKnowledgeResponseBodyBuilder: ...
    def finish_type(self, finish_type: str) -> AskAppKnowledgeResponseBodyBuilder: ...
    def message(self, message: AilyKnowledgeMessage) -> AskAppKnowledgeResponseBodyBuilder: ...
    def process_data(self, process_data: AilyKnowledgeAskProcessData) -> AskAppKnowledgeResponseBodyBuilder: ...
    def faq_result(self, faq_result: AilyKnowledgeFaq) -> AskAppKnowledgeResponseBodyBuilder: ...
    def has_answer(self, has_answer: bool) -> AskAppKnowledgeResponseBodyBuilder: ...
    def build(self) -> AskAppKnowledgeResponseBody: ...
