from .dlp_execute_evidence import DlpExecuteEvidence as DlpExecuteEvidence
from lark_oapi.core.construct import init as init

class AppDlpExecuteLog:
    event_name: str | None
    user_id: str | None
    execute_time: int | None
    action_name: str | None
    hit_policies: list[str] | None
    entity_id: str | None
    evidences: DlpExecuteEvidence | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> AppDlpExecuteLogBuilder: ...

class AppDlpExecuteLogBuilder:
    def __init__(self) -> None: ...
    def event_name(self, event_name: str) -> AppDlpExecuteLogBuilder: ...
    def user_id(self, user_id: str) -> AppDlpExecuteLogBuilder: ...
    def execute_time(self, execute_time: int) -> AppDlpExecuteLogBuilder: ...
    def action_name(self, action_name: str) -> AppDlpExecuteLogBuilder: ...
    def hit_policies(self, hit_policies: list[str]) -> AppDlpExecuteLogBuilder: ...
    def entity_id(self, entity_id: str) -> AppDlpExecuteLogBuilder: ...
    def evidences(self, evidences: DlpExecuteEvidence) -> AppDlpExecuteLogBuilder: ...
    def build(self) -> AppDlpExecuteLog: ...
