from .simple_user import SimpleUser as SimpleUser
from .task_status import TaskStatus as TaskStatus
from .vault_export_file import VaultExportFile as VaultExportFile
from lark_oapi.core.construct import init as init

class VaultTask:
    task_id: str | None
    name: str | None
    size: str | None
    valid_days: int | None
    create_time: int | None
    extract_key: str | None
    creator: SimpleUser | None
    files: list[VaultExportFile] | None
    status: TaskStatus | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> VaultTaskBuilder: ...

class VaultTaskBuilder:
    def __init__(self) -> None: ...
    def task_id(self, task_id: str) -> VaultTaskBuilder: ...
    def name(self, name: str) -> VaultTaskBuilder: ...
    def size(self, size: str) -> VaultTaskBuilder: ...
    def valid_days(self, valid_days: int) -> VaultTaskBuilder: ...
    def create_time(self, create_time: int) -> VaultTaskBuilder: ...
    def extract_key(self, extract_key: str) -> VaultTaskBuilder: ...
    def creator(self, creator: SimpleUser) -> VaultTaskBuilder: ...
    def files(self, files: list[VaultExportFile]) -> VaultTaskBuilder: ...
    def status(self, status: TaskStatus) -> VaultTaskBuilder: ...
    def build(self) -> VaultTask: ...
