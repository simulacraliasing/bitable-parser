from .dlp_policy_hit_proof import DlpPolicyHitProof as DlpPolicyHitProof
from lark_oapi.core.construct import init as init

class DlpEvidenceDetail:
    keyword_hits: list[str] | None
    regular_hits: list[str] | None
    sensitive_hits: list[str] | None
    file_size_hits: list[str] | None
    file_type_hits: list[str] | None
    file_name_ext_hits: list[str] | None
    trigger_snippets: list[DlpPolicyHitProof] | None
    secure_label_hits: list[str] | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> DlpEvidenceDetailBuilder: ...

class DlpEvidenceDetailBuilder:
    def __init__(self) -> None: ...
    def keyword_hits(self, keyword_hits: list[str]) -> DlpEvidenceDetailBuilder: ...
    def regular_hits(self, regular_hits: list[str]) -> DlpEvidenceDetailBuilder: ...
    def sensitive_hits(self, sensitive_hits: list[str]) -> DlpEvidenceDetailBuilder: ...
    def file_size_hits(self, file_size_hits: list[str]) -> DlpEvidenceDetailBuilder: ...
    def file_type_hits(self, file_type_hits: list[str]) -> DlpEvidenceDetailBuilder: ...
    def file_name_ext_hits(self, file_name_ext_hits: list[str]) -> DlpEvidenceDetailBuilder: ...
    def trigger_snippets(self, trigger_snippets: list[DlpPolicyHitProof]) -> DlpEvidenceDetailBuilder: ...
    def secure_label_hits(self, secure_label_hits: list[str]) -> DlpEvidenceDetailBuilder: ...
    def build(self) -> DlpEvidenceDetail: ...
