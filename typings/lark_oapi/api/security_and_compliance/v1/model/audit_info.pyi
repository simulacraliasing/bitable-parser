from .api_audit_common_drawers import ApiAuditCommonDrawers as ApiAuditCommonDrawers
from .audit_context import AuditContext as AuditContext
from .audit_detail import AuditDetail as AuditDetail
from .audit_event_extend import AuditEventExtend as AuditEventExtend
from .audit_object_entity import AuditObjectEntity as AuditObjectEntity
from .audit_recipient_entity import AuditRecipientEntity as AuditRecipientEntity
from lark_oapi.core.construct import init as init

class AuditInfo:
    event_name: str | None
    department_ids: list[str] | None
    event_module: int | None
    operator_type: int | None
    operator_value: str | None
    objects: list[AuditObjectEntity] | None
    recipients: list[AuditRecipientEntity] | None
    event_time: int | None
    ip: str | None
    operator_app: str | None
    audit_context: AuditContext | None
    extend: AuditEventExtend | None
    event_id: str | None
    operator_app_name: str | None
    unique_id: str | None
    common_drawers: ApiAuditCommonDrawers | None
    audit_detail: AuditDetail | None
    operator_tenant: str | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> AuditInfoBuilder: ...

class AuditInfoBuilder:
    def __init__(self) -> None: ...
    def event_name(self, event_name: str) -> AuditInfoBuilder: ...
    def department_ids(self, department_ids: list[str]) -> AuditInfoBuilder: ...
    def event_module(self, event_module: int) -> AuditInfoBuilder: ...
    def operator_type(self, operator_type: int) -> AuditInfoBuilder: ...
    def operator_value(self, operator_value: str) -> AuditInfoBuilder: ...
    def objects(self, objects: list[AuditObjectEntity]) -> AuditInfoBuilder: ...
    def recipients(self, recipients: list[AuditRecipientEntity]) -> AuditInfoBuilder: ...
    def event_time(self, event_time: int) -> AuditInfoBuilder: ...
    def ip(self, ip: str) -> AuditInfoBuilder: ...
    def operator_app(self, operator_app: str) -> AuditInfoBuilder: ...
    def audit_context(self, audit_context: AuditContext) -> AuditInfoBuilder: ...
    def extend(self, extend: AuditEventExtend) -> AuditInfoBuilder: ...
    def event_id(self, event_id: str) -> AuditInfoBuilder: ...
    def operator_app_name(self, operator_app_name: str) -> AuditInfoBuilder: ...
    def unique_id(self, unique_id: str) -> AuditInfoBuilder: ...
    def common_drawers(self, common_drawers: ApiAuditCommonDrawers) -> AuditInfoBuilder: ...
    def audit_detail(self, audit_detail: AuditDetail) -> AuditInfoBuilder: ...
    def operator_tenant(self, operator_tenant: str) -> AuditInfoBuilder: ...
    def build(self) -> AuditInfo: ...
