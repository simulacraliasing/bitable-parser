from .dlp_proof_context import DlpProofContext as DlpProofContext
from lark_oapi.core.construct import init as init

class DlpDetectModeProofContext:
    detect_mode: int | None
    detect_name: str | None
    proof_contexts: list[DlpProofContext] | None
    hit_count: int | None
    def __init__(self, d=None) -> None: ...
    @staticmethod
    def builder() -> DlpDetectModeProofContextBuilder: ...

class DlpDetectModeProofContextBuilder:
    def __init__(self) -> None: ...
    def detect_mode(self, detect_mode: int) -> DlpDetectModeProofContextBuilder: ...
    def detect_name(self, detect_name: str) -> DlpDetectModeProofContextBuilder: ...
    def proof_contexts(self, proof_contexts: list[DlpProofContext]) -> DlpDetectModeProofContextBuilder: ...
    def hit_count(self, hit_count: int) -> DlpDetectModeProofContextBuilder: ...
    def build(self) -> DlpDetectModeProofContext: ...
