from _typeshed import Incomplete
from typing import Any, Iterable, Iterator, MutableMapping, MutableSequence, NoReturn, Sequence, overload

class BaseContainer(Sequence[_T]):
    def __init__(self, message_listener: Any) -> None: ...
    @overload
    def __getitem__(self, key: int) -> _T: ...
    @overload
    def __getitem__(self, key: slice) -> list[_T]: ...
    def __len__(self) -> int: ...
    def __ne__(self, other: Any) -> bool: ...
    __hash__: Incomplete
    def sort(self, *args, **kwargs) -> None: ...
    def reverse(self) -> None: ...

class RepeatedScalarFieldContainer(BaseContainer[_T], MutableSequence[_T]):
    def __init__(self, message_listener: Any, type_checker: Any) -> None: ...
    def append(self, value: _T) -> None: ...
    def insert(self, key: int, value: _T) -> None: ...
    def extend(self, elem_seq: Iterable[_T]) -> None: ...
    def MergeFrom(self, other: RepeatedScalarFieldContainer[_T] | Iterable[_T]) -> None: ...
    def remove(self, elem: _T): ...
    def pop(self, key: int | None = -1) -> _T: ...
    @overload
    def __setitem__(self, key: int, value: _T) -> None: ...
    @overload
    def __setitem__(self, key: slice, value: Iterable[_T]) -> None: ...
    def __delitem__(self, key: int | slice) -> None: ...
    def __eq__(self, other: Any) -> bool: ...
    def __deepcopy__(self, unused_memo: Any = None) -> RepeatedScalarFieldContainer[_T]: ...
    def __reduce__(self, **kwargs) -> NoReturn: ...

class RepeatedCompositeFieldContainer(BaseContainer[_T], MutableSequence[_T]):
    def __init__(self, message_listener: Any, message_descriptor: Any) -> None: ...
    def add(self, **kwargs: Any) -> _T: ...
    def append(self, value: _T) -> None: ...
    def insert(self, key: int, value: _T) -> None: ...
    def extend(self, elem_seq: Iterable[_T]) -> None: ...
    def MergeFrom(self, other: RepeatedCompositeFieldContainer[_T] | Iterable[_T]) -> None: ...
    def remove(self, elem: _T) -> None: ...
    def pop(self, key: int | None = -1) -> _T: ...
    @overload
    def __setitem__(self, key: int, value: _T) -> None: ...
    @overload
    def __setitem__(self, key: slice, value: Iterable[_T]) -> None: ...
    def __delitem__(self, key: int | slice) -> None: ...
    def __eq__(self, other: Any) -> bool: ...

class ScalarMap(MutableMapping[_K, _V]):
    def __init__(self, message_listener: Any, key_checker: Any, value_checker: Any, entry_descriptor: Any) -> None: ...
    def __getitem__(self, key: _K) -> _V: ...
    def __contains__(self, item: _K) -> bool: ...
    @overload
    def get(self, key: _K) -> _V | None: ...
    @overload
    def get(self, key: _K, default: _T) -> _V | _T: ...
    def __setitem__(self, key: _K, value: _V) -> _T: ...
    def __delitem__(self, key: _K) -> None: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterator[_K]: ...
    def MergeFrom(self, other: ScalarMap[_K, _V]) -> None: ...
    def InvalidateIterators(self) -> None: ...
    def clear(self) -> None: ...
    def GetEntryClass(self) -> Any: ...

class MessageMap(MutableMapping[_K, _V]):
    def __init__(self, message_listener: Any, message_descriptor: Any, key_checker: Any, entry_descriptor: Any) -> None: ...
    def __getitem__(self, key: _K) -> _V: ...
    def get_or_create(self, key: _K) -> _V: ...
    @overload
    def get(self, key: _K) -> _V | None: ...
    @overload
    def get(self, key: _K, default: _T) -> _V | _T: ...
    def __contains__(self, item: _K) -> bool: ...
    def __setitem__(self, key: _K, value: _V) -> NoReturn: ...
    def __delitem__(self, key: _K) -> None: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterator[_K]: ...
    def MergeFrom(self, other: MessageMap[_K, _V]) -> None: ...
    def InvalidateIterators(self) -> None: ...
    def clear(self) -> None: ...
    def GetEntryClass(self) -> Any: ...

class _UnknownField:
    def __init__(self, field_number, wire_type, data) -> None: ...
    def __lt__(self, other): ...
    def __eq__(self, other): ...

class UnknownFieldRef:
    def __init__(self, parent, index) -> None: ...
    @property
    def field_number(self): ...
    @property
    def wire_type(self): ...
    @property
    def data(self): ...

class UnknownFieldSet:
    def __init__(self) -> None: ...
    def __getitem__(self, index): ...
    def __len__(self) -> int: ...
    def __iter__(self): ...
    def __eq__(self, other): ...
