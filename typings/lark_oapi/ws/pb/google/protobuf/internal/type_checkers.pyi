from _typeshed import Incomplete
from lark_oapi.ws.pb.google.protobuf import descriptor as descriptor
from lark_oapi.ws.pb.google.protobuf.internal import decoder as decoder, encoder as encoder, wire_format as wire_format

def TruncateToFourByteFloat(original): ...
def ToShortestFloat(original): ...
def SupportsOpenEnums(field_descriptor): ...
def GetTypeChecker(field): ...

class TypeChecker:
    def __init__(self, *acceptable_types) -> None: ...
    def CheckValue(self, proposed_value): ...

class TypeCheckerWithDefault(TypeChecker):
    def __init__(self, default_value, *acceptable_types) -> None: ...
    def DefaultValue(self): ...

class BoolValueChecker:
    def CheckValue(self, proposed_value): ...
    def DefaultValue(self): ...

class IntValueChecker:
    def CheckValue(self, proposed_value): ...
    def DefaultValue(self): ...

class EnumValueChecker:
    def __init__(self, enum_type) -> None: ...
    def CheckValue(self, proposed_value): ...
    def DefaultValue(self): ...

class UnicodeValueChecker:
    def CheckValue(self, proposed_value): ...
    def DefaultValue(self): ...

class Int32ValueChecker(IntValueChecker): ...
class Uint32ValueChecker(IntValueChecker): ...
class Int64ValueChecker(IntValueChecker): ...
class Uint64ValueChecker(IntValueChecker): ...

class DoubleValueChecker:
    def CheckValue(self, proposed_value): ...
    def DefaultValue(self): ...

class FloatValueChecker(DoubleValueChecker):
    def CheckValue(self, proposed_value): ...

TYPE_TO_BYTE_SIZE_FN: Incomplete
TYPE_TO_ENCODER: Incomplete
TYPE_TO_SIZER: Incomplete
TYPE_TO_DECODER: Incomplete
FIELD_TYPE_TO_WIRE_TYPE: Incomplete
