from _typeshed import Incomplete
from collections.abc import Generator
from lark_oapi.ws.pb.google.protobuf.descriptor import FieldDescriptor as FieldDescriptor

class Any:
    type_url: Incomplete
    value: Incomplete
    def Pack(self, msg, type_url_prefix: str = 'type.googleapis.com/', deterministic=None) -> None: ...
    def Unpack(self, msg): ...
    def TypeName(self): ...
    def Is(self, descriptor): ...

class Timestamp:
    def ToJsonString(self): ...
    seconds: Incomplete
    nanos: Incomplete
    def FromJsonString(self, value) -> None: ...
    def GetCurrentTime(self) -> None: ...
    def ToNanoseconds(self): ...
    def ToMicroseconds(self): ...
    def ToMilliseconds(self): ...
    def ToSeconds(self): ...
    def FromNanoseconds(self, nanos) -> None: ...
    def FromMicroseconds(self, micros) -> None: ...
    def FromMilliseconds(self, millis) -> None: ...
    def FromSeconds(self, seconds) -> None: ...
    def ToDatetime(self, tzinfo=None): ...
    def FromDatetime(self, dt) -> None: ...

class Duration:
    def ToJsonString(self): ...
    seconds: Incomplete
    nanos: Incomplete
    def FromJsonString(self, value) -> None: ...
    def ToNanoseconds(self): ...
    def ToMicroseconds(self): ...
    def ToMilliseconds(self): ...
    def ToSeconds(self): ...
    def FromNanoseconds(self, nanos) -> None: ...
    def FromMicroseconds(self, micros) -> None: ...
    def FromMilliseconds(self, millis) -> None: ...
    def FromSeconds(self, seconds) -> None: ...
    def ToTimedelta(self): ...
    def FromTimedelta(self, td) -> None: ...

class FieldMask:
    def ToJsonString(self): ...
    def FromJsonString(self, value) -> None: ...
    def IsValidForDescriptor(self, message_descriptor): ...
    def AllFieldsFromDescriptor(self, message_descriptor) -> None: ...
    def CanonicalFormFromMask(self, mask) -> None: ...
    def Union(self, mask1, mask2) -> None: ...
    def Intersect(self, mask1, mask2) -> None: ...
    def MergeMessage(self, source, destination, replace_message_field: bool = False, replace_repeated_field: bool = False) -> None: ...

class _FieldMaskTree:
    def __init__(self, field_mask=None) -> None: ...
    def MergeFromFieldMask(self, field_mask) -> None: ...
    def AddPath(self, path) -> None: ...
    def ToFieldMask(self, field_mask) -> None: ...
    def IntersectPath(self, path, intersection) -> None: ...
    def AddLeafNodes(self, prefix, node) -> None: ...
    def MergeMessage(self, source, destination, replace_message, replace_repeated) -> None: ...

class Struct:
    def __getitem__(self, key): ...
    def __contains__(self, item) -> bool: ...
    def __setitem__(self, key, value) -> None: ...
    def __delitem__(self, key) -> None: ...
    def __len__(self) -> int: ...
    def __iter__(self): ...
    def keys(self): ...
    def values(self): ...
    def items(self): ...
    def get_or_create_list(self, key): ...
    def get_or_create_struct(self, key): ...
    def update(self, dictionary) -> None: ...

class ListValue:
    def __len__(self) -> int: ...
    def append(self, value) -> None: ...
    def extend(self, elem_seq) -> None: ...
    def __getitem__(self, index): ...
    def __setitem__(self, index, value) -> None: ...
    def __delitem__(self, key) -> None: ...
    def items(self) -> Generator[Incomplete]: ...
    def add_struct(self): ...
    def add_list(self): ...

WKTBASES: Incomplete
