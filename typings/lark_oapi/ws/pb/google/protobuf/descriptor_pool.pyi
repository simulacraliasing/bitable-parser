from lark_oapi.ws.pb.google.protobuf import descriptor as descriptor, descriptor_database as descriptor_database, text_encoding as text_encoding

class DescriptorPool:
    def __new__(cls, descriptor_db=None): ...
    def __init__(self, descriptor_db=None) -> None: ...
    def Add(self, file_desc_proto) -> None: ...
    def AddSerializedFile(self, serialized_file_desc_proto): ...
    @_Deprecated
    def AddDescriptor(self, desc) -> None: ...
    @_Deprecated
    def AddEnumDescriptor(self, enum_desc) -> None: ...
    @_Deprecated
    def AddServiceDescriptor(self, service_desc) -> None: ...
    @_Deprecated
    def AddExtensionDescriptor(self, extension) -> None: ...
    @_Deprecated
    def AddFileDescriptor(self, file_desc) -> None: ...
    def FindFileByName(self, file_name): ...
    def FindFileContainingSymbol(self, symbol): ...
    def FindMessageTypeByName(self, full_name): ...
    def FindEnumTypeByName(self, full_name): ...
    def FindFieldByName(self, full_name): ...
    def FindOneofByName(self, full_name): ...
    def FindExtensionByName(self, full_name): ...
    def FindExtensionByNumber(self, message_descriptor, number): ...
    def FindAllExtensions(self, message_descriptor): ...
    def FindServiceByName(self, full_name): ...
    def FindMethodByName(self, full_name): ...

def Default(): ...
